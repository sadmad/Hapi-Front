import {
  Symbol_default,
  T,
  _,
  baseGetTag_default,
  c,
  d,
  debounce_default,
  freeGlobal_default,
  isObjectLike_default,
  isObject_default,
  isSymbol_default,
  p,
  root_default,
  toNumber_default
} from "./chunk-AHP4RG5K.js";
import {
  require_react_dom
} from "./chunk-7QQWTS7N.js";
import {
  require_react
} from "./chunk-OE6NBOXF.js";
import {
  __commonJS,
  __require,
  __toESM
} from "./chunk-AUZ3RYOM.js";

// node_modules/stackframe/stackframe.js
var require_stackframe = __commonJS({
  "node_modules/stackframe/stackframe.js"(exports2, module2) {
    (function(root, factory) {
      "use strict";
      if (typeof define === "function" && define.amd) {
        define("stackframe", [], factory);
      } else if (typeof exports2 === "object") {
        module2.exports = factory();
      } else {
        root.StackFrame = factory();
      }
    })(exports2, function() {
      "use strict";
      function _isNumber(n) {
        return !isNaN(parseFloat(n)) && isFinite(n);
      }
      function _capitalize(str) {
        return str.charAt(0).toUpperCase() + str.substring(1);
      }
      function _getter(p3) {
        return function() {
          return this[p3];
        };
      }
      var booleanProps = ["isConstructor", "isEval", "isNative", "isToplevel"];
      var numericProps = ["columnNumber", "lineNumber"];
      var stringProps = ["fileName", "functionName", "source"];
      var arrayProps = ["args"];
      var objectProps = ["evalOrigin"];
      var props = booleanProps.concat(numericProps, stringProps, arrayProps, objectProps);
      function StackFrame(obj) {
        if (!obj)
          return;
        for (var i3 = 0; i3 < props.length; i3++) {
          if (obj[props[i3]] !== void 0) {
            this["set" + _capitalize(props[i3])](obj[props[i3]]);
          }
        }
      }
      StackFrame.prototype = {
        getArgs: function() {
          return this.args;
        },
        setArgs: function(v) {
          if (Object.prototype.toString.call(v) !== "[object Array]") {
            throw new TypeError("Args must be an Array");
          }
          this.args = v;
        },
        getEvalOrigin: function() {
          return this.evalOrigin;
        },
        setEvalOrigin: function(v) {
          if (v instanceof StackFrame) {
            this.evalOrigin = v;
          } else if (v instanceof Object) {
            this.evalOrigin = new StackFrame(v);
          } else {
            throw new TypeError("Eval Origin must be an Object or StackFrame");
          }
        },
        toString: function() {
          var fileName = this.getFileName() || "";
          var lineNumber = this.getLineNumber() || "";
          var columnNumber = this.getColumnNumber() || "";
          var functionName = this.getFunctionName() || "";
          if (this.getIsEval()) {
            if (fileName) {
              return "[eval] (" + fileName + ":" + lineNumber + ":" + columnNumber + ")";
            }
            return "[eval]:" + lineNumber + ":" + columnNumber;
          }
          if (functionName) {
            return functionName + " (" + fileName + ":" + lineNumber + ":" + columnNumber + ")";
          }
          return fileName + ":" + lineNumber + ":" + columnNumber;
        }
      };
      StackFrame.fromString = function StackFrame$$fromString(str) {
        var argsStartIndex = str.indexOf("(");
        var argsEndIndex = str.lastIndexOf(")");
        var functionName = str.substring(0, argsStartIndex);
        var args = str.substring(argsStartIndex + 1, argsEndIndex).split(",");
        var locationString = str.substring(argsEndIndex + 1);
        if (locationString.indexOf("@") === 0) {
          var parts = /@(.+?)(?::(\d+))?(?::(\d+))?$/.exec(locationString, "");
          var fileName = parts[1];
          var lineNumber = parts[2];
          var columnNumber = parts[3];
        }
        return new StackFrame({
          functionName,
          args: args || void 0,
          fileName,
          lineNumber: lineNumber || void 0,
          columnNumber: columnNumber || void 0
        });
      };
      for (var i2 = 0; i2 < booleanProps.length; i2++) {
        StackFrame.prototype["get" + _capitalize(booleanProps[i2])] = _getter(booleanProps[i2]);
        StackFrame.prototype["set" + _capitalize(booleanProps[i2])] = function(p3) {
          return function(v) {
            this[p3] = Boolean(v);
          };
        }(booleanProps[i2]);
      }
      for (var j = 0; j < numericProps.length; j++) {
        StackFrame.prototype["get" + _capitalize(numericProps[j])] = _getter(numericProps[j]);
        StackFrame.prototype["set" + _capitalize(numericProps[j])] = function(p3) {
          return function(v) {
            if (!_isNumber(v)) {
              throw new TypeError(p3 + " must be a Number");
            }
            this[p3] = Number(v);
          };
        }(numericProps[j]);
      }
      for (var k2 = 0; k2 < stringProps.length; k2++) {
        StackFrame.prototype["get" + _capitalize(stringProps[k2])] = _getter(stringProps[k2]);
        StackFrame.prototype["set" + _capitalize(stringProps[k2])] = function(p3) {
          return function(v) {
            this[p3] = String(v);
          };
        }(stringProps[k2]);
      }
      return StackFrame;
    });
  }
});

// node_modules/error-stack-parser/error-stack-parser.js
var require_error_stack_parser = __commonJS({
  "node_modules/error-stack-parser/error-stack-parser.js"(exports2, module2) {
    (function(root, factory) {
      "use strict";
      if (typeof define === "function" && define.amd) {
        define("error-stack-parser", ["stackframe"], factory);
      } else if (typeof exports2 === "object") {
        module2.exports = factory(require_stackframe());
      } else {
        root.ErrorStackParser = factory(root.StackFrame);
      }
    })(exports2, function ErrorStackParser(StackFrame) {
      "use strict";
      var FIREFOX_SAFARI_STACK_REGEXP = /(^|@)\S+:\d+/;
      var CHROME_IE_STACK_REGEXP = /^\s*at .*(\S+:\d+|\(native\))/m;
      var SAFARI_NATIVE_CODE_REGEXP = /^(eval@)?(\[native code])?$/;
      return {
        /**
         * Given an Error object, extract the most information from it.
         *
         * @param {Error} error object
         * @return {Array} of StackFrames
         */
        parse: function ErrorStackParser$$parse(error) {
          if (typeof error.stacktrace !== "undefined" || typeof error["opera#sourceloc"] !== "undefined") {
            return this.parseOpera(error);
          } else if (error.stack && error.stack.match(CHROME_IE_STACK_REGEXP)) {
            return this.parseV8OrIE(error);
          } else if (error.stack) {
            return this.parseFFOrSafari(error);
          } else {
            throw new Error("Cannot parse given Error object");
          }
        },
        // Separate line and column numbers from a string of the form: (URI:Line:Column)
        extractLocation: function ErrorStackParser$$extractLocation(urlLike) {
          if (urlLike.indexOf(":") === -1) {
            return [urlLike];
          }
          var regExp = /(.+?)(?::(\d+))?(?::(\d+))?$/;
          var parts = regExp.exec(urlLike.replace(/[()]/g, ""));
          return [parts[1], parts[2] || void 0, parts[3] || void 0];
        },
        parseV8OrIE: function ErrorStackParser$$parseV8OrIE(error) {
          var filtered = error.stack.split("\n").filter(function(line) {
            return !!line.match(CHROME_IE_STACK_REGEXP);
          }, this);
          return filtered.map(function(line) {
            if (line.indexOf("(eval ") > -1) {
              line = line.replace(/eval code/g, "eval").replace(/(\(eval at [^()]*)|(,.*$)/g, "");
            }
            var sanitizedLine = line.replace(/^\s+/, "").replace(/\(eval code/g, "(").replace(/^.*?\s+/, "");
            var location = sanitizedLine.match(/ (\(.+\)$)/);
            sanitizedLine = location ? sanitizedLine.replace(location[0], "") : sanitizedLine;
            var locationParts = this.extractLocation(location ? location[1] : sanitizedLine);
            var functionName = location && sanitizedLine || void 0;
            var fileName = ["eval", "<anonymous>"].indexOf(locationParts[0]) > -1 ? void 0 : locationParts[0];
            return new StackFrame({
              functionName,
              fileName,
              lineNumber: locationParts[1],
              columnNumber: locationParts[2],
              source: line
            });
          }, this);
        },
        parseFFOrSafari: function ErrorStackParser$$parseFFOrSafari(error) {
          var filtered = error.stack.split("\n").filter(function(line) {
            return !line.match(SAFARI_NATIVE_CODE_REGEXP);
          }, this);
          return filtered.map(function(line) {
            if (line.indexOf(" > eval") > -1) {
              line = line.replace(/ line (\d+)(?: > eval line \d+)* > eval:\d+:\d+/g, ":$1");
            }
            if (line.indexOf("@") === -1 && line.indexOf(":") === -1) {
              return new StackFrame({
                functionName: line
              });
            } else {
              var functionNameRegex = /((.*".+"[^@]*)?[^@]*)(?:@)/;
              var matches = line.match(functionNameRegex);
              var functionName = matches && matches[1] ? matches[1] : void 0;
              var locationParts = this.extractLocation(line.replace(functionNameRegex, ""));
              return new StackFrame({
                functionName,
                fileName: locationParts[0],
                lineNumber: locationParts[1],
                columnNumber: locationParts[2],
                source: line
              });
            }
          }, this);
        },
        parseOpera: function ErrorStackParser$$parseOpera(e) {
          if (!e.stacktrace || e.message.indexOf("\n") > -1 && e.message.split("\n").length > e.stacktrace.split("\n").length) {
            return this.parseOpera9(e);
          } else if (!e.stack) {
            return this.parseOpera10(e);
          } else {
            return this.parseOpera11(e);
          }
        },
        parseOpera9: function ErrorStackParser$$parseOpera9(e) {
          var lineRE = /Line (\d+).*script (?:in )?(\S+)/i;
          var lines = e.message.split("\n");
          var result = [];
          for (var i2 = 2, len = lines.length; i2 < len; i2 += 2) {
            var match = lineRE.exec(lines[i2]);
            if (match) {
              result.push(new StackFrame({
                fileName: match[2],
                lineNumber: match[1],
                source: lines[i2]
              }));
            }
          }
          return result;
        },
        parseOpera10: function ErrorStackParser$$parseOpera10(e) {
          var lineRE = /Line (\d+).*script (?:in )?(\S+)(?:: In function (\S+))?$/i;
          var lines = e.stacktrace.split("\n");
          var result = [];
          for (var i2 = 0, len = lines.length; i2 < len; i2 += 2) {
            var match = lineRE.exec(lines[i2]);
            if (match) {
              result.push(
                new StackFrame({
                  functionName: match[3] || void 0,
                  fileName: match[2],
                  lineNumber: match[1],
                  source: lines[i2]
                })
              );
            }
          }
          return result;
        },
        // Opera 10.65+ Error.stack very similar to FF/Safari
        parseOpera11: function ErrorStackParser$$parseOpera11(error) {
          var filtered = error.stack.split("\n").filter(function(line) {
            return !!line.match(FIREFOX_SAFARI_STACK_REGEXP) && !line.match(/^Error created at/);
          }, this);
          return filtered.map(function(line) {
            var tokens = line.split("@");
            var locationParts = this.extractLocation(tokens.pop());
            var functionCall = tokens.shift() || "";
            var functionName = functionCall.replace(/<anonymous function(: (\w+))?>/, "$2").replace(/\([^)]*\)/g, "") || void 0;
            var argsRaw;
            if (functionCall.match(/\(([^)]*)\)/)) {
              argsRaw = functionCall.replace(/^[^(]+\(([^)]*)\)$/, "$1");
            }
            var args = argsRaw === void 0 || argsRaw === "[arguments not available]" ? void 0 : argsRaw.split(",");
            return new StackFrame({
              functionName,
              args,
              fileName: locationParts[0],
              lineNumber: locationParts[1],
              columnNumber: locationParts[2],
              source: line
            });
          }, this);
        }
      };
    });
  }
});

// node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js
var require_use_sync_external_store_shim_development = __commonJS({
  "node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js"(exports2) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
        }
        var React11 = require_react();
        var ReactSharedInternals = React11.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
        function error(format) {
          {
            {
              for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
                args[_key2 - 1] = arguments[_key2];
              }
              printWarning("error", format, args);
            }
          }
        }
        function printWarning(level, format, args) {
          {
            var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
            var stack = ReactDebugCurrentFrame.getStackAddendum();
            if (stack !== "") {
              format += "%s";
              args = args.concat([stack]);
            }
            var argsWithFormat = args.map(function(item) {
              return String(item);
            });
            argsWithFormat.unshift("Warning: " + format);
            Function.prototype.apply.call(console[level], console, argsWithFormat);
          }
        }
        function is2(x, y2) {
          return x === y2 && (x !== 0 || 1 / x === 1 / y2) || x !== x && y2 !== y2;
        }
        var objectIs = typeof Object.is === "function" ? Object.is : is2;
        var useState5 = React11.useState, useEffect6 = React11.useEffect, useLayoutEffect = React11.useLayoutEffect, useDebugValue = React11.useDebugValue;
        var didWarnOld18Alpha = false;
        var didWarnUncachedGetSnapshot = false;
        function useSyncExternalStore2(subscribe, getSnapshot, getServerSnapshot) {
          {
            if (!didWarnOld18Alpha) {
              if (React11.startTransition !== void 0) {
                didWarnOld18Alpha = true;
                error("You are using an outdated, pre-release alpha of React 18 that does not support useSyncExternalStore. The use-sync-external-store shim will not work correctly. Upgrade to a newer pre-release.");
              }
            }
          }
          var value = getSnapshot();
          {
            if (!didWarnUncachedGetSnapshot) {
              var cachedValue = getSnapshot();
              if (!objectIs(value, cachedValue)) {
                error("The result of getSnapshot should be cached to avoid an infinite loop");
                didWarnUncachedGetSnapshot = true;
              }
            }
          }
          var _useState = useState5({
            inst: {
              value,
              getSnapshot
            }
          }), inst = _useState[0].inst, forceUpdate = _useState[1];
          useLayoutEffect(function() {
            inst.value = value;
            inst.getSnapshot = getSnapshot;
            if (checkIfSnapshotChanged(inst)) {
              forceUpdate({
                inst
              });
            }
          }, [subscribe, value, getSnapshot]);
          useEffect6(function() {
            if (checkIfSnapshotChanged(inst)) {
              forceUpdate({
                inst
              });
            }
            var handleStoreChange = function() {
              if (checkIfSnapshotChanged(inst)) {
                forceUpdate({
                  inst
                });
              }
            };
            return subscribe(handleStoreChange);
          }, [subscribe]);
          useDebugValue(value);
          return value;
        }
        function checkIfSnapshotChanged(inst) {
          var latestGetSnapshot = inst.getSnapshot;
          var prevValue = inst.value;
          try {
            var nextValue = latestGetSnapshot();
            return !objectIs(prevValue, nextValue);
          } catch (error2) {
            return true;
          }
        }
        function useSyncExternalStore$12(subscribe, getSnapshot, getServerSnapshot) {
          return getSnapshot();
        }
        var canUseDOM = !!(typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.document.createElement !== "undefined");
        var isServerEnvironment = !canUseDOM;
        var shim = isServerEnvironment ? useSyncExternalStore$12 : useSyncExternalStore2;
        var useSyncExternalStore$2 = React11.useSyncExternalStore !== void 0 ? React11.useSyncExternalStore : shim;
        exports2.useSyncExternalStore = useSyncExternalStore$2;
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
        }
      })();
    }
  }
});

// node_modules/use-sync-external-store/shim/index.js
var require_shim = __commonJS({
  "node_modules/use-sync-external-store/shim/index.js"(exports2, module2) {
    "use strict";
    if (false) {
      module2.exports = null;
    } else {
      module2.exports = require_use_sync_external_store_shim_development();
    }
  }
});

// node_modules/es-errors/index.js
var require_es_errors = __commonJS({
  "node_modules/es-errors/index.js"(exports2, module2) {
    "use strict";
    module2.exports = Error;
  }
});

// node_modules/es-errors/eval.js
var require_eval = __commonJS({
  "node_modules/es-errors/eval.js"(exports2, module2) {
    "use strict";
    module2.exports = EvalError;
  }
});

// node_modules/es-errors/range.js
var require_range = __commonJS({
  "node_modules/es-errors/range.js"(exports2, module2) {
    "use strict";
    module2.exports = RangeError;
  }
});

// node_modules/es-errors/ref.js
var require_ref = __commonJS({
  "node_modules/es-errors/ref.js"(exports2, module2) {
    "use strict";
    module2.exports = ReferenceError;
  }
});

// node_modules/es-errors/syntax.js
var require_syntax = __commonJS({
  "node_modules/es-errors/syntax.js"(exports2, module2) {
    "use strict";
    module2.exports = SyntaxError;
  }
});

// node_modules/es-errors/type.js
var require_type = __commonJS({
  "node_modules/es-errors/type.js"(exports2, module2) {
    "use strict";
    module2.exports = TypeError;
  }
});

// node_modules/es-errors/uri.js
var require_uri = __commonJS({
  "node_modules/es-errors/uri.js"(exports2, module2) {
    "use strict";
    module2.exports = URIError;
  }
});

// node_modules/has-symbols/shams.js
var require_shams = __commonJS({
  "node_modules/has-symbols/shams.js"(exports2, module2) {
    "use strict";
    module2.exports = function hasSymbols() {
      if (typeof Symbol !== "function" || typeof Object.getOwnPropertySymbols !== "function") {
        return false;
      }
      if (typeof Symbol.iterator === "symbol") {
        return true;
      }
      var obj = {};
      var sym = Symbol("test");
      var symObj = Object(sym);
      if (typeof sym === "string") {
        return false;
      }
      if (Object.prototype.toString.call(sym) !== "[object Symbol]") {
        return false;
      }
      if (Object.prototype.toString.call(symObj) !== "[object Symbol]") {
        return false;
      }
      var symVal = 42;
      obj[sym] = symVal;
      for (sym in obj) {
        return false;
      }
      if (typeof Object.keys === "function" && Object.keys(obj).length !== 0) {
        return false;
      }
      if (typeof Object.getOwnPropertyNames === "function" && Object.getOwnPropertyNames(obj).length !== 0) {
        return false;
      }
      var syms = Object.getOwnPropertySymbols(obj);
      if (syms.length !== 1 || syms[0] !== sym) {
        return false;
      }
      if (!Object.prototype.propertyIsEnumerable.call(obj, sym)) {
        return false;
      }
      if (typeof Object.getOwnPropertyDescriptor === "function") {
        var descriptor = Object.getOwnPropertyDescriptor(obj, sym);
        if (descriptor.value !== symVal || descriptor.enumerable !== true) {
          return false;
        }
      }
      return true;
    };
  }
});

// node_modules/has-symbols/index.js
var require_has_symbols = __commonJS({
  "node_modules/has-symbols/index.js"(exports2, module2) {
    "use strict";
    var origSymbol = typeof Symbol !== "undefined" && Symbol;
    var hasSymbolSham = require_shams();
    module2.exports = function hasNativeSymbols() {
      if (typeof origSymbol !== "function") {
        return false;
      }
      if (typeof Symbol !== "function") {
        return false;
      }
      if (typeof origSymbol("foo") !== "symbol") {
        return false;
      }
      if (typeof Symbol("bar") !== "symbol") {
        return false;
      }
      return hasSymbolSham();
    };
  }
});

// node_modules/has-proto/index.js
var require_has_proto = __commonJS({
  "node_modules/has-proto/index.js"(exports2, module2) {
    "use strict";
    var test = {
      __proto__: null,
      foo: {}
    };
    var $Object = Object;
    module2.exports = function hasProto() {
      return { __proto__: test }.foo === test.foo && !(test instanceof $Object);
    };
  }
});

// node_modules/function-bind/implementation.js
var require_implementation = __commonJS({
  "node_modules/function-bind/implementation.js"(exports2, module2) {
    "use strict";
    var ERROR_MESSAGE = "Function.prototype.bind called on incompatible ";
    var toStr = Object.prototype.toString;
    var max = Math.max;
    var funcType = "[object Function]";
    var concatty = function concatty2(a, b) {
      var arr = [];
      for (var i2 = 0; i2 < a.length; i2 += 1) {
        arr[i2] = a[i2];
      }
      for (var j = 0; j < b.length; j += 1) {
        arr[j + a.length] = b[j];
      }
      return arr;
    };
    var slicy = function slicy2(arrLike, offset) {
      var arr = [];
      for (var i2 = offset || 0, j = 0; i2 < arrLike.length; i2 += 1, j += 1) {
        arr[j] = arrLike[i2];
      }
      return arr;
    };
    var joiny = function(arr, joiner) {
      var str = "";
      for (var i2 = 0; i2 < arr.length; i2 += 1) {
        str += arr[i2];
        if (i2 + 1 < arr.length) {
          str += joiner;
        }
      }
      return str;
    };
    module2.exports = function bind(that) {
      var target = this;
      if (typeof target !== "function" || toStr.apply(target) !== funcType) {
        throw new TypeError(ERROR_MESSAGE + target);
      }
      var args = slicy(arguments, 1);
      var bound;
      var binder = function() {
        if (this instanceof bound) {
          var result = target.apply(
            this,
            concatty(args, arguments)
          );
          if (Object(result) === result) {
            return result;
          }
          return this;
        }
        return target.apply(
          that,
          concatty(args, arguments)
        );
      };
      var boundLength = max(0, target.length - args.length);
      var boundArgs = [];
      for (var i2 = 0; i2 < boundLength; i2++) {
        boundArgs[i2] = "$" + i2;
      }
      bound = Function("binder", "return function (" + joiny(boundArgs, ",") + "){ return binder.apply(this,arguments); }")(binder);
      if (target.prototype) {
        var Empty = function Empty2() {
        };
        Empty.prototype = target.prototype;
        bound.prototype = new Empty();
        Empty.prototype = null;
      }
      return bound;
    };
  }
});

// node_modules/function-bind/index.js
var require_function_bind = __commonJS({
  "node_modules/function-bind/index.js"(exports2, module2) {
    "use strict";
    var implementation = require_implementation();
    module2.exports = Function.prototype.bind || implementation;
  }
});

// node_modules/hasown/index.js
var require_hasown = __commonJS({
  "node_modules/hasown/index.js"(exports2, module2) {
    "use strict";
    var call = Function.prototype.call;
    var $hasOwn = Object.prototype.hasOwnProperty;
    var bind = require_function_bind();
    module2.exports = bind.call(call, $hasOwn);
  }
});

// node_modules/get-intrinsic/index.js
var require_get_intrinsic = __commonJS({
  "node_modules/get-intrinsic/index.js"(exports2, module2) {
    "use strict";
    var undefined2;
    var $Error = require_es_errors();
    var $EvalError = require_eval();
    var $RangeError = require_range();
    var $ReferenceError = require_ref();
    var $SyntaxError = require_syntax();
    var $TypeError = require_type();
    var $URIError = require_uri();
    var $Function = Function;
    var getEvalledConstructor = function(expressionSyntax) {
      try {
        return $Function('"use strict"; return (' + expressionSyntax + ").constructor;")();
      } catch (e) {
      }
    };
    var $gOPD = Object.getOwnPropertyDescriptor;
    if ($gOPD) {
      try {
        $gOPD({}, "");
      } catch (e) {
        $gOPD = null;
      }
    }
    var throwTypeError = function() {
      throw new $TypeError();
    };
    var ThrowTypeError = $gOPD ? function() {
      try {
        arguments.callee;
        return throwTypeError;
      } catch (calleeThrows) {
        try {
          return $gOPD(arguments, "callee").get;
        } catch (gOPDthrows) {
          return throwTypeError;
        }
      }
    }() : throwTypeError;
    var hasSymbols = require_has_symbols()();
    var hasProto = require_has_proto()();
    var getProto = Object.getPrototypeOf || (hasProto ? function(x) {
      return x.__proto__;
    } : null);
    var needsEval = {};
    var TypedArray = typeof Uint8Array === "undefined" || !getProto ? undefined2 : getProto(Uint8Array);
    var INTRINSICS = {
      __proto__: null,
      "%AggregateError%": typeof AggregateError === "undefined" ? undefined2 : AggregateError,
      "%Array%": Array,
      "%ArrayBuffer%": typeof ArrayBuffer === "undefined" ? undefined2 : ArrayBuffer,
      "%ArrayIteratorPrototype%": hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined2,
      "%AsyncFromSyncIteratorPrototype%": undefined2,
      "%AsyncFunction%": needsEval,
      "%AsyncGenerator%": needsEval,
      "%AsyncGeneratorFunction%": needsEval,
      "%AsyncIteratorPrototype%": needsEval,
      "%Atomics%": typeof Atomics === "undefined" ? undefined2 : Atomics,
      "%BigInt%": typeof BigInt === "undefined" ? undefined2 : BigInt,
      "%BigInt64Array%": typeof BigInt64Array === "undefined" ? undefined2 : BigInt64Array,
      "%BigUint64Array%": typeof BigUint64Array === "undefined" ? undefined2 : BigUint64Array,
      "%Boolean%": Boolean,
      "%DataView%": typeof DataView === "undefined" ? undefined2 : DataView,
      "%Date%": Date,
      "%decodeURI%": decodeURI,
      "%decodeURIComponent%": decodeURIComponent,
      "%encodeURI%": encodeURI,
      "%encodeURIComponent%": encodeURIComponent,
      "%Error%": $Error,
      "%eval%": eval,
      // eslint-disable-line no-eval
      "%EvalError%": $EvalError,
      "%Float32Array%": typeof Float32Array === "undefined" ? undefined2 : Float32Array,
      "%Float64Array%": typeof Float64Array === "undefined" ? undefined2 : Float64Array,
      "%FinalizationRegistry%": typeof FinalizationRegistry === "undefined" ? undefined2 : FinalizationRegistry,
      "%Function%": $Function,
      "%GeneratorFunction%": needsEval,
      "%Int8Array%": typeof Int8Array === "undefined" ? undefined2 : Int8Array,
      "%Int16Array%": typeof Int16Array === "undefined" ? undefined2 : Int16Array,
      "%Int32Array%": typeof Int32Array === "undefined" ? undefined2 : Int32Array,
      "%isFinite%": isFinite,
      "%isNaN%": isNaN,
      "%IteratorPrototype%": hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined2,
      "%JSON%": typeof JSON === "object" ? JSON : undefined2,
      "%Map%": typeof Map === "undefined" ? undefined2 : Map,
      "%MapIteratorPrototype%": typeof Map === "undefined" || !hasSymbols || !getProto ? undefined2 : getProto((/* @__PURE__ */ new Map())[Symbol.iterator]()),
      "%Math%": Math,
      "%Number%": Number,
      "%Object%": Object,
      "%parseFloat%": parseFloat,
      "%parseInt%": parseInt,
      "%Promise%": typeof Promise === "undefined" ? undefined2 : Promise,
      "%Proxy%": typeof Proxy === "undefined" ? undefined2 : Proxy,
      "%RangeError%": $RangeError,
      "%ReferenceError%": $ReferenceError,
      "%Reflect%": typeof Reflect === "undefined" ? undefined2 : Reflect,
      "%RegExp%": RegExp,
      "%Set%": typeof Set === "undefined" ? undefined2 : Set,
      "%SetIteratorPrototype%": typeof Set === "undefined" || !hasSymbols || !getProto ? undefined2 : getProto((/* @__PURE__ */ new Set())[Symbol.iterator]()),
      "%SharedArrayBuffer%": typeof SharedArrayBuffer === "undefined" ? undefined2 : SharedArrayBuffer,
      "%String%": String,
      "%StringIteratorPrototype%": hasSymbols && getProto ? getProto(""[Symbol.iterator]()) : undefined2,
      "%Symbol%": hasSymbols ? Symbol : undefined2,
      "%SyntaxError%": $SyntaxError,
      "%ThrowTypeError%": ThrowTypeError,
      "%TypedArray%": TypedArray,
      "%TypeError%": $TypeError,
      "%Uint8Array%": typeof Uint8Array === "undefined" ? undefined2 : Uint8Array,
      "%Uint8ClampedArray%": typeof Uint8ClampedArray === "undefined" ? undefined2 : Uint8ClampedArray,
      "%Uint16Array%": typeof Uint16Array === "undefined" ? undefined2 : Uint16Array,
      "%Uint32Array%": typeof Uint32Array === "undefined" ? undefined2 : Uint32Array,
      "%URIError%": $URIError,
      "%WeakMap%": typeof WeakMap === "undefined" ? undefined2 : WeakMap,
      "%WeakRef%": typeof WeakRef === "undefined" ? undefined2 : WeakRef,
      "%WeakSet%": typeof WeakSet === "undefined" ? undefined2 : WeakSet
    };
    if (getProto) {
      try {
        null.error;
      } catch (e) {
        errorProto = getProto(getProto(e));
        INTRINSICS["%Error.prototype%"] = errorProto;
      }
    }
    var errorProto;
    var doEval = function doEval2(name) {
      var value;
      if (name === "%AsyncFunction%") {
        value = getEvalledConstructor("async function () {}");
      } else if (name === "%GeneratorFunction%") {
        value = getEvalledConstructor("function* () {}");
      } else if (name === "%AsyncGeneratorFunction%") {
        value = getEvalledConstructor("async function* () {}");
      } else if (name === "%AsyncGenerator%") {
        var fn = doEval2("%AsyncGeneratorFunction%");
        if (fn) {
          value = fn.prototype;
        }
      } else if (name === "%AsyncIteratorPrototype%") {
        var gen = doEval2("%AsyncGenerator%");
        if (gen && getProto) {
          value = getProto(gen.prototype);
        }
      }
      INTRINSICS[name] = value;
      return value;
    };
    var LEGACY_ALIASES = {
      __proto__: null,
      "%ArrayBufferPrototype%": ["ArrayBuffer", "prototype"],
      "%ArrayPrototype%": ["Array", "prototype"],
      "%ArrayProto_entries%": ["Array", "prototype", "entries"],
      "%ArrayProto_forEach%": ["Array", "prototype", "forEach"],
      "%ArrayProto_keys%": ["Array", "prototype", "keys"],
      "%ArrayProto_values%": ["Array", "prototype", "values"],
      "%AsyncFunctionPrototype%": ["AsyncFunction", "prototype"],
      "%AsyncGenerator%": ["AsyncGeneratorFunction", "prototype"],
      "%AsyncGeneratorPrototype%": ["AsyncGeneratorFunction", "prototype", "prototype"],
      "%BooleanPrototype%": ["Boolean", "prototype"],
      "%DataViewPrototype%": ["DataView", "prototype"],
      "%DatePrototype%": ["Date", "prototype"],
      "%ErrorPrototype%": ["Error", "prototype"],
      "%EvalErrorPrototype%": ["EvalError", "prototype"],
      "%Float32ArrayPrototype%": ["Float32Array", "prototype"],
      "%Float64ArrayPrototype%": ["Float64Array", "prototype"],
      "%FunctionPrototype%": ["Function", "prototype"],
      "%Generator%": ["GeneratorFunction", "prototype"],
      "%GeneratorPrototype%": ["GeneratorFunction", "prototype", "prototype"],
      "%Int8ArrayPrototype%": ["Int8Array", "prototype"],
      "%Int16ArrayPrototype%": ["Int16Array", "prototype"],
      "%Int32ArrayPrototype%": ["Int32Array", "prototype"],
      "%JSONParse%": ["JSON", "parse"],
      "%JSONStringify%": ["JSON", "stringify"],
      "%MapPrototype%": ["Map", "prototype"],
      "%NumberPrototype%": ["Number", "prototype"],
      "%ObjectPrototype%": ["Object", "prototype"],
      "%ObjProto_toString%": ["Object", "prototype", "toString"],
      "%ObjProto_valueOf%": ["Object", "prototype", "valueOf"],
      "%PromisePrototype%": ["Promise", "prototype"],
      "%PromiseProto_then%": ["Promise", "prototype", "then"],
      "%Promise_all%": ["Promise", "all"],
      "%Promise_reject%": ["Promise", "reject"],
      "%Promise_resolve%": ["Promise", "resolve"],
      "%RangeErrorPrototype%": ["RangeError", "prototype"],
      "%ReferenceErrorPrototype%": ["ReferenceError", "prototype"],
      "%RegExpPrototype%": ["RegExp", "prototype"],
      "%SetPrototype%": ["Set", "prototype"],
      "%SharedArrayBufferPrototype%": ["SharedArrayBuffer", "prototype"],
      "%StringPrototype%": ["String", "prototype"],
      "%SymbolPrototype%": ["Symbol", "prototype"],
      "%SyntaxErrorPrototype%": ["SyntaxError", "prototype"],
      "%TypedArrayPrototype%": ["TypedArray", "prototype"],
      "%TypeErrorPrototype%": ["TypeError", "prototype"],
      "%Uint8ArrayPrototype%": ["Uint8Array", "prototype"],
      "%Uint8ClampedArrayPrototype%": ["Uint8ClampedArray", "prototype"],
      "%Uint16ArrayPrototype%": ["Uint16Array", "prototype"],
      "%Uint32ArrayPrototype%": ["Uint32Array", "prototype"],
      "%URIErrorPrototype%": ["URIError", "prototype"],
      "%WeakMapPrototype%": ["WeakMap", "prototype"],
      "%WeakSetPrototype%": ["WeakSet", "prototype"]
    };
    var bind = require_function_bind();
    var hasOwn = require_hasown();
    var $concat = bind.call(Function.call, Array.prototype.concat);
    var $spliceApply = bind.call(Function.apply, Array.prototype.splice);
    var $replace = bind.call(Function.call, String.prototype.replace);
    var $strSlice = bind.call(Function.call, String.prototype.slice);
    var $exec = bind.call(Function.call, RegExp.prototype.exec);
    var rePropName2 = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g;
    var reEscapeChar2 = /\\(\\)?/g;
    var stringToPath2 = function stringToPath3(string) {
      var first = $strSlice(string, 0, 1);
      var last2 = $strSlice(string, -1);
      if (first === "%" && last2 !== "%") {
        throw new $SyntaxError("invalid intrinsic syntax, expected closing `%`");
      } else if (last2 === "%" && first !== "%") {
        throw new $SyntaxError("invalid intrinsic syntax, expected opening `%`");
      }
      var result = [];
      $replace(string, rePropName2, function(match, number, quote, subString) {
        result[result.length] = quote ? $replace(subString, reEscapeChar2, "$1") : number || match;
      });
      return result;
    };
    var getBaseIntrinsic = function getBaseIntrinsic2(name, allowMissing) {
      var intrinsicName = name;
      var alias;
      if (hasOwn(LEGACY_ALIASES, intrinsicName)) {
        alias = LEGACY_ALIASES[intrinsicName];
        intrinsicName = "%" + alias[0] + "%";
      }
      if (hasOwn(INTRINSICS, intrinsicName)) {
        var value = INTRINSICS[intrinsicName];
        if (value === needsEval) {
          value = doEval(intrinsicName);
        }
        if (typeof value === "undefined" && !allowMissing) {
          throw new $TypeError("intrinsic " + name + " exists, but is not available. Please file an issue!");
        }
        return {
          alias,
          name: intrinsicName,
          value
        };
      }
      throw new $SyntaxError("intrinsic " + name + " does not exist!");
    };
    module2.exports = function GetIntrinsic(name, allowMissing) {
      if (typeof name !== "string" || name.length === 0) {
        throw new $TypeError("intrinsic name must be a non-empty string");
      }
      if (arguments.length > 1 && typeof allowMissing !== "boolean") {
        throw new $TypeError('"allowMissing" argument must be a boolean');
      }
      if ($exec(/^%?[^%]*%?$/, name) === null) {
        throw new $SyntaxError("`%` may not be present anywhere but at the beginning and end of the intrinsic name");
      }
      var parts = stringToPath2(name);
      var intrinsicBaseName = parts.length > 0 ? parts[0] : "";
      var intrinsic = getBaseIntrinsic("%" + intrinsicBaseName + "%", allowMissing);
      var intrinsicRealName = intrinsic.name;
      var value = intrinsic.value;
      var skipFurtherCaching = false;
      var alias = intrinsic.alias;
      if (alias) {
        intrinsicBaseName = alias[0];
        $spliceApply(parts, $concat([0, 1], alias));
      }
      for (var i2 = 1, isOwn = true; i2 < parts.length; i2 += 1) {
        var part = parts[i2];
        var first = $strSlice(part, 0, 1);
        var last2 = $strSlice(part, -1);
        if ((first === '"' || first === "'" || first === "`" || (last2 === '"' || last2 === "'" || last2 === "`")) && first !== last2) {
          throw new $SyntaxError("property names with quotes must have matching quotes");
        }
        if (part === "constructor" || !isOwn) {
          skipFurtherCaching = true;
        }
        intrinsicBaseName += "." + part;
        intrinsicRealName = "%" + intrinsicBaseName + "%";
        if (hasOwn(INTRINSICS, intrinsicRealName)) {
          value = INTRINSICS[intrinsicRealName];
        } else if (value != null) {
          if (!(part in value)) {
            if (!allowMissing) {
              throw new $TypeError("base intrinsic for " + name + " exists, but the property is not available.");
            }
            return void 0;
          }
          if ($gOPD && i2 + 1 >= parts.length) {
            var desc = $gOPD(value, part);
            isOwn = !!desc;
            if (isOwn && "get" in desc && !("originalValue" in desc.get)) {
              value = desc.get;
            } else {
              value = value[part];
            }
          } else {
            isOwn = hasOwn(value, part);
            value = value[part];
          }
          if (isOwn && !skipFurtherCaching) {
            INTRINSICS[intrinsicRealName] = value;
          }
        }
      }
      return value;
    };
  }
});

// node_modules/es-define-property/index.js
var require_es_define_property = __commonJS({
  "node_modules/es-define-property/index.js"(exports2, module2) {
    "use strict";
    var GetIntrinsic = require_get_intrinsic();
    var $defineProperty = GetIntrinsic("%Object.defineProperty%", true) || false;
    if ($defineProperty) {
      try {
        $defineProperty({}, "a", { value: 1 });
      } catch (e) {
        $defineProperty = false;
      }
    }
    module2.exports = $defineProperty;
  }
});

// node_modules/gopd/index.js
var require_gopd = __commonJS({
  "node_modules/gopd/index.js"(exports2, module2) {
    "use strict";
    var GetIntrinsic = require_get_intrinsic();
    var $gOPD = GetIntrinsic("%Object.getOwnPropertyDescriptor%", true);
    if ($gOPD) {
      try {
        $gOPD([], "length");
      } catch (e) {
        $gOPD = null;
      }
    }
    module2.exports = $gOPD;
  }
});

// node_modules/define-data-property/index.js
var require_define_data_property = __commonJS({
  "node_modules/define-data-property/index.js"(exports2, module2) {
    "use strict";
    var $defineProperty = require_es_define_property();
    var $SyntaxError = require_syntax();
    var $TypeError = require_type();
    var gopd = require_gopd();
    module2.exports = function defineDataProperty(obj, property2, value) {
      if (!obj || typeof obj !== "object" && typeof obj !== "function") {
        throw new $TypeError("`obj` must be an object or a function`");
      }
      if (typeof property2 !== "string" && typeof property2 !== "symbol") {
        throw new $TypeError("`property` must be a string or a symbol`");
      }
      if (arguments.length > 3 && typeof arguments[3] !== "boolean" && arguments[3] !== null) {
        throw new $TypeError("`nonEnumerable`, if provided, must be a boolean or null");
      }
      if (arguments.length > 4 && typeof arguments[4] !== "boolean" && arguments[4] !== null) {
        throw new $TypeError("`nonWritable`, if provided, must be a boolean or null");
      }
      if (arguments.length > 5 && typeof arguments[5] !== "boolean" && arguments[5] !== null) {
        throw new $TypeError("`nonConfigurable`, if provided, must be a boolean or null");
      }
      if (arguments.length > 6 && typeof arguments[6] !== "boolean") {
        throw new $TypeError("`loose`, if provided, must be a boolean");
      }
      var nonEnumerable = arguments.length > 3 ? arguments[3] : null;
      var nonWritable = arguments.length > 4 ? arguments[4] : null;
      var nonConfigurable = arguments.length > 5 ? arguments[5] : null;
      var loose = arguments.length > 6 ? arguments[6] : false;
      var desc = !!gopd && gopd(obj, property2);
      if ($defineProperty) {
        $defineProperty(obj, property2, {
          configurable: nonConfigurable === null && desc ? desc.configurable : !nonConfigurable,
          enumerable: nonEnumerable === null && desc ? desc.enumerable : !nonEnumerable,
          value,
          writable: nonWritable === null && desc ? desc.writable : !nonWritable
        });
      } else if (loose || !nonEnumerable && !nonWritable && !nonConfigurable) {
        obj[property2] = value;
      } else {
        throw new $SyntaxError("This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.");
      }
    };
  }
});

// node_modules/has-property-descriptors/index.js
var require_has_property_descriptors = __commonJS({
  "node_modules/has-property-descriptors/index.js"(exports2, module2) {
    "use strict";
    var $defineProperty = require_es_define_property();
    var hasPropertyDescriptors = function hasPropertyDescriptors2() {
      return !!$defineProperty;
    };
    hasPropertyDescriptors.hasArrayLengthDefineBug = function hasArrayLengthDefineBug() {
      if (!$defineProperty) {
        return null;
      }
      try {
        return $defineProperty([], "length", { value: 1 }).length !== 1;
      } catch (e) {
        return true;
      }
    };
    module2.exports = hasPropertyDescriptors;
  }
});

// node_modules/set-function-length/index.js
var require_set_function_length = __commonJS({
  "node_modules/set-function-length/index.js"(exports2, module2) {
    "use strict";
    var GetIntrinsic = require_get_intrinsic();
    var define2 = require_define_data_property();
    var hasDescriptors = require_has_property_descriptors()();
    var gOPD = require_gopd();
    var $TypeError = require_type();
    var $floor = GetIntrinsic("%Math.floor%");
    module2.exports = function setFunctionLength(fn, length) {
      if (typeof fn !== "function") {
        throw new $TypeError("`fn` is not a function");
      }
      if (typeof length !== "number" || length < 0 || length > 4294967295 || $floor(length) !== length) {
        throw new $TypeError("`length` must be a positive 32-bit integer");
      }
      var loose = arguments.length > 2 && !!arguments[2];
      var functionLengthIsConfigurable = true;
      var functionLengthIsWritable = true;
      if ("length" in fn && gOPD) {
        var desc = gOPD(fn, "length");
        if (desc && !desc.configurable) {
          functionLengthIsConfigurable = false;
        }
        if (desc && !desc.writable) {
          functionLengthIsWritable = false;
        }
      }
      if (functionLengthIsConfigurable || functionLengthIsWritable || !loose) {
        if (hasDescriptors) {
          define2(
            /** @type {Parameters<define>[0]} */
            fn,
            "length",
            length,
            true,
            true
          );
        } else {
          define2(
            /** @type {Parameters<define>[0]} */
            fn,
            "length",
            length
          );
        }
      }
      return fn;
    };
  }
});

// node_modules/call-bind/index.js
var require_call_bind = __commonJS({
  "node_modules/call-bind/index.js"(exports2, module2) {
    "use strict";
    var bind = require_function_bind();
    var GetIntrinsic = require_get_intrinsic();
    var setFunctionLength = require_set_function_length();
    var $TypeError = require_type();
    var $apply = GetIntrinsic("%Function.prototype.apply%");
    var $call = GetIntrinsic("%Function.prototype.call%");
    var $reflectApply = GetIntrinsic("%Reflect.apply%", true) || bind.call($call, $apply);
    var $defineProperty = require_es_define_property();
    var $max = GetIntrinsic("%Math.max%");
    module2.exports = function callBind(originalFunction) {
      if (typeof originalFunction !== "function") {
        throw new $TypeError("a function is required");
      }
      var func = $reflectApply(bind, $call, arguments);
      return setFunctionLength(
        func,
        1 + $max(0, originalFunction.length - (arguments.length - 1)),
        true
      );
    };
    var applyBind = function applyBind2() {
      return $reflectApply(bind, $apply, arguments);
    };
    if ($defineProperty) {
      $defineProperty(module2.exports, "apply", { value: applyBind });
    } else {
      module2.exports.apply = applyBind;
    }
  }
});

// node_modules/call-bind/callBound.js
var require_callBound = __commonJS({
  "node_modules/call-bind/callBound.js"(exports2, module2) {
    "use strict";
    var GetIntrinsic = require_get_intrinsic();
    var callBind = require_call_bind();
    var $indexOf = callBind(GetIntrinsic("String.prototype.indexOf"));
    module2.exports = function callBoundIntrinsic(name, allowMissing) {
      var intrinsic = GetIntrinsic(name, !!allowMissing);
      if (typeof intrinsic === "function" && $indexOf(name, ".prototype.") > -1) {
        return callBind(intrinsic);
      }
      return intrinsic;
    };
  }
});

// (disabled):node_modules/object-inspect/util.inspect
var require_util = __commonJS({
  "(disabled):node_modules/object-inspect/util.inspect"() {
  }
});

// node_modules/object-inspect/index.js
var require_object_inspect = __commonJS({
  "node_modules/object-inspect/index.js"(exports2, module2) {
    var hasMap = typeof Map === "function" && Map.prototype;
    var mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, "size") : null;
    var mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === "function" ? mapSizeDescriptor.get : null;
    var mapForEach = hasMap && Map.prototype.forEach;
    var hasSet = typeof Set === "function" && Set.prototype;
    var setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, "size") : null;
    var setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === "function" ? setSizeDescriptor.get : null;
    var setForEach = hasSet && Set.prototype.forEach;
    var hasWeakMap = typeof WeakMap === "function" && WeakMap.prototype;
    var weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;
    var hasWeakSet = typeof WeakSet === "function" && WeakSet.prototype;
    var weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;
    var hasWeakRef = typeof WeakRef === "function" && WeakRef.prototype;
    var weakRefDeref = hasWeakRef ? WeakRef.prototype.deref : null;
    var booleanValueOf = Boolean.prototype.valueOf;
    var objectToString = Object.prototype.toString;
    var functionToString = Function.prototype.toString;
    var $match = String.prototype.match;
    var $slice = String.prototype.slice;
    var $replace = String.prototype.replace;
    var $toUpperCase = String.prototype.toUpperCase;
    var $toLowerCase = String.prototype.toLowerCase;
    var $test = RegExp.prototype.test;
    var $concat = Array.prototype.concat;
    var $join = Array.prototype.join;
    var $arrSlice = Array.prototype.slice;
    var $floor = Math.floor;
    var bigIntValueOf = typeof BigInt === "function" ? BigInt.prototype.valueOf : null;
    var gOPS = Object.getOwnPropertySymbols;
    var symToString = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? Symbol.prototype.toString : null;
    var hasShammedSymbols = typeof Symbol === "function" && typeof Symbol.iterator === "object";
    var toStringTag = typeof Symbol === "function" && Symbol.toStringTag && (typeof Symbol.toStringTag === hasShammedSymbols ? "object" : "symbol") ? Symbol.toStringTag : null;
    var isEnumerable = Object.prototype.propertyIsEnumerable;
    var gPO = (typeof Reflect === "function" ? Reflect.getPrototypeOf : Object.getPrototypeOf) || ([].__proto__ === Array.prototype ? function(O) {
      return O.__proto__;
    } : null);
    function addNumericSeparator(num, str) {
      if (num === Infinity || num === -Infinity || num !== num || num && num > -1e3 && num < 1e3 || $test.call(/e/, str)) {
        return str;
      }
      var sepRegex = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;
      if (typeof num === "number") {
        var int = num < 0 ? -$floor(-num) : $floor(num);
        if (int !== num) {
          var intStr = String(int);
          var dec = $slice.call(str, intStr.length + 1);
          return $replace.call(intStr, sepRegex, "$&_") + "." + $replace.call($replace.call(dec, /([0-9]{3})/g, "$&_"), /_$/, "");
        }
      }
      return $replace.call(str, sepRegex, "$&_");
    }
    var utilInspect = require_util();
    var inspectCustom = utilInspect.custom;
    var inspectSymbol = isSymbol(inspectCustom) ? inspectCustom : null;
    module2.exports = function inspect_(obj, options, depth, seen) {
      var opts = options || {};
      if (has(opts, "quoteStyle") && (opts.quoteStyle !== "single" && opts.quoteStyle !== "double")) {
        throw new TypeError('option "quoteStyle" must be "single" or "double"');
      }
      if (has(opts, "maxStringLength") && (typeof opts.maxStringLength === "number" ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity : opts.maxStringLength !== null)) {
        throw new TypeError('option "maxStringLength", if provided, must be a positive integer, Infinity, or `null`');
      }
      var customInspect = has(opts, "customInspect") ? opts.customInspect : true;
      if (typeof customInspect !== "boolean" && customInspect !== "symbol") {
        throw new TypeError("option \"customInspect\", if provided, must be `true`, `false`, or `'symbol'`");
      }
      if (has(opts, "indent") && opts.indent !== null && opts.indent !== "	" && !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0)) {
        throw new TypeError('option "indent" must be "\\t", an integer > 0, or `null`');
      }
      if (has(opts, "numericSeparator") && typeof opts.numericSeparator !== "boolean") {
        throw new TypeError('option "numericSeparator", if provided, must be `true` or `false`');
      }
      var numericSeparator = opts.numericSeparator;
      if (typeof obj === "undefined") {
        return "undefined";
      }
      if (obj === null) {
        return "null";
      }
      if (typeof obj === "boolean") {
        return obj ? "true" : "false";
      }
      if (typeof obj === "string") {
        return inspectString(obj, opts);
      }
      if (typeof obj === "number") {
        if (obj === 0) {
          return Infinity / obj > 0 ? "0" : "-0";
        }
        var str = String(obj);
        return numericSeparator ? addNumericSeparator(obj, str) : str;
      }
      if (typeof obj === "bigint") {
        var bigIntStr = String(obj) + "n";
        return numericSeparator ? addNumericSeparator(obj, bigIntStr) : bigIntStr;
      }
      var maxDepth = typeof opts.depth === "undefined" ? 5 : opts.depth;
      if (typeof depth === "undefined") {
        depth = 0;
      }
      if (depth >= maxDepth && maxDepth > 0 && typeof obj === "object") {
        return isArray2(obj) ? "[Array]" : "[Object]";
      }
      var indent = getIndent(opts, depth);
      if (typeof seen === "undefined") {
        seen = [];
      } else if (indexOf(seen, obj) >= 0) {
        return "[Circular]";
      }
      function inspect(value, from, noIndent) {
        if (from) {
          seen = $arrSlice.call(seen);
          seen.push(from);
        }
        if (noIndent) {
          var newOpts = {
            depth: opts.depth
          };
          if (has(opts, "quoteStyle")) {
            newOpts.quoteStyle = opts.quoteStyle;
          }
          return inspect_(value, newOpts, depth + 1, seen);
        }
        return inspect_(value, opts, depth + 1, seen);
      }
      if (typeof obj === "function" && !isRegExp(obj)) {
        var name = nameOf(obj);
        var keys2 = arrObjKeys(obj, inspect);
        return "[Function" + (name ? ": " + name : " (anonymous)") + "]" + (keys2.length > 0 ? " { " + $join.call(keys2, ", ") + " }" : "");
      }
      if (isSymbol(obj)) {
        var symString = hasShammedSymbols ? $replace.call(String(obj), /^(Symbol\(.*\))_[^)]*$/, "$1") : symToString.call(obj);
        return typeof obj === "object" && !hasShammedSymbols ? markBoxed(symString) : symString;
      }
      if (isElement(obj)) {
        var s = "<" + $toLowerCase.call(String(obj.nodeName));
        var attrs = obj.attributes || [];
        for (var i2 = 0; i2 < attrs.length; i2++) {
          s += " " + attrs[i2].name + "=" + wrapQuotes(quote(attrs[i2].value), "double", opts);
        }
        s += ">";
        if (obj.childNodes && obj.childNodes.length) {
          s += "...";
        }
        s += "</" + $toLowerCase.call(String(obj.nodeName)) + ">";
        return s;
      }
      if (isArray2(obj)) {
        if (obj.length === 0) {
          return "[]";
        }
        var xs = arrObjKeys(obj, inspect);
        if (indent && !singleLineValues(xs)) {
          return "[" + indentedJoin(xs, indent) + "]";
        }
        return "[ " + $join.call(xs, ", ") + " ]";
      }
      if (isError2(obj)) {
        var parts = arrObjKeys(obj, inspect);
        if (!("cause" in Error.prototype) && "cause" in obj && !isEnumerable.call(obj, "cause")) {
          return "{ [" + String(obj) + "] " + $join.call($concat.call("[cause]: " + inspect(obj.cause), parts), ", ") + " }";
        }
        if (parts.length === 0) {
          return "[" + String(obj) + "]";
        }
        return "{ [" + String(obj) + "] " + $join.call(parts, ", ") + " }";
      }
      if (typeof obj === "object" && customInspect) {
        if (inspectSymbol && typeof obj[inspectSymbol] === "function" && utilInspect) {
          return utilInspect(obj, { depth: maxDepth - depth });
        } else if (customInspect !== "symbol" && typeof obj.inspect === "function") {
          return obj.inspect();
        }
      }
      if (isMap(obj)) {
        var mapParts = [];
        if (mapForEach) {
          mapForEach.call(obj, function(value, key) {
            mapParts.push(inspect(key, obj, true) + " => " + inspect(value, obj));
          });
        }
        return collectionOf("Map", mapSize.call(obj), mapParts, indent);
      }
      if (isSet(obj)) {
        var setParts = [];
        if (setForEach) {
          setForEach.call(obj, function(value) {
            setParts.push(inspect(value, obj));
          });
        }
        return collectionOf("Set", setSize.call(obj), setParts, indent);
      }
      if (isWeakMap(obj)) {
        return weakCollectionOf("WeakMap");
      }
      if (isWeakSet(obj)) {
        return weakCollectionOf("WeakSet");
      }
      if (isWeakRef(obj)) {
        return weakCollectionOf("WeakRef");
      }
      if (isNumber(obj)) {
        return markBoxed(inspect(Number(obj)));
      }
      if (isBigInt(obj)) {
        return markBoxed(inspect(bigIntValueOf.call(obj)));
      }
      if (isBoolean(obj)) {
        return markBoxed(booleanValueOf.call(obj));
      }
      if (isString(obj)) {
        return markBoxed(inspect(String(obj)));
      }
      if (typeof window !== "undefined" && obj === window) {
        return "{ [object Window] }";
      }
      if (typeof globalThis !== "undefined" && obj === globalThis || typeof global !== "undefined" && obj === global) {
        return "{ [object globalThis] }";
      }
      if (!isDate(obj) && !isRegExp(obj)) {
        var ys = arrObjKeys(obj, inspect);
        var isPlainObject2 = gPO ? gPO(obj) === Object.prototype : obj instanceof Object || obj.constructor === Object;
        var protoTag = obj instanceof Object ? "" : "null prototype";
        var stringTag3 = !isPlainObject2 && toStringTag && Object(obj) === obj && toStringTag in obj ? $slice.call(toStr(obj), 8, -1) : protoTag ? "Object" : "";
        var constructorTag = isPlainObject2 || typeof obj.constructor !== "function" ? "" : obj.constructor.name ? obj.constructor.name + " " : "";
        var tag = constructorTag + (stringTag3 || protoTag ? "[" + $join.call($concat.call([], stringTag3 || [], protoTag || []), ": ") + "] " : "");
        if (ys.length === 0) {
          return tag + "{}";
        }
        if (indent) {
          return tag + "{" + indentedJoin(ys, indent) + "}";
        }
        return tag + "{ " + $join.call(ys, ", ") + " }";
      }
      return String(obj);
    };
    function wrapQuotes(s, defaultStyle, opts) {
      var quoteChar = (opts.quoteStyle || defaultStyle) === "double" ? '"' : "'";
      return quoteChar + s + quoteChar;
    }
    function quote(s) {
      return $replace.call(String(s), /"/g, "&quot;");
    }
    function isArray2(obj) {
      return toStr(obj) === "[object Array]" && (!toStringTag || !(typeof obj === "object" && toStringTag in obj));
    }
    function isDate(obj) {
      return toStr(obj) === "[object Date]" && (!toStringTag || !(typeof obj === "object" && toStringTag in obj));
    }
    function isRegExp(obj) {
      return toStr(obj) === "[object RegExp]" && (!toStringTag || !(typeof obj === "object" && toStringTag in obj));
    }
    function isError2(obj) {
      return toStr(obj) === "[object Error]" && (!toStringTag || !(typeof obj === "object" && toStringTag in obj));
    }
    function isString(obj) {
      return toStr(obj) === "[object String]" && (!toStringTag || !(typeof obj === "object" && toStringTag in obj));
    }
    function isNumber(obj) {
      return toStr(obj) === "[object Number]" && (!toStringTag || !(typeof obj === "object" && toStringTag in obj));
    }
    function isBoolean(obj) {
      return toStr(obj) === "[object Boolean]" && (!toStringTag || !(typeof obj === "object" && toStringTag in obj));
    }
    function isSymbol(obj) {
      if (hasShammedSymbols) {
        return obj && typeof obj === "object" && obj instanceof Symbol;
      }
      if (typeof obj === "symbol") {
        return true;
      }
      if (!obj || typeof obj !== "object" || !symToString) {
        return false;
      }
      try {
        symToString.call(obj);
        return true;
      } catch (e) {
      }
      return false;
    }
    function isBigInt(obj) {
      if (!obj || typeof obj !== "object" || !bigIntValueOf) {
        return false;
      }
      try {
        bigIntValueOf.call(obj);
        return true;
      } catch (e) {
      }
      return false;
    }
    var hasOwn = Object.prototype.hasOwnProperty || function(key) {
      return key in this;
    };
    function has(obj, key) {
      return hasOwn.call(obj, key);
    }
    function toStr(obj) {
      return objectToString.call(obj);
    }
    function nameOf(f2) {
      if (f2.name) {
        return f2.name;
      }
      var m2 = $match.call(functionToString.call(f2), /^function\s*([\w$]+)/);
      if (m2) {
        return m2[1];
      }
      return null;
    }
    function indexOf(xs, x) {
      if (xs.indexOf) {
        return xs.indexOf(x);
      }
      for (var i2 = 0, l2 = xs.length; i2 < l2; i2++) {
        if (xs[i2] === x) {
          return i2;
        }
      }
      return -1;
    }
    function isMap(x) {
      if (!mapSize || !x || typeof x !== "object") {
        return false;
      }
      try {
        mapSize.call(x);
        try {
          setSize.call(x);
        } catch (s) {
          return true;
        }
        return x instanceof Map;
      } catch (e) {
      }
      return false;
    }
    function isWeakMap(x) {
      if (!weakMapHas || !x || typeof x !== "object") {
        return false;
      }
      try {
        weakMapHas.call(x, weakMapHas);
        try {
          weakSetHas.call(x, weakSetHas);
        } catch (s) {
          return true;
        }
        return x instanceof WeakMap;
      } catch (e) {
      }
      return false;
    }
    function isWeakRef(x) {
      if (!weakRefDeref || !x || typeof x !== "object") {
        return false;
      }
      try {
        weakRefDeref.call(x);
        return true;
      } catch (e) {
      }
      return false;
    }
    function isSet(x) {
      if (!setSize || !x || typeof x !== "object") {
        return false;
      }
      try {
        setSize.call(x);
        try {
          mapSize.call(x);
        } catch (m2) {
          return true;
        }
        return x instanceof Set;
      } catch (e) {
      }
      return false;
    }
    function isWeakSet(x) {
      if (!weakSetHas || !x || typeof x !== "object") {
        return false;
      }
      try {
        weakSetHas.call(x, weakSetHas);
        try {
          weakMapHas.call(x, weakMapHas);
        } catch (s) {
          return true;
        }
        return x instanceof WeakSet;
      } catch (e) {
      }
      return false;
    }
    function isElement(x) {
      if (!x || typeof x !== "object") {
        return false;
      }
      if (typeof HTMLElement !== "undefined" && x instanceof HTMLElement) {
        return true;
      }
      return typeof x.nodeName === "string" && typeof x.getAttribute === "function";
    }
    function inspectString(str, opts) {
      if (str.length > opts.maxStringLength) {
        var remaining = str.length - opts.maxStringLength;
        var trailer = "... " + remaining + " more character" + (remaining > 1 ? "s" : "");
        return inspectString($slice.call(str, 0, opts.maxStringLength), opts) + trailer;
      }
      var s = $replace.call($replace.call(str, /(['\\])/g, "\\$1"), /[\x00-\x1f]/g, lowbyte);
      return wrapQuotes(s, "single", opts);
    }
    function lowbyte(c2) {
      var n = c2.charCodeAt(0);
      var x = {
        8: "b",
        9: "t",
        10: "n",
        12: "f",
        13: "r"
      }[n];
      if (x) {
        return "\\" + x;
      }
      return "\\x" + (n < 16 ? "0" : "") + $toUpperCase.call(n.toString(16));
    }
    function markBoxed(str) {
      return "Object(" + str + ")";
    }
    function weakCollectionOf(type) {
      return type + " { ? }";
    }
    function collectionOf(type, size, entries, indent) {
      var joinedEntries = indent ? indentedJoin(entries, indent) : $join.call(entries, ", ");
      return type + " (" + size + ") {" + joinedEntries + "}";
    }
    function singleLineValues(xs) {
      for (var i2 = 0; i2 < xs.length; i2++) {
        if (indexOf(xs[i2], "\n") >= 0) {
          return false;
        }
      }
      return true;
    }
    function getIndent(opts, depth) {
      var baseIndent;
      if (opts.indent === "	") {
        baseIndent = "	";
      } else if (typeof opts.indent === "number" && opts.indent > 0) {
        baseIndent = $join.call(Array(opts.indent + 1), " ");
      } else {
        return null;
      }
      return {
        base: baseIndent,
        prev: $join.call(Array(depth + 1), baseIndent)
      };
    }
    function indentedJoin(xs, indent) {
      if (xs.length === 0) {
        return "";
      }
      var lineJoiner = "\n" + indent.prev + indent.base;
      return lineJoiner + $join.call(xs, "," + lineJoiner) + "\n" + indent.prev;
    }
    function arrObjKeys(obj, inspect) {
      var isArr = isArray2(obj);
      var xs = [];
      if (isArr) {
        xs.length = obj.length;
        for (var i2 = 0; i2 < obj.length; i2++) {
          xs[i2] = has(obj, i2) ? inspect(obj[i2], obj) : "";
        }
      }
      var syms = typeof gOPS === "function" ? gOPS(obj) : [];
      var symMap;
      if (hasShammedSymbols) {
        symMap = {};
        for (var k2 = 0; k2 < syms.length; k2++) {
          symMap["$" + syms[k2]] = syms[k2];
        }
      }
      for (var key in obj) {
        if (!has(obj, key)) {
          continue;
        }
        if (isArr && String(Number(key)) === key && key < obj.length) {
          continue;
        }
        if (hasShammedSymbols && symMap["$" + key] instanceof Symbol) {
          continue;
        } else if ($test.call(/[^\w$]/, key)) {
          xs.push(inspect(key, obj) + ": " + inspect(obj[key], obj));
        } else {
          xs.push(key + ": " + inspect(obj[key], obj));
        }
      }
      if (typeof gOPS === "function") {
        for (var j = 0; j < syms.length; j++) {
          if (isEnumerable.call(obj, syms[j])) {
            xs.push("[" + inspect(syms[j]) + "]: " + inspect(obj[syms[j]], obj));
          }
        }
      }
      return xs;
    }
  }
});

// node_modules/side-channel/index.js
var require_side_channel = __commonJS({
  "node_modules/side-channel/index.js"(exports2, module2) {
    "use strict";
    var GetIntrinsic = require_get_intrinsic();
    var callBound = require_callBound();
    var inspect = require_object_inspect();
    var $TypeError = require_type();
    var $WeakMap = GetIntrinsic("%WeakMap%", true);
    var $Map = GetIntrinsic("%Map%", true);
    var $weakMapGet = callBound("WeakMap.prototype.get", true);
    var $weakMapSet = callBound("WeakMap.prototype.set", true);
    var $weakMapHas = callBound("WeakMap.prototype.has", true);
    var $mapGet = callBound("Map.prototype.get", true);
    var $mapSet = callBound("Map.prototype.set", true);
    var $mapHas = callBound("Map.prototype.has", true);
    var listGetNode = function(list, key) {
      var prev = list;
      var curr;
      for (; (curr = prev.next) !== null; prev = curr) {
        if (curr.key === key) {
          prev.next = curr.next;
          curr.next = /** @type {NonNullable<typeof list.next>} */
          list.next;
          list.next = curr;
          return curr;
        }
      }
    };
    var listGet = function(objects, key) {
      var node = listGetNode(objects, key);
      return node && node.value;
    };
    var listSet = function(objects, key, value) {
      var node = listGetNode(objects, key);
      if (node) {
        node.value = value;
      } else {
        objects.next = /** @type {import('.').ListNode<typeof value>} */
        {
          // eslint-disable-line no-param-reassign, no-extra-parens
          key,
          next: objects.next,
          value
        };
      }
    };
    var listHas = function(objects, key) {
      return !!listGetNode(objects, key);
    };
    module2.exports = function getSideChannel() {
      var $wm;
      var $m;
      var $o2;
      var channel = {
        assert: function(key) {
          if (!channel.has(key)) {
            throw new $TypeError("Side channel does not contain " + inspect(key));
          }
        },
        get: function(key) {
          if ($WeakMap && key && (typeof key === "object" || typeof key === "function")) {
            if ($wm) {
              return $weakMapGet($wm, key);
            }
          } else if ($Map) {
            if ($m) {
              return $mapGet($m, key);
            }
          } else {
            if ($o2) {
              return listGet($o2, key);
            }
          }
        },
        has: function(key) {
          if ($WeakMap && key && (typeof key === "object" || typeof key === "function")) {
            if ($wm) {
              return $weakMapHas($wm, key);
            }
          } else if ($Map) {
            if ($m) {
              return $mapHas($m, key);
            }
          } else {
            if ($o2) {
              return listHas($o2, key);
            }
          }
          return false;
        },
        set: function(key, value) {
          if ($WeakMap && key && (typeof key === "object" || typeof key === "function")) {
            if (!$wm) {
              $wm = new $WeakMap();
            }
            $weakMapSet($wm, key, value);
          } else if ($Map) {
            if (!$m) {
              $m = new $Map();
            }
            $mapSet($m, key, value);
          } else {
            if (!$o2) {
              $o2 = { key: {}, next: null };
            }
            listSet($o2, key, value);
          }
        }
      };
      return channel;
    };
  }
});

// node_modules/qs/lib/formats.js
var require_formats = __commonJS({
  "node_modules/qs/lib/formats.js"(exports2, module2) {
    "use strict";
    var replace = String.prototype.replace;
    var percentTwenties = /%20/g;
    var Format = {
      RFC1738: "RFC1738",
      RFC3986: "RFC3986"
    };
    module2.exports = {
      "default": Format.RFC3986,
      formatters: {
        RFC1738: function(value) {
          return replace.call(value, percentTwenties, "+");
        },
        RFC3986: function(value) {
          return String(value);
        }
      },
      RFC1738: Format.RFC1738,
      RFC3986: Format.RFC3986
    };
  }
});

// node_modules/qs/lib/utils.js
var require_utils = __commonJS({
  "node_modules/qs/lib/utils.js"(exports2, module2) {
    "use strict";
    var formats = require_formats();
    var has = Object.prototype.hasOwnProperty;
    var isArray2 = Array.isArray;
    var hexTable = function() {
      var array = [];
      for (var i2 = 0; i2 < 256; ++i2) {
        array.push("%" + ((i2 < 16 ? "0" : "") + i2.toString(16)).toUpperCase());
      }
      return array;
    }();
    var compactQueue = function compactQueue2(queue) {
      while (queue.length > 1) {
        var item = queue.pop();
        var obj = item.obj[item.prop];
        if (isArray2(obj)) {
          var compacted = [];
          for (var j = 0; j < obj.length; ++j) {
            if (typeof obj[j] !== "undefined") {
              compacted.push(obj[j]);
            }
          }
          item.obj[item.prop] = compacted;
        }
      }
    };
    var arrayToObject = function arrayToObject2(source, options) {
      var obj = options && options.plainObjects ? /* @__PURE__ */ Object.create(null) : {};
      for (var i2 = 0; i2 < source.length; ++i2) {
        if (typeof source[i2] !== "undefined") {
          obj[i2] = source[i2];
        }
      }
      return obj;
    };
    var merge = function merge2(target, source, options) {
      if (!source) {
        return target;
      }
      if (typeof source !== "object") {
        if (isArray2(target)) {
          target.push(source);
        } else if (target && typeof target === "object") {
          if (options && (options.plainObjects || options.allowPrototypes) || !has.call(Object.prototype, source)) {
            target[source] = true;
          }
        } else {
          return [target, source];
        }
        return target;
      }
      if (!target || typeof target !== "object") {
        return [target].concat(source);
      }
      var mergeTarget = target;
      if (isArray2(target) && !isArray2(source)) {
        mergeTarget = arrayToObject(target, options);
      }
      if (isArray2(target) && isArray2(source)) {
        source.forEach(function(item, i2) {
          if (has.call(target, i2)) {
            var targetItem = target[i2];
            if (targetItem && typeof targetItem === "object" && item && typeof item === "object") {
              target[i2] = merge2(targetItem, item, options);
            } else {
              target.push(item);
            }
          } else {
            target[i2] = item;
          }
        });
        return target;
      }
      return Object.keys(source).reduce(function(acc, key) {
        var value = source[key];
        if (has.call(acc, key)) {
          acc[key] = merge2(acc[key], value, options);
        } else {
          acc[key] = value;
        }
        return acc;
      }, mergeTarget);
    };
    var assign = function assignSingleSource(target, source) {
      return Object.keys(source).reduce(function(acc, key) {
        acc[key] = source[key];
        return acc;
      }, target);
    };
    var decode = function(str, decoder, charset) {
      var strWithoutPlus = str.replace(/\+/g, " ");
      if (charset === "iso-8859-1") {
        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);
      }
      try {
        return decodeURIComponent(strWithoutPlus);
      } catch (e) {
        return strWithoutPlus;
      }
    };
    var limit = 1024;
    var encode = function encode2(str, defaultEncoder, charset, kind, format) {
      if (str.length === 0) {
        return str;
      }
      var string = str;
      if (typeof str === "symbol") {
        string = Symbol.prototype.toString.call(str);
      } else if (typeof str !== "string") {
        string = String(str);
      }
      if (charset === "iso-8859-1") {
        return escape(string).replace(/%u[0-9a-f]{4}/gi, function($0) {
          return "%26%23" + parseInt($0.slice(2), 16) + "%3B";
        });
      }
      var out = "";
      for (var j = 0; j < string.length; j += limit) {
        var segment = string.length >= limit ? string.slice(j, j + limit) : string;
        var arr = [];
        for (var i2 = 0; i2 < segment.length; ++i2) {
          var c2 = segment.charCodeAt(i2);
          if (c2 === 45 || c2 === 46 || c2 === 95 || c2 === 126 || c2 >= 48 && c2 <= 57 || c2 >= 65 && c2 <= 90 || c2 >= 97 && c2 <= 122 || format === formats.RFC1738 && (c2 === 40 || c2 === 41)) {
            arr[arr.length] = segment.charAt(i2);
            continue;
          }
          if (c2 < 128) {
            arr[arr.length] = hexTable[c2];
            continue;
          }
          if (c2 < 2048) {
            arr[arr.length] = hexTable[192 | c2 >> 6] + hexTable[128 | c2 & 63];
            continue;
          }
          if (c2 < 55296 || c2 >= 57344) {
            arr[arr.length] = hexTable[224 | c2 >> 12] + hexTable[128 | c2 >> 6 & 63] + hexTable[128 | c2 & 63];
            continue;
          }
          i2 += 1;
          c2 = 65536 + ((c2 & 1023) << 10 | segment.charCodeAt(i2) & 1023);
          arr[arr.length] = hexTable[240 | c2 >> 18] + hexTable[128 | c2 >> 12 & 63] + hexTable[128 | c2 >> 6 & 63] + hexTable[128 | c2 & 63];
        }
        out += arr.join("");
      }
      return out;
    };
    var compact = function compact2(value) {
      var queue = [{ obj: { o: value }, prop: "o" }];
      var refs = [];
      for (var i2 = 0; i2 < queue.length; ++i2) {
        var item = queue[i2];
        var obj = item.obj[item.prop];
        var keys2 = Object.keys(obj);
        for (var j = 0; j < keys2.length; ++j) {
          var key = keys2[j];
          var val = obj[key];
          if (typeof val === "object" && val !== null && refs.indexOf(val) === -1) {
            queue.push({ obj, prop: key });
            refs.push(val);
          }
        }
      }
      compactQueue(queue);
      return value;
    };
    var isRegExp = function isRegExp2(obj) {
      return Object.prototype.toString.call(obj) === "[object RegExp]";
    };
    var isBuffer2 = function isBuffer3(obj) {
      if (!obj || typeof obj !== "object") {
        return false;
      }
      return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));
    };
    var combine = function combine2(a, b) {
      return [].concat(a, b);
    };
    var maybeMap = function maybeMap2(val, fn) {
      if (isArray2(val)) {
        var mapped = [];
        for (var i2 = 0; i2 < val.length; i2 += 1) {
          mapped.push(fn(val[i2]));
        }
        return mapped;
      }
      return fn(val);
    };
    module2.exports = {
      arrayToObject,
      assign,
      combine,
      compact,
      decode,
      encode,
      isBuffer: isBuffer2,
      isRegExp,
      maybeMap,
      merge
    };
  }
});

// node_modules/qs/lib/stringify.js
var require_stringify = __commonJS({
  "node_modules/qs/lib/stringify.js"(exports2, module2) {
    "use strict";
    var getSideChannel = require_side_channel();
    var utils = require_utils();
    var formats = require_formats();
    var has = Object.prototype.hasOwnProperty;
    var arrayPrefixGenerators = {
      brackets: function brackets(prefix) {
        return prefix + "[]";
      },
      comma: "comma",
      indices: function indices(prefix, key) {
        return prefix + "[" + key + "]";
      },
      repeat: function repeat(prefix) {
        return prefix;
      }
    };
    var isArray2 = Array.isArray;
    var push = Array.prototype.push;
    var pushToArray = function(arr, valueOrArray) {
      push.apply(arr, isArray2(valueOrArray) ? valueOrArray : [valueOrArray]);
    };
    var toISO = Date.prototype.toISOString;
    var defaultFormat = formats["default"];
    var defaults = {
      addQueryPrefix: false,
      allowDots: false,
      allowEmptyArrays: false,
      arrayFormat: "indices",
      charset: "utf-8",
      charsetSentinel: false,
      delimiter: "&",
      encode: true,
      encodeDotInKeys: false,
      encoder: utils.encode,
      encodeValuesOnly: false,
      format: defaultFormat,
      formatter: formats.formatters[defaultFormat],
      // deprecated
      indices: false,
      serializeDate: function serializeDate(date) {
        return toISO.call(date);
      },
      skipNulls: false,
      strictNullHandling: false
    };
    var isNonNullishPrimitive = function isNonNullishPrimitive2(v) {
      return typeof v === "string" || typeof v === "number" || typeof v === "boolean" || typeof v === "symbol" || typeof v === "bigint";
    };
    var sentinel = {};
    var stringify = function stringify2(object, prefix, generateArrayPrefix, commaRoundTrip, allowEmptyArrays, strictNullHandling, skipNulls, encodeDotInKeys, encoder, filter, sort, allowDots, serializeDate, format, formatter, encodeValuesOnly, charset, sideChannel) {
      var obj = object;
      var tmpSc = sideChannel;
      var step = 0;
      var findFlag = false;
      while ((tmpSc = tmpSc.get(sentinel)) !== void 0 && !findFlag) {
        var pos = tmpSc.get(object);
        step += 1;
        if (typeof pos !== "undefined") {
          if (pos === step) {
            throw new RangeError("Cyclic object value");
          } else {
            findFlag = true;
          }
        }
        if (typeof tmpSc.get(sentinel) === "undefined") {
          step = 0;
        }
      }
      if (typeof filter === "function") {
        obj = filter(prefix, obj);
      } else if (obj instanceof Date) {
        obj = serializeDate(obj);
      } else if (generateArrayPrefix === "comma" && isArray2(obj)) {
        obj = utils.maybeMap(obj, function(value2) {
          if (value2 instanceof Date) {
            return serializeDate(value2);
          }
          return value2;
        });
      }
      if (obj === null) {
        if (strictNullHandling) {
          return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, "key", format) : prefix;
        }
        obj = "";
      }
      if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {
        if (encoder) {
          var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, "key", format);
          return [formatter(keyValue) + "=" + formatter(encoder(obj, defaults.encoder, charset, "value", format))];
        }
        return [formatter(prefix) + "=" + formatter(String(obj))];
      }
      var values = [];
      if (typeof obj === "undefined") {
        return values;
      }
      var objKeys;
      if (generateArrayPrefix === "comma" && isArray2(obj)) {
        if (encodeValuesOnly && encoder) {
          obj = utils.maybeMap(obj, encoder);
        }
        objKeys = [{ value: obj.length > 0 ? obj.join(",") || null : void 0 }];
      } else if (isArray2(filter)) {
        objKeys = filter;
      } else {
        var keys2 = Object.keys(obj);
        objKeys = sort ? keys2.sort(sort) : keys2;
      }
      var encodedPrefix = encodeDotInKeys ? prefix.replace(/\./g, "%2E") : prefix;
      var adjustedPrefix = commaRoundTrip && isArray2(obj) && obj.length === 1 ? encodedPrefix + "[]" : encodedPrefix;
      if (allowEmptyArrays && isArray2(obj) && obj.length === 0) {
        return adjustedPrefix + "[]";
      }
      for (var j = 0; j < objKeys.length; ++j) {
        var key = objKeys[j];
        var value = typeof key === "object" && typeof key.value !== "undefined" ? key.value : obj[key];
        if (skipNulls && value === null) {
          continue;
        }
        var encodedKey = allowDots && encodeDotInKeys ? key.replace(/\./g, "%2E") : key;
        var keyPrefix = isArray2(obj) ? typeof generateArrayPrefix === "function" ? generateArrayPrefix(adjustedPrefix, encodedKey) : adjustedPrefix : adjustedPrefix + (allowDots ? "." + encodedKey : "[" + encodedKey + "]");
        sideChannel.set(object, step);
        var valueSideChannel = getSideChannel();
        valueSideChannel.set(sentinel, sideChannel);
        pushToArray(values, stringify2(
          value,
          keyPrefix,
          generateArrayPrefix,
          commaRoundTrip,
          allowEmptyArrays,
          strictNullHandling,
          skipNulls,
          encodeDotInKeys,
          generateArrayPrefix === "comma" && encodeValuesOnly && isArray2(obj) ? null : encoder,
          filter,
          sort,
          allowDots,
          serializeDate,
          format,
          formatter,
          encodeValuesOnly,
          charset,
          valueSideChannel
        ));
      }
      return values;
    };
    var normalizeStringifyOptions = function normalizeStringifyOptions2(opts) {
      if (!opts) {
        return defaults;
      }
      if (typeof opts.allowEmptyArrays !== "undefined" && typeof opts.allowEmptyArrays !== "boolean") {
        throw new TypeError("`allowEmptyArrays` option can only be `true` or `false`, when provided");
      }
      if (typeof opts.encodeDotInKeys !== "undefined" && typeof opts.encodeDotInKeys !== "boolean") {
        throw new TypeError("`encodeDotInKeys` option can only be `true` or `false`, when provided");
      }
      if (opts.encoder !== null && typeof opts.encoder !== "undefined" && typeof opts.encoder !== "function") {
        throw new TypeError("Encoder has to be a function.");
      }
      var charset = opts.charset || defaults.charset;
      if (typeof opts.charset !== "undefined" && opts.charset !== "utf-8" && opts.charset !== "iso-8859-1") {
        throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");
      }
      var format = formats["default"];
      if (typeof opts.format !== "undefined") {
        if (!has.call(formats.formatters, opts.format)) {
          throw new TypeError("Unknown format option provided.");
        }
        format = opts.format;
      }
      var formatter = formats.formatters[format];
      var filter = defaults.filter;
      if (typeof opts.filter === "function" || isArray2(opts.filter)) {
        filter = opts.filter;
      }
      var arrayFormat;
      if (opts.arrayFormat in arrayPrefixGenerators) {
        arrayFormat = opts.arrayFormat;
      } else if ("indices" in opts) {
        arrayFormat = opts.indices ? "indices" : "repeat";
      } else {
        arrayFormat = defaults.arrayFormat;
      }
      if ("commaRoundTrip" in opts && typeof opts.commaRoundTrip !== "boolean") {
        throw new TypeError("`commaRoundTrip` must be a boolean, or absent");
      }
      var allowDots = typeof opts.allowDots === "undefined" ? opts.encodeDotInKeys === true ? true : defaults.allowDots : !!opts.allowDots;
      return {
        addQueryPrefix: typeof opts.addQueryPrefix === "boolean" ? opts.addQueryPrefix : defaults.addQueryPrefix,
        allowDots,
        allowEmptyArrays: typeof opts.allowEmptyArrays === "boolean" ? !!opts.allowEmptyArrays : defaults.allowEmptyArrays,
        arrayFormat,
        charset,
        charsetSentinel: typeof opts.charsetSentinel === "boolean" ? opts.charsetSentinel : defaults.charsetSentinel,
        commaRoundTrip: opts.commaRoundTrip,
        delimiter: typeof opts.delimiter === "undefined" ? defaults.delimiter : opts.delimiter,
        encode: typeof opts.encode === "boolean" ? opts.encode : defaults.encode,
        encodeDotInKeys: typeof opts.encodeDotInKeys === "boolean" ? opts.encodeDotInKeys : defaults.encodeDotInKeys,
        encoder: typeof opts.encoder === "function" ? opts.encoder : defaults.encoder,
        encodeValuesOnly: typeof opts.encodeValuesOnly === "boolean" ? opts.encodeValuesOnly : defaults.encodeValuesOnly,
        filter,
        format,
        formatter,
        serializeDate: typeof opts.serializeDate === "function" ? opts.serializeDate : defaults.serializeDate,
        skipNulls: typeof opts.skipNulls === "boolean" ? opts.skipNulls : defaults.skipNulls,
        sort: typeof opts.sort === "function" ? opts.sort : null,
        strictNullHandling: typeof opts.strictNullHandling === "boolean" ? opts.strictNullHandling : defaults.strictNullHandling
      };
    };
    module2.exports = function(object, opts) {
      var obj = object;
      var options = normalizeStringifyOptions(opts);
      var objKeys;
      var filter;
      if (typeof options.filter === "function") {
        filter = options.filter;
        obj = filter("", obj);
      } else if (isArray2(options.filter)) {
        filter = options.filter;
        objKeys = filter;
      }
      var keys2 = [];
      if (typeof obj !== "object" || obj === null) {
        return "";
      }
      var generateArrayPrefix = arrayPrefixGenerators[options.arrayFormat];
      var commaRoundTrip = generateArrayPrefix === "comma" && options.commaRoundTrip;
      if (!objKeys) {
        objKeys = Object.keys(obj);
      }
      if (options.sort) {
        objKeys.sort(options.sort);
      }
      var sideChannel = getSideChannel();
      for (var i2 = 0; i2 < objKeys.length; ++i2) {
        var key = objKeys[i2];
        if (options.skipNulls && obj[key] === null) {
          continue;
        }
        pushToArray(keys2, stringify(
          obj[key],
          key,
          generateArrayPrefix,
          commaRoundTrip,
          options.allowEmptyArrays,
          options.strictNullHandling,
          options.skipNulls,
          options.encodeDotInKeys,
          options.encode ? options.encoder : null,
          options.filter,
          options.sort,
          options.allowDots,
          options.serializeDate,
          options.format,
          options.formatter,
          options.encodeValuesOnly,
          options.charset,
          sideChannel
        ));
      }
      var joined = keys2.join(options.delimiter);
      var prefix = options.addQueryPrefix === true ? "?" : "";
      if (options.charsetSentinel) {
        if (options.charset === "iso-8859-1") {
          prefix += "utf8=%26%2310003%3B&";
        } else {
          prefix += "utf8=%E2%9C%93&";
        }
      }
      return joined.length > 0 ? prefix + joined : "";
    };
  }
});

// node_modules/qs/lib/parse.js
var require_parse = __commonJS({
  "node_modules/qs/lib/parse.js"(exports2, module2) {
    "use strict";
    var utils = require_utils();
    var has = Object.prototype.hasOwnProperty;
    var isArray2 = Array.isArray;
    var defaults = {
      allowDots: false,
      allowEmptyArrays: false,
      allowPrototypes: false,
      allowSparse: false,
      arrayLimit: 20,
      charset: "utf-8",
      charsetSentinel: false,
      comma: false,
      decodeDotInKeys: false,
      decoder: utils.decode,
      delimiter: "&",
      depth: 5,
      duplicates: "combine",
      ignoreQueryPrefix: false,
      interpretNumericEntities: false,
      parameterLimit: 1e3,
      parseArrays: true,
      plainObjects: false,
      strictDepth: false,
      strictNullHandling: false
    };
    var interpretNumericEntities = function(str) {
      return str.replace(/&#(\d+);/g, function($0, numberStr) {
        return String.fromCharCode(parseInt(numberStr, 10));
      });
    };
    var parseArrayValue = function(val, options) {
      if (val && typeof val === "string" && options.comma && val.indexOf(",") > -1) {
        return val.split(",");
      }
      return val;
    };
    var isoSentinel = "utf8=%26%2310003%3B";
    var charsetSentinel = "utf8=%E2%9C%93";
    var parseValues = function parseQueryStringValues(str, options) {
      var obj = { __proto__: null };
      var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\?/, "") : str;
      cleanStr = cleanStr.replace(/%5B/gi, "[").replace(/%5D/gi, "]");
      var limit = options.parameterLimit === Infinity ? void 0 : options.parameterLimit;
      var parts = cleanStr.split(options.delimiter, limit);
      var skipIndex = -1;
      var i2;
      var charset = options.charset;
      if (options.charsetSentinel) {
        for (i2 = 0; i2 < parts.length; ++i2) {
          if (parts[i2].indexOf("utf8=") === 0) {
            if (parts[i2] === charsetSentinel) {
              charset = "utf-8";
            } else if (parts[i2] === isoSentinel) {
              charset = "iso-8859-1";
            }
            skipIndex = i2;
            i2 = parts.length;
          }
        }
      }
      for (i2 = 0; i2 < parts.length; ++i2) {
        if (i2 === skipIndex) {
          continue;
        }
        var part = parts[i2];
        var bracketEqualsPos = part.indexOf("]=");
        var pos = bracketEqualsPos === -1 ? part.indexOf("=") : bracketEqualsPos + 1;
        var key, val;
        if (pos === -1) {
          key = options.decoder(part, defaults.decoder, charset, "key");
          val = options.strictNullHandling ? null : "";
        } else {
          key = options.decoder(part.slice(0, pos), defaults.decoder, charset, "key");
          val = utils.maybeMap(
            parseArrayValue(part.slice(pos + 1), options),
            function(encodedVal) {
              return options.decoder(encodedVal, defaults.decoder, charset, "value");
            }
          );
        }
        if (val && options.interpretNumericEntities && charset === "iso-8859-1") {
          val = interpretNumericEntities(val);
        }
        if (part.indexOf("[]=") > -1) {
          val = isArray2(val) ? [val] : val;
        }
        var existing = has.call(obj, key);
        if (existing && options.duplicates === "combine") {
          obj[key] = utils.combine(obj[key], val);
        } else if (!existing || options.duplicates === "last") {
          obj[key] = val;
        }
      }
      return obj;
    };
    var parseObject = function(chain, val, options, valuesParsed) {
      var leaf = valuesParsed ? val : parseArrayValue(val, options);
      for (var i2 = chain.length - 1; i2 >= 0; --i2) {
        var obj;
        var root = chain[i2];
        if (root === "[]" && options.parseArrays) {
          obj = options.allowEmptyArrays && (leaf === "" || options.strictNullHandling && leaf === null) ? [] : [].concat(leaf);
        } else {
          obj = options.plainObjects ? /* @__PURE__ */ Object.create(null) : {};
          var cleanRoot = root.charAt(0) === "[" && root.charAt(root.length - 1) === "]" ? root.slice(1, -1) : root;
          var decodedRoot = options.decodeDotInKeys ? cleanRoot.replace(/%2E/g, ".") : cleanRoot;
          var index = parseInt(decodedRoot, 10);
          if (!options.parseArrays && decodedRoot === "") {
            obj = { 0: leaf };
          } else if (!isNaN(index) && root !== decodedRoot && String(index) === decodedRoot && index >= 0 && (options.parseArrays && index <= options.arrayLimit)) {
            obj = [];
            obj[index] = leaf;
          } else if (decodedRoot !== "__proto__") {
            obj[decodedRoot] = leaf;
          }
        }
        leaf = obj;
      }
      return leaf;
    };
    var parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {
      if (!givenKey) {
        return;
      }
      var key = options.allowDots ? givenKey.replace(/\.([^.[]+)/g, "[$1]") : givenKey;
      var brackets = /(\[[^[\]]*])/;
      var child = /(\[[^[\]]*])/g;
      var segment = options.depth > 0 && brackets.exec(key);
      var parent = segment ? key.slice(0, segment.index) : key;
      var keys2 = [];
      if (parent) {
        if (!options.plainObjects && has.call(Object.prototype, parent)) {
          if (!options.allowPrototypes) {
            return;
          }
        }
        keys2.push(parent);
      }
      var i2 = 0;
      while (options.depth > 0 && (segment = child.exec(key)) !== null && i2 < options.depth) {
        i2 += 1;
        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {
          if (!options.allowPrototypes) {
            return;
          }
        }
        keys2.push(segment[1]);
      }
      if (segment) {
        if (options.strictDepth === true) {
          throw new RangeError("Input depth exceeded depth option of " + options.depth + " and strictDepth is true");
        }
        keys2.push("[" + key.slice(segment.index) + "]");
      }
      return parseObject(keys2, val, options, valuesParsed);
    };
    var normalizeParseOptions = function normalizeParseOptions2(opts) {
      if (!opts) {
        return defaults;
      }
      if (typeof opts.allowEmptyArrays !== "undefined" && typeof opts.allowEmptyArrays !== "boolean") {
        throw new TypeError("`allowEmptyArrays` option can only be `true` or `false`, when provided");
      }
      if (typeof opts.decodeDotInKeys !== "undefined" && typeof opts.decodeDotInKeys !== "boolean") {
        throw new TypeError("`decodeDotInKeys` option can only be `true` or `false`, when provided");
      }
      if (opts.decoder !== null && typeof opts.decoder !== "undefined" && typeof opts.decoder !== "function") {
        throw new TypeError("Decoder has to be a function.");
      }
      if (typeof opts.charset !== "undefined" && opts.charset !== "utf-8" && opts.charset !== "iso-8859-1") {
        throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");
      }
      var charset = typeof opts.charset === "undefined" ? defaults.charset : opts.charset;
      var duplicates = typeof opts.duplicates === "undefined" ? defaults.duplicates : opts.duplicates;
      if (duplicates !== "combine" && duplicates !== "first" && duplicates !== "last") {
        throw new TypeError("The duplicates option must be either combine, first, or last");
      }
      var allowDots = typeof opts.allowDots === "undefined" ? opts.decodeDotInKeys === true ? true : defaults.allowDots : !!opts.allowDots;
      return {
        allowDots,
        allowEmptyArrays: typeof opts.allowEmptyArrays === "boolean" ? !!opts.allowEmptyArrays : defaults.allowEmptyArrays,
        allowPrototypes: typeof opts.allowPrototypes === "boolean" ? opts.allowPrototypes : defaults.allowPrototypes,
        allowSparse: typeof opts.allowSparse === "boolean" ? opts.allowSparse : defaults.allowSparse,
        arrayLimit: typeof opts.arrayLimit === "number" ? opts.arrayLimit : defaults.arrayLimit,
        charset,
        charsetSentinel: typeof opts.charsetSentinel === "boolean" ? opts.charsetSentinel : defaults.charsetSentinel,
        comma: typeof opts.comma === "boolean" ? opts.comma : defaults.comma,
        decodeDotInKeys: typeof opts.decodeDotInKeys === "boolean" ? opts.decodeDotInKeys : defaults.decodeDotInKeys,
        decoder: typeof opts.decoder === "function" ? opts.decoder : defaults.decoder,
        delimiter: typeof opts.delimiter === "string" || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,
        // eslint-disable-next-line no-implicit-coercion, no-extra-parens
        depth: typeof opts.depth === "number" || opts.depth === false ? +opts.depth : defaults.depth,
        duplicates,
        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,
        interpretNumericEntities: typeof opts.interpretNumericEntities === "boolean" ? opts.interpretNumericEntities : defaults.interpretNumericEntities,
        parameterLimit: typeof opts.parameterLimit === "number" ? opts.parameterLimit : defaults.parameterLimit,
        parseArrays: opts.parseArrays !== false,
        plainObjects: typeof opts.plainObjects === "boolean" ? opts.plainObjects : defaults.plainObjects,
        strictDepth: typeof opts.strictDepth === "boolean" ? !!opts.strictDepth : defaults.strictDepth,
        strictNullHandling: typeof opts.strictNullHandling === "boolean" ? opts.strictNullHandling : defaults.strictNullHandling
      };
    };
    module2.exports = function(str, opts) {
      var options = normalizeParseOptions(opts);
      if (str === "" || str === null || typeof str === "undefined") {
        return options.plainObjects ? /* @__PURE__ */ Object.create(null) : {};
      }
      var tempObj = typeof str === "string" ? parseValues(str, options) : str;
      var obj = options.plainObjects ? /* @__PURE__ */ Object.create(null) : {};
      var keys2 = Object.keys(tempObj);
      for (var i2 = 0; i2 < keys2.length; ++i2) {
        var key = keys2[i2];
        var newObj = parseKeys(key, tempObj[key], options, typeof str === "string");
        obj = utils.merge(obj, newObj, options);
      }
      if (options.allowSparse === true) {
        return obj;
      }
      return utils.compact(obj);
    };
  }
});

// node_modules/qs/lib/index.js
var require_lib = __commonJS({
  "node_modules/qs/lib/index.js"(exports2, module2) {
    "use strict";
    var stringify = require_stringify();
    var parse = require_parse();
    var formats = require_formats();
    module2.exports = {
      formats,
      parse,
      stringify
    };
  }
});

// node_modules/warn-once/index.js
var require_warn_once = __commonJS({
  "node_modules/warn-once/index.js"(exports2, module2) {
    var DEV = true;
    var warnings = /* @__PURE__ */ new Set();
    function warnOnce(condition, ...rest) {
      if (DEV && condition) {
        const key = rest.join(" ");
        if (warnings.has(key)) {
          return;
        }
        warnings.add(key);
        console.warn(...rest);
      }
    }
    module2.exports = warnOnce;
  }
});

// node_modules/pluralize/pluralize.js
var require_pluralize = __commonJS({
  "node_modules/pluralize/pluralize.js"(exports2, module2) {
    (function(root, pluralize) {
      if (typeof __require === "function" && typeof exports2 === "object" && typeof module2 === "object") {
        module2.exports = pluralize();
      } else if (typeof define === "function" && define.amd) {
        define(function() {
          return pluralize();
        });
      } else {
        root.pluralize = pluralize();
      }
    })(exports2, function() {
      var pluralRules = [];
      var singularRules = [];
      var uncountables = {};
      var irregularPlurals = {};
      var irregularSingles = {};
      function sanitizeRule(rule) {
        if (typeof rule === "string") {
          return new RegExp("^" + rule + "$", "i");
        }
        return rule;
      }
      function restoreCase(word, token) {
        if (word === token)
          return token;
        if (word === word.toLowerCase())
          return token.toLowerCase();
        if (word === word.toUpperCase())
          return token.toUpperCase();
        if (word[0] === word[0].toUpperCase()) {
          return token.charAt(0).toUpperCase() + token.substr(1).toLowerCase();
        }
        return token.toLowerCase();
      }
      function interpolate(str, args) {
        return str.replace(/\$(\d{1,2})/g, function(match, index) {
          return args[index] || "";
        });
      }
      function replace(word, rule) {
        return word.replace(rule[0], function(match, index) {
          var result = interpolate(rule[1], arguments);
          if (match === "") {
            return restoreCase(word[index - 1], result);
          }
          return restoreCase(match, result);
        });
      }
      function sanitizeWord(token, word, rules) {
        if (!token.length || uncountables.hasOwnProperty(token)) {
          return word;
        }
        var len = rules.length;
        while (len--) {
          var rule = rules[len];
          if (rule[0].test(word))
            return replace(word, rule);
        }
        return word;
      }
      function replaceWord(replaceMap, keepMap, rules) {
        return function(word) {
          var token = word.toLowerCase();
          if (keepMap.hasOwnProperty(token)) {
            return restoreCase(word, token);
          }
          if (replaceMap.hasOwnProperty(token)) {
            return restoreCase(word, replaceMap[token]);
          }
          return sanitizeWord(token, word, rules);
        };
      }
      function checkWord(replaceMap, keepMap, rules, bool) {
        return function(word) {
          var token = word.toLowerCase();
          if (keepMap.hasOwnProperty(token))
            return true;
          if (replaceMap.hasOwnProperty(token))
            return false;
          return sanitizeWord(token, token, rules) === token;
        };
      }
      function pluralize(word, count, inclusive) {
        var pluralized = count === 1 ? pluralize.singular(word) : pluralize.plural(word);
        return (inclusive ? count + " " : "") + pluralized;
      }
      pluralize.plural = replaceWord(
        irregularSingles,
        irregularPlurals,
        pluralRules
      );
      pluralize.isPlural = checkWord(
        irregularSingles,
        irregularPlurals,
        pluralRules
      );
      pluralize.singular = replaceWord(
        irregularPlurals,
        irregularSingles,
        singularRules
      );
      pluralize.isSingular = checkWord(
        irregularPlurals,
        irregularSingles,
        singularRules
      );
      pluralize.addPluralRule = function(rule, replacement) {
        pluralRules.push([sanitizeRule(rule), replacement]);
      };
      pluralize.addSingularRule = function(rule, replacement) {
        singularRules.push([sanitizeRule(rule), replacement]);
      };
      pluralize.addUncountableRule = function(word) {
        if (typeof word === "string") {
          uncountables[word.toLowerCase()] = true;
          return;
        }
        pluralize.addPluralRule(word, "$0");
        pluralize.addSingularRule(word, "$0");
      };
      pluralize.addIrregularRule = function(single, plural) {
        plural = plural.toLowerCase();
        single = single.toLowerCase();
        irregularSingles[single] = plural;
        irregularPlurals[plural] = single;
      };
      [
        // Pronouns.
        ["I", "we"],
        ["me", "us"],
        ["he", "they"],
        ["she", "they"],
        ["them", "them"],
        ["myself", "ourselves"],
        ["yourself", "yourselves"],
        ["itself", "themselves"],
        ["herself", "themselves"],
        ["himself", "themselves"],
        ["themself", "themselves"],
        ["is", "are"],
        ["was", "were"],
        ["has", "have"],
        ["this", "these"],
        ["that", "those"],
        // Words ending in with a consonant and `o`.
        ["echo", "echoes"],
        ["dingo", "dingoes"],
        ["volcano", "volcanoes"],
        ["tornado", "tornadoes"],
        ["torpedo", "torpedoes"],
        // Ends with `us`.
        ["genus", "genera"],
        ["viscus", "viscera"],
        // Ends with `ma`.
        ["stigma", "stigmata"],
        ["stoma", "stomata"],
        ["dogma", "dogmata"],
        ["lemma", "lemmata"],
        ["schema", "schemata"],
        ["anathema", "anathemata"],
        // Other irregular rules.
        ["ox", "oxen"],
        ["axe", "axes"],
        ["die", "dice"],
        ["yes", "yeses"],
        ["foot", "feet"],
        ["eave", "eaves"],
        ["goose", "geese"],
        ["tooth", "teeth"],
        ["quiz", "quizzes"],
        ["human", "humans"],
        ["proof", "proofs"],
        ["carve", "carves"],
        ["valve", "valves"],
        ["looey", "looies"],
        ["thief", "thieves"],
        ["groove", "grooves"],
        ["pickaxe", "pickaxes"],
        ["passerby", "passersby"]
      ].forEach(function(rule) {
        return pluralize.addIrregularRule(rule[0], rule[1]);
      });
      [
        [/s?$/i, "s"],
        [/[^\u0000-\u007F]$/i, "$0"],
        [/([^aeiou]ese)$/i, "$1"],
        [/(ax|test)is$/i, "$1es"],
        [/(alias|[^aou]us|t[lm]as|gas|ris)$/i, "$1es"],
        [/(e[mn]u)s?$/i, "$1s"],
        [/([^l]ias|[aeiou]las|[ejzr]as|[iu]am)$/i, "$1"],
        [/(alumn|syllab|vir|radi|nucle|fung|cact|stimul|termin|bacill|foc|uter|loc|strat)(?:us|i)$/i, "$1i"],
        [/(alumn|alg|vertebr)(?:a|ae)$/i, "$1ae"],
        [/(seraph|cherub)(?:im)?$/i, "$1im"],
        [/(her|at|gr)o$/i, "$1oes"],
        [/(agend|addend|millenni|dat|extrem|bacteri|desiderat|strat|candelabr|errat|ov|symposi|curricul|automat|quor)(?:a|um)$/i, "$1a"],
        [/(apheli|hyperbat|periheli|asyndet|noumen|phenomen|criteri|organ|prolegomen|hedr|automat)(?:a|on)$/i, "$1a"],
        [/sis$/i, "ses"],
        [/(?:(kni|wi|li)fe|(ar|l|ea|eo|oa|hoo)f)$/i, "$1$2ves"],
        [/([^aeiouy]|qu)y$/i, "$1ies"],
        [/([^ch][ieo][ln])ey$/i, "$1ies"],
        [/(x|ch|ss|sh|zz)$/i, "$1es"],
        [/(matr|cod|mur|sil|vert|ind|append)(?:ix|ex)$/i, "$1ices"],
        [/\b((?:tit)?m|l)(?:ice|ouse)$/i, "$1ice"],
        [/(pe)(?:rson|ople)$/i, "$1ople"],
        [/(child)(?:ren)?$/i, "$1ren"],
        [/eaux$/i, "$0"],
        [/m[ae]n$/i, "men"],
        ["thou", "you"]
      ].forEach(function(rule) {
        return pluralize.addPluralRule(rule[0], rule[1]);
      });
      [
        [/s$/i, ""],
        [/(ss)$/i, "$1"],
        [/(wi|kni|(?:after|half|high|low|mid|non|night|[^\w]|^)li)ves$/i, "$1fe"],
        [/(ar|(?:wo|[ae])l|[eo][ao])ves$/i, "$1f"],
        [/ies$/i, "y"],
        [/\b([pl]|zomb|(?:neck|cross)?t|coll|faer|food|gen|goon|group|lass|talk|goal|cut)ies$/i, "$1ie"],
        [/\b(mon|smil)ies$/i, "$1ey"],
        [/\b((?:tit)?m|l)ice$/i, "$1ouse"],
        [/(seraph|cherub)im$/i, "$1"],
        [/(x|ch|ss|sh|zz|tto|go|cho|alias|[^aou]us|t[lm]as|gas|(?:her|at|gr)o|[aeiou]ris)(?:es)?$/i, "$1"],
        [/(analy|diagno|parenthe|progno|synop|the|empha|cri|ne)(?:sis|ses)$/i, "$1sis"],
        [/(movie|twelve|abuse|e[mn]u)s$/i, "$1"],
        [/(test)(?:is|es)$/i, "$1is"],
        [/(alumn|syllab|vir|radi|nucle|fung|cact|stimul|termin|bacill|foc|uter|loc|strat)(?:us|i)$/i, "$1us"],
        [/(agend|addend|millenni|dat|extrem|bacteri|desiderat|strat|candelabr|errat|ov|symposi|curricul|quor)a$/i, "$1um"],
        [/(apheli|hyperbat|periheli|asyndet|noumen|phenomen|criteri|organ|prolegomen|hedr|automat)a$/i, "$1on"],
        [/(alumn|alg|vertebr)ae$/i, "$1a"],
        [/(cod|mur|sil|vert|ind)ices$/i, "$1ex"],
        [/(matr|append)ices$/i, "$1ix"],
        [/(pe)(rson|ople)$/i, "$1rson"],
        [/(child)ren$/i, "$1"],
        [/(eau)x?$/i, "$1"],
        [/men$/i, "man"]
      ].forEach(function(rule) {
        return pluralize.addSingularRule(rule[0], rule[1]);
      });
      [
        // Singular words with no plurals.
        "adulthood",
        "advice",
        "agenda",
        "aid",
        "aircraft",
        "alcohol",
        "ammo",
        "analytics",
        "anime",
        "athletics",
        "audio",
        "bison",
        "blood",
        "bream",
        "buffalo",
        "butter",
        "carp",
        "cash",
        "chassis",
        "chess",
        "clothing",
        "cod",
        "commerce",
        "cooperation",
        "corps",
        "debris",
        "diabetes",
        "digestion",
        "elk",
        "energy",
        "equipment",
        "excretion",
        "expertise",
        "firmware",
        "flounder",
        "fun",
        "gallows",
        "garbage",
        "graffiti",
        "hardware",
        "headquarters",
        "health",
        "herpes",
        "highjinks",
        "homework",
        "housework",
        "information",
        "jeans",
        "justice",
        "kudos",
        "labour",
        "literature",
        "machinery",
        "mackerel",
        "mail",
        "media",
        "mews",
        "moose",
        "music",
        "mud",
        "manga",
        "news",
        "only",
        "personnel",
        "pike",
        "plankton",
        "pliers",
        "police",
        "pollution",
        "premises",
        "rain",
        "research",
        "rice",
        "salmon",
        "scissors",
        "series",
        "sewage",
        "shambles",
        "shrimp",
        "software",
        "species",
        "staff",
        "swine",
        "tennis",
        "traffic",
        "transportation",
        "trout",
        "tuna",
        "wealth",
        "welfare",
        "whiting",
        "wildebeest",
        "wildlife",
        "you",
        /pok[eé]mon$/i,
        // Regexes.
        /[^aeiou]ese$/i,
        // "chinese", "japanese"
        /deer$/i,
        // "deer", "reindeer"
        /fish$/i,
        // "fish", "blowfish", "angelfish"
        /measles$/i,
        /o[iu]s$/i,
        // "carnivorous"
        /pox$/i,
        // "chickpox", "smallpox"
        /sheep$/i
      ].forEach(pluralize.addUncountableRule);
      return pluralize;
    });
  }
});

// node_modules/papaparse/papaparse.min.js
var require_papaparse_min = __commonJS({
  "node_modules/papaparse/papaparse.min.js"(exports2, module2) {
    !function(e, t) {
      "function" == typeof define && define.amd ? define([], t) : "object" == typeof module2 && "undefined" != typeof exports2 ? module2.exports = t() : e.Papa = t();
    }(exports2, function s() {
      "use strict";
      var f2 = "undefined" != typeof self ? self : "undefined" != typeof window ? window : void 0 !== f2 ? f2 : {};
      var n = !f2.document && !!f2.postMessage, o2 = f2.IS_PAPA_WORKER || false, a = {}, u = 0, b = { parse: function(e, t) {
        var r2 = (t = t || {}).dynamicTyping || false;
        J(r2) && (t.dynamicTypingFunction = r2, r2 = {});
        if (t.dynamicTyping = r2, t.transform = !!J(t.transform) && t.transform, t.worker && b.WORKERS_SUPPORTED) {
          var i2 = function() {
            if (!b.WORKERS_SUPPORTED)
              return false;
            var e2 = (r3 = f2.URL || f2.webkitURL || null, i3 = s.toString(), b.BLOB_URL || (b.BLOB_URL = r3.createObjectURL(new Blob(["var global = (function() { if (typeof self !== 'undefined') { return self; } if (typeof window !== 'undefined') { return window; } if (typeof global !== 'undefined') { return global; } return {}; })(); global.IS_PAPA_WORKER=true; ", "(", i3, ")();"], { type: "text/javascript" })))), t2 = new f2.Worker(e2);
            var r3, i3;
            return t2.onmessage = _2, t2.id = u++, a[t2.id] = t2;
          }();
          return i2.userStep = t.step, i2.userChunk = t.chunk, i2.userComplete = t.complete, i2.userError = t.error, t.step = J(t.step), t.chunk = J(t.chunk), t.complete = J(t.complete), t.error = J(t.error), delete t.worker, void i2.postMessage({ input: e, config: t, workerId: i2.id });
        }
        var n2 = null;
        b.NODE_STREAM_INPUT, "string" == typeof e ? (e = function(e2) {
          if (65279 === e2.charCodeAt(0))
            return e2.slice(1);
          return e2;
        }(e), n2 = t.download ? new l2(t) : new p3(t)) : true === e.readable && J(e.read) && J(e.on) ? n2 = new g2(t) : (f2.File && e instanceof File || e instanceof Object) && (n2 = new c2(t));
        return n2.stream(e);
      }, unparse: function(e, t) {
        var n2 = false, _3 = true, m3 = ",", y3 = "\r\n", s2 = '"', a2 = s2 + s2, r2 = false, i2 = null, o3 = false;
        !function() {
          if ("object" != typeof t)
            return;
          "string" != typeof t.delimiter || b.BAD_DELIMITERS.filter(function(e2) {
            return -1 !== t.delimiter.indexOf(e2);
          }).length || (m3 = t.delimiter);
          ("boolean" == typeof t.quotes || "function" == typeof t.quotes || Array.isArray(t.quotes)) && (n2 = t.quotes);
          "boolean" != typeof t.skipEmptyLines && "string" != typeof t.skipEmptyLines || (r2 = t.skipEmptyLines);
          "string" == typeof t.newline && (y3 = t.newline);
          "string" == typeof t.quoteChar && (s2 = t.quoteChar);
          "boolean" == typeof t.header && (_3 = t.header);
          if (Array.isArray(t.columns)) {
            if (0 === t.columns.length)
              throw new Error("Option columns is empty");
            i2 = t.columns;
          }
          void 0 !== t.escapeChar && (a2 = t.escapeChar + s2);
          ("boolean" == typeof t.escapeFormulae || t.escapeFormulae instanceof RegExp) && (o3 = t.escapeFormulae instanceof RegExp ? t.escapeFormulae : /^[=+\-@\t\r].*$/);
        }();
        var u2 = new RegExp(Q(s2), "g");
        "string" == typeof e && (e = JSON.parse(e));
        if (Array.isArray(e)) {
          if (!e.length || Array.isArray(e[0]))
            return h2(null, e, r2);
          if ("object" == typeof e[0])
            return h2(i2 || Object.keys(e[0]), e, r2);
        } else if ("object" == typeof e)
          return "string" == typeof e.data && (e.data = JSON.parse(e.data)), Array.isArray(e.data) && (e.fields || (e.fields = e.meta && e.meta.fields || i2), e.fields || (e.fields = Array.isArray(e.data[0]) ? e.fields : "object" == typeof e.data[0] ? Object.keys(e.data[0]) : []), Array.isArray(e.data[0]) || "object" == typeof e.data[0] || (e.data = [e.data])), h2(e.fields || [], e.data || [], r2);
        throw new Error("Unable to serialize unrecognized input");
        function h2(e2, t2, r3) {
          var i3 = "";
          "string" == typeof e2 && (e2 = JSON.parse(e2)), "string" == typeof t2 && (t2 = JSON.parse(t2));
          var n3 = Array.isArray(e2) && 0 < e2.length, s3 = !Array.isArray(t2[0]);
          if (n3 && _3) {
            for (var a3 = 0; a3 < e2.length; a3++)
              0 < a3 && (i3 += m3), i3 += v2(e2[a3], a3);
            0 < t2.length && (i3 += y3);
          }
          for (var o4 = 0; o4 < t2.length; o4++) {
            var u3 = n3 ? e2.length : t2[o4].length, h3 = false, f3 = n3 ? 0 === Object.keys(t2[o4]).length : 0 === t2[o4].length;
            if (r3 && !n3 && (h3 = "greedy" === r3 ? "" === t2[o4].join("").trim() : 1 === t2[o4].length && 0 === t2[o4][0].length), "greedy" === r3 && n3) {
              for (var d4 = [], l3 = 0; l3 < u3; l3++) {
                var c3 = s3 ? e2[l3] : l3;
                d4.push(t2[o4][c3]);
              }
              h3 = "" === d4.join("").trim();
            }
            if (!h3) {
              for (var p4 = 0; p4 < u3; p4++) {
                0 < p4 && !f3 && (i3 += m3);
                var g3 = n3 && s3 ? e2[p4] : p4;
                i3 += v2(t2[o4][g3], p4);
              }
              o4 < t2.length - 1 && (!r3 || 0 < u3 && !f3) && (i3 += y3);
            }
          }
          return i3;
        }
        function v2(e2, t2) {
          if (null == e2)
            return "";
          if (e2.constructor === Date)
            return JSON.stringify(e2).slice(1, 25);
          var r3 = false;
          o3 && "string" == typeof e2 && o3.test(e2) && (e2 = "'" + e2, r3 = true);
          var i3 = e2.toString().replace(u2, a2);
          return (r3 = r3 || true === n2 || "function" == typeof n2 && n2(e2, t2) || Array.isArray(n2) && n2[t2] || function(e3, t3) {
            for (var r4 = 0; r4 < t3.length; r4++)
              if (-1 < e3.indexOf(t3[r4]))
                return true;
            return false;
          }(i3, b.BAD_DELIMITERS) || -1 < i3.indexOf(m3) || " " === i3.charAt(0) || " " === i3.charAt(i3.length - 1)) ? s2 + i3 + s2 : i3;
        }
      } };
      if (b.RECORD_SEP = String.fromCharCode(30), b.UNIT_SEP = String.fromCharCode(31), b.BYTE_ORDER_MARK = "\uFEFF", b.BAD_DELIMITERS = ["\r", "\n", '"', b.BYTE_ORDER_MARK], b.WORKERS_SUPPORTED = !n && !!f2.Worker, b.NODE_STREAM_INPUT = 1, b.LocalChunkSize = 10485760, b.RemoteChunkSize = 5242880, b.DefaultDelimiter = ",", b.Parser = E2, b.ParserHandle = r, b.NetworkStreamer = l2, b.FileStreamer = c2, b.StringStreamer = p3, b.ReadableStreamStreamer = g2, f2.jQuery) {
        var d3 = f2.jQuery;
        d3.fn.parse = function(o3) {
          var r2 = o3.config || {}, u2 = [];
          return this.each(function(e2) {
            if (!("INPUT" === d3(this).prop("tagName").toUpperCase() && "file" === d3(this).attr("type").toLowerCase() && f2.FileReader) || !this.files || 0 === this.files.length)
              return true;
            for (var t = 0; t < this.files.length; t++)
              u2.push({ file: this.files[t], inputElem: this, instanceConfig: d3.extend({}, r2) });
          }), e(), this;
          function e() {
            if (0 !== u2.length) {
              var e2, t, r3, i2, n2 = u2[0];
              if (J(o3.before)) {
                var s2 = o3.before(n2.file, n2.inputElem);
                if ("object" == typeof s2) {
                  if ("abort" === s2.action)
                    return e2 = "AbortError", t = n2.file, r3 = n2.inputElem, i2 = s2.reason, void (J(o3.error) && o3.error({ name: e2 }, t, r3, i2));
                  if ("skip" === s2.action)
                    return void h2();
                  "object" == typeof s2.config && (n2.instanceConfig = d3.extend(n2.instanceConfig, s2.config));
                } else if ("skip" === s2)
                  return void h2();
              }
              var a2 = n2.instanceConfig.complete;
              n2.instanceConfig.complete = function(e3) {
                J(a2) && a2(e3, n2.file, n2.inputElem), h2();
              }, b.parse(n2.file, n2.instanceConfig);
            } else
              J(o3.complete) && o3.complete();
          }
          function h2() {
            u2.splice(0, 1), e();
          }
        };
      }
      function h(e) {
        this._handle = null, this._finished = false, this._completed = false, this._halted = false, this._input = null, this._baseIndex = 0, this._partialLine = "", this._rowCount = 0, this._start = 0, this._nextChunk = null, this.isFirstChunk = true, this._completeResults = { data: [], errors: [], meta: {} }, (function(e2) {
          var t = w(e2);
          t.chunkSize = parseInt(t.chunkSize), e2.step || e2.chunk || (t.chunkSize = null);
          this._handle = new r(t), (this._handle.streamer = this)._config = t;
        }).call(this, e), this.parseChunk = function(e2, t) {
          if (this.isFirstChunk && J(this._config.beforeFirstChunk)) {
            var r2 = this._config.beforeFirstChunk(e2);
            void 0 !== r2 && (e2 = r2);
          }
          this.isFirstChunk = false, this._halted = false;
          var i2 = this._partialLine + e2;
          this._partialLine = "";
          var n2 = this._handle.parse(i2, this._baseIndex, !this._finished);
          if (!this._handle.paused() && !this._handle.aborted()) {
            var s2 = n2.meta.cursor;
            this._finished || (this._partialLine = i2.substring(s2 - this._baseIndex), this._baseIndex = s2), n2 && n2.data && (this._rowCount += n2.data.length);
            var a2 = this._finished || this._config.preview && this._rowCount >= this._config.preview;
            if (o2)
              f2.postMessage({ results: n2, workerId: b.WORKER_ID, finished: a2 });
            else if (J(this._config.chunk) && !t) {
              if (this._config.chunk(n2, this._handle), this._handle.paused() || this._handle.aborted())
                return void (this._halted = true);
              n2 = void 0, this._completeResults = void 0;
            }
            return this._config.step || this._config.chunk || (this._completeResults.data = this._completeResults.data.concat(n2.data), this._completeResults.errors = this._completeResults.errors.concat(n2.errors), this._completeResults.meta = n2.meta), this._completed || !a2 || !J(this._config.complete) || n2 && n2.meta.aborted || (this._config.complete(this._completeResults, this._input), this._completed = true), a2 || n2 && n2.meta.paused || this._nextChunk(), n2;
          }
          this._halted = true;
        }, this._sendError = function(e2) {
          J(this._config.error) ? this._config.error(e2) : o2 && this._config.error && f2.postMessage({ workerId: b.WORKER_ID, error: e2, finished: false });
        };
      }
      function l2(e) {
        var i2;
        (e = e || {}).chunkSize || (e.chunkSize = b.RemoteChunkSize), h.call(this, e), this._nextChunk = n ? function() {
          this._readChunk(), this._chunkLoaded();
        } : function() {
          this._readChunk();
        }, this.stream = function(e2) {
          this._input = e2, this._nextChunk();
        }, this._readChunk = function() {
          if (this._finished)
            this._chunkLoaded();
          else {
            if (i2 = new XMLHttpRequest(), this._config.withCredentials && (i2.withCredentials = this._config.withCredentials), n || (i2.onload = v(this._chunkLoaded, this), i2.onerror = v(this._chunkError, this)), i2.open(this._config.downloadRequestBody ? "POST" : "GET", this._input, !n), this._config.downloadRequestHeaders) {
              var e2 = this._config.downloadRequestHeaders;
              for (var t in e2)
                i2.setRequestHeader(t, e2[t]);
            }
            if (this._config.chunkSize) {
              var r2 = this._start + this._config.chunkSize - 1;
              i2.setRequestHeader("Range", "bytes=" + this._start + "-" + r2);
            }
            try {
              i2.send(this._config.downloadRequestBody);
            } catch (e3) {
              this._chunkError(e3.message);
            }
            n && 0 === i2.status && this._chunkError();
          }
        }, this._chunkLoaded = function() {
          4 === i2.readyState && (i2.status < 200 || 400 <= i2.status ? this._chunkError() : (this._start += this._config.chunkSize ? this._config.chunkSize : i2.responseText.length, this._finished = !this._config.chunkSize || this._start >= function(e2) {
            var t = e2.getResponseHeader("Content-Range");
            if (null === t)
              return -1;
            return parseInt(t.substring(t.lastIndexOf("/") + 1));
          }(i2), this.parseChunk(i2.responseText)));
        }, this._chunkError = function(e2) {
          var t = i2.statusText || e2;
          this._sendError(new Error(t));
        };
      }
      function c2(e) {
        var i2, n2;
        (e = e || {}).chunkSize || (e.chunkSize = b.LocalChunkSize), h.call(this, e);
        var s2 = "undefined" != typeof FileReader;
        this.stream = function(e2) {
          this._input = e2, n2 = e2.slice || e2.webkitSlice || e2.mozSlice, s2 ? ((i2 = new FileReader()).onload = v(this._chunkLoaded, this), i2.onerror = v(this._chunkError, this)) : i2 = new FileReaderSync(), this._nextChunk();
        }, this._nextChunk = function() {
          this._finished || this._config.preview && !(this._rowCount < this._config.preview) || this._readChunk();
        }, this._readChunk = function() {
          var e2 = this._input;
          if (this._config.chunkSize) {
            var t = Math.min(this._start + this._config.chunkSize, this._input.size);
            e2 = n2.call(e2, this._start, t);
          }
          var r2 = i2.readAsText(e2, this._config.encoding);
          s2 || this._chunkLoaded({ target: { result: r2 } });
        }, this._chunkLoaded = function(e2) {
          this._start += this._config.chunkSize, this._finished = !this._config.chunkSize || this._start >= this._input.size, this.parseChunk(e2.target.result);
        }, this._chunkError = function() {
          this._sendError(i2.error);
        };
      }
      function p3(e) {
        var r2;
        h.call(this, e = e || {}), this.stream = function(e2) {
          return r2 = e2, this._nextChunk();
        }, this._nextChunk = function() {
          if (!this._finished) {
            var e2, t = this._config.chunkSize;
            return t ? (e2 = r2.substring(0, t), r2 = r2.substring(t)) : (e2 = r2, r2 = ""), this._finished = !r2, this.parseChunk(e2);
          }
        };
      }
      function g2(e) {
        h.call(this, e = e || {});
        var t = [], r2 = true, i2 = false;
        this.pause = function() {
          h.prototype.pause.apply(this, arguments), this._input.pause();
        }, this.resume = function() {
          h.prototype.resume.apply(this, arguments), this._input.resume();
        }, this.stream = function(e2) {
          this._input = e2, this._input.on("data", this._streamData), this._input.on("end", this._streamEnd), this._input.on("error", this._streamError);
        }, this._checkIsFinished = function() {
          i2 && 1 === t.length && (this._finished = true);
        }, this._nextChunk = function() {
          this._checkIsFinished(), t.length ? this.parseChunk(t.shift()) : r2 = true;
        }, this._streamData = v(function(e2) {
          try {
            t.push("string" == typeof e2 ? e2 : e2.toString(this._config.encoding)), r2 && (r2 = false, this._checkIsFinished(), this.parseChunk(t.shift()));
          } catch (e3) {
            this._streamError(e3);
          }
        }, this), this._streamError = v(function(e2) {
          this._streamCleanUp(), this._sendError(e2);
        }, this), this._streamEnd = v(function() {
          this._streamCleanUp(), i2 = true, this._streamData("");
        }, this), this._streamCleanUp = v(function() {
          this._input.removeListener("data", this._streamData), this._input.removeListener("end", this._streamEnd), this._input.removeListener("error", this._streamError);
        }, this);
      }
      function r(m3) {
        var a2, o3, u2, i2 = Math.pow(2, 53), n2 = -i2, s2 = /^\s*-?(\d+\.?|\.\d+|\d+\.\d+)([eE][-+]?\d+)?\s*$/, h2 = /^((\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+([+-][0-2]\d:[0-5]\d|Z))|(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d([+-][0-2]\d:[0-5]\d|Z))|(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d([+-][0-2]\d:[0-5]\d|Z)))$/, t = this, r2 = 0, f3 = 0, d4 = false, e = false, l3 = [], c3 = { data: [], errors: [], meta: {} };
        if (J(m3.step)) {
          var p4 = m3.step;
          m3.step = function(e2) {
            if (c3 = e2, _3())
              g3();
            else {
              if (g3(), 0 === c3.data.length)
                return;
              r2 += e2.data.length, m3.preview && r2 > m3.preview ? o3.abort() : (c3.data = c3.data[0], p4(c3, t));
            }
          };
        }
        function y3(e2) {
          return "greedy" === m3.skipEmptyLines ? "" === e2.join("").trim() : 1 === e2.length && 0 === e2[0].length;
        }
        function g3() {
          return c3 && u2 && (k2("Delimiter", "UndetectableDelimiter", "Unable to auto-detect delimiting character; defaulted to '" + b.DefaultDelimiter + "'"), u2 = false), m3.skipEmptyLines && (c3.data = c3.data.filter(function(e2) {
            return !y3(e2);
          })), _3() && function() {
            if (!c3)
              return;
            function e2(e3, t3) {
              J(m3.transformHeader) && (e3 = m3.transformHeader(e3, t3)), l3.push(e3);
            }
            if (Array.isArray(c3.data[0])) {
              for (var t2 = 0; _3() && t2 < c3.data.length; t2++)
                c3.data[t2].forEach(e2);
              c3.data.splice(0, 1);
            } else
              c3.data.forEach(e2);
          }(), function() {
            if (!c3 || !m3.header && !m3.dynamicTyping && !m3.transform)
              return c3;
            function e2(e3, t3) {
              var r3, i3 = m3.header ? {} : [];
              for (r3 = 0; r3 < e3.length; r3++) {
                var n3 = r3, s3 = e3[r3];
                m3.header && (n3 = r3 >= l3.length ? "__parsed_extra" : l3[r3]), m3.transform && (s3 = m3.transform(s3, n3)), s3 = v2(n3, s3), "__parsed_extra" === n3 ? (i3[n3] = i3[n3] || [], i3[n3].push(s3)) : i3[n3] = s3;
              }
              return m3.header && (r3 > l3.length ? k2("FieldMismatch", "TooManyFields", "Too many fields: expected " + l3.length + " fields but parsed " + r3, f3 + t3) : r3 < l3.length && k2("FieldMismatch", "TooFewFields", "Too few fields: expected " + l3.length + " fields but parsed " + r3, f3 + t3)), i3;
            }
            var t2 = 1;
            !c3.data.length || Array.isArray(c3.data[0]) ? (c3.data = c3.data.map(e2), t2 = c3.data.length) : c3.data = e2(c3.data, 0);
            m3.header && c3.meta && (c3.meta.fields = l3);
            return f3 += t2, c3;
          }();
        }
        function _3() {
          return m3.header && 0 === l3.length;
        }
        function v2(e2, t2) {
          return r3 = e2, m3.dynamicTypingFunction && void 0 === m3.dynamicTyping[r3] && (m3.dynamicTyping[r3] = m3.dynamicTypingFunction(r3)), true === (m3.dynamicTyping[r3] || m3.dynamicTyping) ? "true" === t2 || "TRUE" === t2 || "false" !== t2 && "FALSE" !== t2 && (function(e3) {
            if (s2.test(e3)) {
              var t3 = parseFloat(e3);
              if (n2 < t3 && t3 < i2)
                return true;
            }
            return false;
          }(t2) ? parseFloat(t2) : h2.test(t2) ? new Date(t2) : "" === t2 ? null : t2) : t2;
          var r3;
        }
        function k2(e2, t2, r3, i3) {
          var n3 = { type: e2, code: t2, message: r3 };
          void 0 !== i3 && (n3.row = i3), c3.errors.push(n3);
        }
        this.parse = function(e2, t2, r3) {
          var i3 = m3.quoteChar || '"';
          if (m3.newline || (m3.newline = function(e3, t3) {
            e3 = e3.substring(0, 1048576);
            var r4 = new RegExp(Q(t3) + "([^]*?)" + Q(t3), "gm"), i4 = (e3 = e3.replace(r4, "")).split("\r"), n4 = e3.split("\n"), s4 = 1 < n4.length && n4[0].length < i4[0].length;
            if (1 === i4.length || s4)
              return "\n";
            for (var a3 = 0, o4 = 0; o4 < i4.length; o4++)
              "\n" === i4[o4][0] && a3++;
            return a3 >= i4.length / 2 ? "\r\n" : "\r";
          }(e2, i3)), u2 = false, m3.delimiter)
            J(m3.delimiter) && (m3.delimiter = m3.delimiter(e2), c3.meta.delimiter = m3.delimiter);
          else {
            var n3 = function(e3, t3, r4, i4, n4) {
              var s4, a3, o4, u3;
              n4 = n4 || [",", "	", "|", ";", b.RECORD_SEP, b.UNIT_SEP];
              for (var h3 = 0; h3 < n4.length; h3++) {
                var f4 = n4[h3], d5 = 0, l4 = 0, c4 = 0;
                o4 = void 0;
                for (var p5 = new E2({ comments: i4, delimiter: f4, newline: t3, preview: 10 }).parse(e3), g4 = 0; g4 < p5.data.length; g4++)
                  if (r4 && y3(p5.data[g4]))
                    c4++;
                  else {
                    var _4 = p5.data[g4].length;
                    l4 += _4, void 0 !== o4 ? 0 < _4 && (d5 += Math.abs(_4 - o4), o4 = _4) : o4 = _4;
                  }
                0 < p5.data.length && (l4 /= p5.data.length - c4), (void 0 === a3 || d5 <= a3) && (void 0 === u3 || u3 < l4) && 1.99 < l4 && (a3 = d5, s4 = f4, u3 = l4);
              }
              return { successful: !!(m3.delimiter = s4), bestDelimiter: s4 };
            }(e2, m3.newline, m3.skipEmptyLines, m3.comments, m3.delimitersToGuess);
            n3.successful ? m3.delimiter = n3.bestDelimiter : (u2 = true, m3.delimiter = b.DefaultDelimiter), c3.meta.delimiter = m3.delimiter;
          }
          var s3 = w(m3);
          return m3.preview && m3.header && s3.preview++, a2 = e2, o3 = new E2(s3), c3 = o3.parse(a2, t2, r3), g3(), d4 ? { meta: { paused: true } } : c3 || { meta: { paused: false } };
        }, this.paused = function() {
          return d4;
        }, this.pause = function() {
          d4 = true, o3.abort(), a2 = J(m3.chunk) ? "" : a2.substring(o3.getCharIndex());
        }, this.resume = function() {
          t.streamer._halted ? (d4 = false, t.streamer.parseChunk(a2, true)) : setTimeout(t.resume, 3);
        }, this.aborted = function() {
          return e;
        }, this.abort = function() {
          e = true, o3.abort(), c3.meta.aborted = true, J(m3.complete) && m3.complete(c3), a2 = "";
        };
      }
      function Q(e) {
        return e.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
      }
      function E2(j) {
        var z, M = (j = j || {}).delimiter, P = j.newline, U = j.comments, q = j.step, N = j.preview, B = j.fastMode, K = z = void 0 === j.quoteChar || null === j.quoteChar ? '"' : j.quoteChar;
        if (void 0 !== j.escapeChar && (K = j.escapeChar), ("string" != typeof M || -1 < b.BAD_DELIMITERS.indexOf(M)) && (M = ","), U === M)
          throw new Error("Comment character same as delimiter");
        true === U ? U = "#" : ("string" != typeof U || -1 < b.BAD_DELIMITERS.indexOf(U)) && (U = false), "\n" !== P && "\r" !== P && "\r\n" !== P && (P = "\n");
        var W = 0, H = false;
        this.parse = function(i2, t, r2) {
          if ("string" != typeof i2)
            throw new Error("Input must be a string");
          var n2 = i2.length, e = M.length, s2 = P.length, a2 = U.length, o3 = J(q), u2 = [], h2 = [], f3 = [], d4 = W = 0;
          if (!i2)
            return L();
          if (j.header && !t) {
            var l3 = i2.split(P)[0].split(M), c3 = [], p4 = {}, g3 = false;
            for (var _3 in l3) {
              var m3 = l3[_3];
              J(j.transformHeader) && (m3 = j.transformHeader(m3, _3));
              var y3 = m3, v2 = p4[m3] || 0;
              for (0 < v2 && (g3 = true, y3 = m3 + "_" + v2), p4[m3] = v2 + 1; c3.includes(y3); )
                y3 = y3 + "_" + v2;
              c3.push(y3);
            }
            if (g3) {
              var k2 = i2.split(P);
              k2[0] = c3.join(M), i2 = k2.join(P);
            }
          }
          if (B || false !== B && -1 === i2.indexOf(z)) {
            for (var b2 = i2.split(P), E3 = 0; E3 < b2.length; E3++) {
              if (f3 = b2[E3], W += f3.length, E3 !== b2.length - 1)
                W += P.length;
              else if (r2)
                return L();
              if (!U || f3.substring(0, a2) !== U) {
                if (o3) {
                  if (u2 = [], I2(f3.split(M)), F(), H)
                    return L();
                } else
                  I2(f3.split(M));
                if (N && N <= E3)
                  return u2 = u2.slice(0, N), L(true);
              }
            }
            return L();
          }
          for (var w2 = i2.indexOf(M, W), R2 = i2.indexOf(P, W), C2 = new RegExp(Q(K) + Q(z), "g"), S2 = i2.indexOf(z, W); ; )
            if (i2[W] !== z)
              if (U && 0 === f3.length && i2.substring(W, W + a2) === U) {
                if (-1 === R2)
                  return L();
                W = R2 + s2, R2 = i2.indexOf(P, W), w2 = i2.indexOf(M, W);
              } else if (-1 !== w2 && (w2 < R2 || -1 === R2))
                f3.push(i2.substring(W, w2)), W = w2 + e, w2 = i2.indexOf(M, W);
              else {
                if (-1 === R2)
                  break;
                if (f3.push(i2.substring(W, R2)), D(R2 + s2), o3 && (F(), H))
                  return L();
                if (N && u2.length >= N)
                  return L(true);
              }
            else
              for (S2 = W, W++; ; ) {
                if (-1 === (S2 = i2.indexOf(z, S2 + 1)))
                  return r2 || h2.push({ type: "Quotes", code: "MissingQuotes", message: "Quoted field unterminated", row: u2.length, index: W }), T3();
                if (S2 === n2 - 1)
                  return T3(i2.substring(W, S2).replace(C2, z));
                if (z !== K || i2[S2 + 1] !== K) {
                  if (z === K || 0 === S2 || i2[S2 - 1] !== K) {
                    -1 !== w2 && w2 < S2 + 1 && (w2 = i2.indexOf(M, S2 + 1)), -1 !== R2 && R2 < S2 + 1 && (R2 = i2.indexOf(P, S2 + 1));
                    var O = A3(-1 === R2 ? w2 : Math.min(w2, R2));
                    if (i2.substr(S2 + 1 + O, e) === M) {
                      f3.push(i2.substring(W, S2).replace(C2, z)), i2[W = S2 + 1 + O + e] !== z && (S2 = i2.indexOf(z, W)), w2 = i2.indexOf(M, W), R2 = i2.indexOf(P, W);
                      break;
                    }
                    var x = A3(R2);
                    if (i2.substring(S2 + 1 + x, S2 + 1 + x + s2) === P) {
                      if (f3.push(i2.substring(W, S2).replace(C2, z)), D(S2 + 1 + x + s2), w2 = i2.indexOf(M, W), S2 = i2.indexOf(z, W), o3 && (F(), H))
                        return L();
                      if (N && u2.length >= N)
                        return L(true);
                      break;
                    }
                    h2.push({ type: "Quotes", code: "InvalidQuotes", message: "Trailing quote on quoted field is malformed", row: u2.length, index: W }), S2++;
                  }
                } else
                  S2++;
              }
          return T3();
          function I2(e2) {
            u2.push(e2), d4 = W;
          }
          function A3(e2) {
            var t2 = 0;
            if (-1 !== e2) {
              var r3 = i2.substring(S2 + 1, e2);
              r3 && "" === r3.trim() && (t2 = r3.length);
            }
            return t2;
          }
          function T3(e2) {
            return r2 || (void 0 === e2 && (e2 = i2.substring(W)), f3.push(e2), W = n2, I2(f3), o3 && F()), L();
          }
          function D(e2) {
            W = e2, I2(f3), f3 = [], R2 = i2.indexOf(P, W);
          }
          function L(e2) {
            return { data: u2, errors: h2, meta: { delimiter: M, linebreak: P, aborted: H, truncated: !!e2, cursor: d4 + (t || 0) } };
          }
          function F() {
            q(L()), u2 = [], h2 = [];
          }
        }, this.abort = function() {
          H = true;
        }, this.getCharIndex = function() {
          return W;
        };
      }
      function _2(e) {
        var t = e.data, r2 = a[t.workerId], i2 = false;
        if (t.error)
          r2.userError(t.error, t.file);
        else if (t.results && t.results.data) {
          var n2 = { abort: function() {
            i2 = true, m2(t.workerId, { data: [], errors: [], meta: { aborted: true } });
          }, pause: y2, resume: y2 };
          if (J(r2.userStep)) {
            for (var s2 = 0; s2 < t.results.data.length && (r2.userStep({ data: t.results.data[s2], errors: t.results.errors, meta: t.results.meta }, n2), !i2); s2++)
              ;
            delete t.results;
          } else
            J(r2.userChunk) && (r2.userChunk(t.results, n2, t.file), delete t.results);
        }
        t.finished && !i2 && m2(t.workerId, t.results);
      }
      function m2(e, t) {
        var r2 = a[e];
        J(r2.userComplete) && r2.userComplete(t), r2.terminate(), delete a[e];
      }
      function y2() {
        throw new Error("Not implemented.");
      }
      function w(e) {
        if ("object" != typeof e || null === e)
          return e;
        var t = Array.isArray(e) ? [] : {};
        for (var r2 in e)
          t[r2] = w(e[r2]);
        return t;
      }
      function v(e, t) {
        return function() {
          e.apply(t, arguments);
        };
      }
      function J(e) {
        return "function" == typeof e;
      }
      return o2 && (f2.onmessage = function(e) {
        var t = e.data;
        void 0 === b.WORKER_ID && t && (b.WORKER_ID = t.workerId);
        if ("string" == typeof t.input)
          f2.postMessage({ workerId: b.WORKER_ID, results: b.parse(t.input, t.config), finished: true });
        else if (f2.File && t.input instanceof File || t.input instanceof Object) {
          var r2 = b.parse(t.input, t.config);
          r2 && f2.postMessage({ workerId: b.WORKER_ID, results: r2, finished: true });
        }
      }), (l2.prototype = Object.create(h.prototype)).constructor = l2, (c2.prototype = Object.create(h.prototype)).constructor = c2, (p3.prototype = Object.create(p3.prototype)).constructor = p3, (g2.prototype = Object.create(h.prototype)).constructor = g2, b;
    });
  }
});

// node_modules/@refinedev/core/dist/index.mjs
var import_react2 = __toESM(require_react(), 1);

// node_modules/@refinedev/devtools-internal/dist/index.mjs
var import_error_stack_parser = __toESM(require_error_stack_parser(), 1);
var import_react = __toESM(require_react(), 1);
var T2 = "renderWithHooks";
var y = (r) => {
  let e = r.findIndex((n) => n.functionName === T2);
  return e !== -1 ? r.slice(0, e) : r;
};
var f = false ? /node_modules\/refinedev\/(?<name>.*?)\// : /\/refine\/packages\/(?<name>.*?)\//;
var d2 = (r) => r ? !!r.match(f) : false;
var m = (r) => {
  var o2;
  if (!r)
    return;
  let e = r.match(f), n = (o2 = e == null ? void 0 : e.groups) == null ? void 0 : o2.name;
  if (n)
    return `@refinedev/${n}`;
};
function p2(r) {
  if (false)
    return [];
  try {
    let e = new Error(), n = import_error_stack_parser.default.parse(e);
    return y(n).map((t) => ({ file: t.fileName, line: t.lineNumber, column: t.columnNumber, function: t.functionName, isRefine: d2(t.fileName), packageName: m(t.fileName) })).filter((t) => t.function).filter((t) => !(r != null && r.includes(t.function ?? ""))).slice(1);
  } catch {
    return [];
  }
}
var E = (r, e) => {
  if (T[r] === "auth")
    return null;
  if (r === "useCan")
    return e ? "key[1].resource" : "key[1]";
  if (T[r] === "audit-log")
    return r === "useLog" ? "variables.resource" : "key[1]";
  if (T[r] === "data") {
    if (r === "useCustom" || r === "useCustomMutation")
      return null;
    switch (r) {
      case "useList":
      case "useInfiniteList":
      case "useOne":
      case "useMany":
        return e ? "key[1]" : "key[2]";
      case "useCreate":
      case "useCreateMany":
      case "useDelete":
      case "useDeleteMany":
      case "useUpdate":
      case "useUpdateMany":
        return "variables.resource";
    }
  }
  return null;
};
function k(r, e, n, o2) {
  if (false)
    return { hookName: "", trace: [], resourcePath: null, legacyKey: false };
  let s = p2(o2).slice(1), t = E(r, e);
  return { hookName: r, trace: s, resourcePath: t, legacyKey: e, resourceName: n };
}
var l = (r, e) => {
  let n = e == null ? void 0 : e.map((s) => `${s.file}:${s.line}:${s.column}#${s.function}-${s.packageName}-${s.isRefine ? 1 : 0}`);
  return JSON.stringify([...r ?? [], ...n ?? []]);
};
var g = (r) => (e) => {
  var o2;
  if (!((o2 = e == null ? void 0 : e.meta) != null && o2.trace))
    return;
  let n = e == null ? void 0 : e.meta;
  new Promise((s) => {
    var t, a;
    d(r, c.ACTIVITY, { type: "mutation", identifier: l(e == null ? void 0 : e.options.mutationKey, (t = e == null ? void 0 : e.meta) == null ? void 0 : t.trace), key: e == null ? void 0 : e.options.mutationKey, status: e == null ? void 0 : e.state.status, state: e == null ? void 0 : e.state, variables: (a = e == null ? void 0 : e.state) == null ? void 0 : a.variables, ...n }), s();
  });
};
var R = (r) => (e) => {
  var o2;
  if (!((o2 = e == null ? void 0 : e.meta) != null && o2.trace))
    return;
  let n = e == null ? void 0 : e.meta;
  new Promise((s) => {
    var t;
    d(r, c.ACTIVITY, { type: "query", identifier: l(e.queryKey, (t = e.meta) == null ? void 0 : t.trace), key: e.queryKey, status: e.state.status, state: e.state, ...n }), s();
  });
};
var C = false ? x : (r) => {
  let { ws: e } = (0, import_react.useContext)(p), n = import_react.default.useRef(), o2 = import_react.default.useRef();
  return import_react.default.useEffect(() => {
    if (!e)
      return () => 0;
    let s = r.getQueryCache(), t = R(e);
    return s.getAll().forEach(t), n.current = s.subscribe(({ query: a, type: c2 }) => (c2 === "added" || c2 === "updated") && t(a)), () => {
      var a;
      (a = n.current) == null || a.call(n);
    };
  }, [e, r]), import_react.default.useEffect(() => {
    if (!e)
      return () => 0;
    let s = r.getMutationCache(), t = g(e);
    return s.getAll().forEach(t), o2.current = s.subscribe(({ mutation: a, type: c2 }) => (c2 === "added" || c2 === "updated") && t(a)), () => {
      var a;
      (a = o2.current) == null || a.call(o2);
    };
  }, [e, r]), import_react.default.useEffect(() => e ? _(e, c.DEVTOOLS_INVALIDATE_QUERY_ACTION, ({ queryKey: t }) => {
    t && r.invalidateQueries(t);
  }) : () => 0, [e, r]), {};
};

// node_modules/@tanstack/query-core/build/lib/subscribable.mjs
var Subscribable = class {
  constructor() {
    this.listeners = /* @__PURE__ */ new Set();
    this.subscribe = this.subscribe.bind(this);
  }
  subscribe(listener) {
    const identity2 = {
      listener
    };
    this.listeners.add(identity2);
    this.onSubscribe();
    return () => {
      this.listeners.delete(identity2);
      this.onUnsubscribe();
    };
  }
  hasListeners() {
    return this.listeners.size > 0;
  }
  onSubscribe() {
  }
  onUnsubscribe() {
  }
};

// node_modules/@tanstack/query-core/build/lib/utils.mjs
var isServer = typeof window === "undefined" || "Deno" in window;
function noop() {
  return void 0;
}
function functionalUpdate(updater, input) {
  return typeof updater === "function" ? updater(input) : updater;
}
function isValidTimeout(value) {
  return typeof value === "number" && value >= 0 && value !== Infinity;
}
function timeUntilStale(updatedAt, staleTime) {
  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);
}
function parseQueryArgs(arg1, arg2, arg3) {
  if (!isQueryKey(arg1)) {
    return arg1;
  }
  if (typeof arg2 === "function") {
    return {
      ...arg3,
      queryKey: arg1,
      queryFn: arg2
    };
  }
  return {
    ...arg2,
    queryKey: arg1
  };
}
function parseMutationArgs(arg1, arg2, arg3) {
  if (isQueryKey(arg1)) {
    if (typeof arg2 === "function") {
      return {
        ...arg3,
        mutationKey: arg1,
        mutationFn: arg2
      };
    }
    return {
      ...arg2,
      mutationKey: arg1
    };
  }
  if (typeof arg1 === "function") {
    return {
      ...arg2,
      mutationFn: arg1
    };
  }
  return {
    ...arg1
  };
}
function parseFilterArgs(arg1, arg2, arg3) {
  return isQueryKey(arg1) ? [{
    ...arg2,
    queryKey: arg1
  }, arg3] : [arg1 || {}, arg2];
}
function matchQuery(filters, query) {
  const {
    type = "all",
    exact,
    fetchStatus,
    predicate,
    queryKey,
    stale
  } = filters;
  if (isQueryKey(queryKey)) {
    if (exact) {
      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {
        return false;
      }
    } else if (!partialMatchKey(query.queryKey, queryKey)) {
      return false;
    }
  }
  if (type !== "all") {
    const isActive = query.isActive();
    if (type === "active" && !isActive) {
      return false;
    }
    if (type === "inactive" && isActive) {
      return false;
    }
  }
  if (typeof stale === "boolean" && query.isStale() !== stale) {
    return false;
  }
  if (typeof fetchStatus !== "undefined" && fetchStatus !== query.state.fetchStatus) {
    return false;
  }
  if (predicate && !predicate(query)) {
    return false;
  }
  return true;
}
function matchMutation(filters, mutation) {
  const {
    exact,
    fetching,
    predicate,
    mutationKey
  } = filters;
  if (isQueryKey(mutationKey)) {
    if (!mutation.options.mutationKey) {
      return false;
    }
    if (exact) {
      if (hashQueryKey(mutation.options.mutationKey) !== hashQueryKey(mutationKey)) {
        return false;
      }
    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {
      return false;
    }
  }
  if (typeof fetching === "boolean" && mutation.state.status === "loading" !== fetching) {
    return false;
  }
  if (predicate && !predicate(mutation)) {
    return false;
  }
  return true;
}
function hashQueryKeyByOptions(queryKey, options) {
  const hashFn = (options == null ? void 0 : options.queryKeyHashFn) || hashQueryKey;
  return hashFn(queryKey);
}
function hashQueryKey(queryKey) {
  return JSON.stringify(queryKey, (_2, val) => isPlainObject(val) ? Object.keys(val).sort().reduce((result, key) => {
    result[key] = val[key];
    return result;
  }, {}) : val);
}
function partialMatchKey(a, b) {
  return partialDeepEqual(a, b);
}
function partialDeepEqual(a, b) {
  if (a === b) {
    return true;
  }
  if (typeof a !== typeof b) {
    return false;
  }
  if (a && b && typeof a === "object" && typeof b === "object") {
    return !Object.keys(b).some((key) => !partialDeepEqual(a[key], b[key]));
  }
  return false;
}
function replaceEqualDeep(a, b) {
  if (a === b) {
    return a;
  }
  const array = isPlainArray(a) && isPlainArray(b);
  if (array || isPlainObject(a) && isPlainObject(b)) {
    const aSize = array ? a.length : Object.keys(a).length;
    const bItems = array ? b : Object.keys(b);
    const bSize = bItems.length;
    const copy = array ? [] : {};
    let equalItems = 0;
    for (let i2 = 0; i2 < bSize; i2++) {
      const key = array ? i2 : bItems[i2];
      copy[key] = replaceEqualDeep(a[key], b[key]);
      if (copy[key] === a[key]) {
        equalItems++;
      }
    }
    return aSize === bSize && equalItems === aSize ? a : copy;
  }
  return b;
}
function shallowEqualObjects(a, b) {
  if (a && !b || b && !a) {
    return false;
  }
  for (const key in a) {
    if (a[key] !== b[key]) {
      return false;
    }
  }
  return true;
}
function isPlainArray(value) {
  return Array.isArray(value) && value.length === Object.keys(value).length;
}
function isPlainObject(o2) {
  if (!hasObjectPrototype(o2)) {
    return false;
  }
  const ctor = o2.constructor;
  if (typeof ctor === "undefined") {
    return true;
  }
  const prot = ctor.prototype;
  if (!hasObjectPrototype(prot)) {
    return false;
  }
  if (!prot.hasOwnProperty("isPrototypeOf")) {
    return false;
  }
  return true;
}
function hasObjectPrototype(o2) {
  return Object.prototype.toString.call(o2) === "[object Object]";
}
function isQueryKey(value) {
  return Array.isArray(value);
}
function sleep(timeout) {
  return new Promise((resolve) => {
    setTimeout(resolve, timeout);
  });
}
function scheduleMicrotask(callback) {
  sleep(0).then(callback);
}
function getAbortController() {
  if (typeof AbortController === "function") {
    return new AbortController();
  }
  return;
}
function replaceData(prevData, data, options) {
  if (options.isDataEqual != null && options.isDataEqual(prevData, data)) {
    return prevData;
  } else if (typeof options.structuralSharing === "function") {
    return options.structuralSharing(prevData, data);
  } else if (options.structuralSharing !== false) {
    return replaceEqualDeep(prevData, data);
  }
  return data;
}

// node_modules/@tanstack/query-core/build/lib/focusManager.mjs
var FocusManager = class extends Subscribable {
  constructor() {
    super();
    this.setup = (onFocus) => {
      if (!isServer && window.addEventListener) {
        const listener = () => onFocus();
        window.addEventListener("visibilitychange", listener, false);
        window.addEventListener("focus", listener, false);
        return () => {
          window.removeEventListener("visibilitychange", listener);
          window.removeEventListener("focus", listener);
        };
      }
      return;
    };
  }
  onSubscribe() {
    if (!this.cleanup) {
      this.setEventListener(this.setup);
    }
  }
  onUnsubscribe() {
    if (!this.hasListeners()) {
      var _this$cleanup;
      (_this$cleanup = this.cleanup) == null ? void 0 : _this$cleanup.call(this);
      this.cleanup = void 0;
    }
  }
  setEventListener(setup) {
    var _this$cleanup2;
    this.setup = setup;
    (_this$cleanup2 = this.cleanup) == null ? void 0 : _this$cleanup2.call(this);
    this.cleanup = setup((focused) => {
      if (typeof focused === "boolean") {
        this.setFocused(focused);
      } else {
        this.onFocus();
      }
    });
  }
  setFocused(focused) {
    const changed = this.focused !== focused;
    if (changed) {
      this.focused = focused;
      this.onFocus();
    }
  }
  onFocus() {
    this.listeners.forEach(({
      listener
    }) => {
      listener();
    });
  }
  isFocused() {
    if (typeof this.focused === "boolean") {
      return this.focused;
    }
    if (typeof document === "undefined") {
      return true;
    }
    return [void 0, "visible", "prerender"].includes(document.visibilityState);
  }
};
var focusManager = new FocusManager();

// node_modules/@tanstack/query-core/build/lib/onlineManager.mjs
var onlineEvents = ["online", "offline"];
var OnlineManager = class extends Subscribable {
  constructor() {
    super();
    this.setup = (onOnline) => {
      if (!isServer && window.addEventListener) {
        const listener = () => onOnline();
        onlineEvents.forEach((event) => {
          window.addEventListener(event, listener, false);
        });
        return () => {
          onlineEvents.forEach((event) => {
            window.removeEventListener(event, listener);
          });
        };
      }
      return;
    };
  }
  onSubscribe() {
    if (!this.cleanup) {
      this.setEventListener(this.setup);
    }
  }
  onUnsubscribe() {
    if (!this.hasListeners()) {
      var _this$cleanup;
      (_this$cleanup = this.cleanup) == null ? void 0 : _this$cleanup.call(this);
      this.cleanup = void 0;
    }
  }
  setEventListener(setup) {
    var _this$cleanup2;
    this.setup = setup;
    (_this$cleanup2 = this.cleanup) == null ? void 0 : _this$cleanup2.call(this);
    this.cleanup = setup((online) => {
      if (typeof online === "boolean") {
        this.setOnline(online);
      } else {
        this.onOnline();
      }
    });
  }
  setOnline(online) {
    const changed = this.online !== online;
    if (changed) {
      this.online = online;
      this.onOnline();
    }
  }
  onOnline() {
    this.listeners.forEach(({
      listener
    }) => {
      listener();
    });
  }
  isOnline() {
    if (typeof this.online === "boolean") {
      return this.online;
    }
    if (typeof navigator === "undefined" || typeof navigator.onLine === "undefined") {
      return true;
    }
    return navigator.onLine;
  }
};
var onlineManager = new OnlineManager();

// node_modules/@tanstack/query-core/build/lib/retryer.mjs
function defaultRetryDelay(failureCount) {
  return Math.min(1e3 * 2 ** failureCount, 3e4);
}
function canFetch(networkMode) {
  return (networkMode != null ? networkMode : "online") === "online" ? onlineManager.isOnline() : true;
}
var CancelledError = class {
  constructor(options) {
    this.revert = options == null ? void 0 : options.revert;
    this.silent = options == null ? void 0 : options.silent;
  }
};
function isCancelledError(value) {
  return value instanceof CancelledError;
}
function createRetryer(config) {
  let isRetryCancelled = false;
  let failureCount = 0;
  let isResolved = false;
  let continueFn;
  let promiseResolve;
  let promiseReject;
  const promise = new Promise((outerResolve, outerReject) => {
    promiseResolve = outerResolve;
    promiseReject = outerReject;
  });
  const cancel = (cancelOptions) => {
    if (!isResolved) {
      reject(new CancelledError(cancelOptions));
      config.abort == null ? void 0 : config.abort();
    }
  };
  const cancelRetry = () => {
    isRetryCancelled = true;
  };
  const continueRetry = () => {
    isRetryCancelled = false;
  };
  const shouldPause = () => !focusManager.isFocused() || config.networkMode !== "always" && !onlineManager.isOnline();
  const resolve = (value) => {
    if (!isResolved) {
      isResolved = true;
      config.onSuccess == null ? void 0 : config.onSuccess(value);
      continueFn == null ? void 0 : continueFn();
      promiseResolve(value);
    }
  };
  const reject = (value) => {
    if (!isResolved) {
      isResolved = true;
      config.onError == null ? void 0 : config.onError(value);
      continueFn == null ? void 0 : continueFn();
      promiseReject(value);
    }
  };
  const pause = () => {
    return new Promise((continueResolve) => {
      continueFn = (value) => {
        const canContinue = isResolved || !shouldPause();
        if (canContinue) {
          continueResolve(value);
        }
        return canContinue;
      };
      config.onPause == null ? void 0 : config.onPause();
    }).then(() => {
      continueFn = void 0;
      if (!isResolved) {
        config.onContinue == null ? void 0 : config.onContinue();
      }
    });
  };
  const run = () => {
    if (isResolved) {
      return;
    }
    let promiseOrValue;
    try {
      promiseOrValue = config.fn();
    } catch (error) {
      promiseOrValue = Promise.reject(error);
    }
    Promise.resolve(promiseOrValue).then(resolve).catch((error) => {
      var _config$retry, _config$retryDelay;
      if (isResolved) {
        return;
      }
      const retry = (_config$retry = config.retry) != null ? _config$retry : 3;
      const retryDelay = (_config$retryDelay = config.retryDelay) != null ? _config$retryDelay : defaultRetryDelay;
      const delay = typeof retryDelay === "function" ? retryDelay(failureCount, error) : retryDelay;
      const shouldRetry = retry === true || typeof retry === "number" && failureCount < retry || typeof retry === "function" && retry(failureCount, error);
      if (isRetryCancelled || !shouldRetry) {
        reject(error);
        return;
      }
      failureCount++;
      config.onFail == null ? void 0 : config.onFail(failureCount, error);
      sleep(delay).then(() => {
        if (shouldPause()) {
          return pause();
        }
        return;
      }).then(() => {
        if (isRetryCancelled) {
          reject(error);
        } else {
          run();
        }
      });
    });
  };
  if (canFetch(config.networkMode)) {
    run();
  } else {
    pause().then(run);
  }
  return {
    promise,
    cancel,
    continue: () => {
      const didContinue = continueFn == null ? void 0 : continueFn();
      return didContinue ? promise : Promise.resolve();
    },
    cancelRetry,
    continueRetry
  };
}

// node_modules/@tanstack/query-core/build/lib/logger.mjs
var defaultLogger = console;

// node_modules/@tanstack/query-core/build/lib/notifyManager.mjs
function createNotifyManager() {
  let queue = [];
  let transactions = 0;
  let notifyFn = (callback) => {
    callback();
  };
  let batchNotifyFn = (callback) => {
    callback();
  };
  const batch = (callback) => {
    let result;
    transactions++;
    try {
      result = callback();
    } finally {
      transactions--;
      if (!transactions) {
        flush();
      }
    }
    return result;
  };
  const schedule = (callback) => {
    if (transactions) {
      queue.push(callback);
    } else {
      scheduleMicrotask(() => {
        notifyFn(callback);
      });
    }
  };
  const batchCalls = (callback) => {
    return (...args) => {
      schedule(() => {
        callback(...args);
      });
    };
  };
  const flush = () => {
    const originalQueue = queue;
    queue = [];
    if (originalQueue.length) {
      scheduleMicrotask(() => {
        batchNotifyFn(() => {
          originalQueue.forEach((callback) => {
            notifyFn(callback);
          });
        });
      });
    }
  };
  const setNotifyFunction = (fn) => {
    notifyFn = fn;
  };
  const setBatchNotifyFunction = (fn) => {
    batchNotifyFn = fn;
  };
  return {
    batch,
    batchCalls,
    schedule,
    setNotifyFunction,
    setBatchNotifyFunction
  };
}
var notifyManager = createNotifyManager();

// node_modules/@tanstack/query-core/build/lib/removable.mjs
var Removable = class {
  destroy() {
    this.clearGcTimeout();
  }
  scheduleGc() {
    this.clearGcTimeout();
    if (isValidTimeout(this.cacheTime)) {
      this.gcTimeout = setTimeout(() => {
        this.optionalRemove();
      }, this.cacheTime);
    }
  }
  updateCacheTime(newCacheTime) {
    this.cacheTime = Math.max(this.cacheTime || 0, newCacheTime != null ? newCacheTime : isServer ? Infinity : 5 * 60 * 1e3);
  }
  clearGcTimeout() {
    if (this.gcTimeout) {
      clearTimeout(this.gcTimeout);
      this.gcTimeout = void 0;
    }
  }
};

// node_modules/@tanstack/query-core/build/lib/query.mjs
var Query = class extends Removable {
  constructor(config) {
    super();
    this.abortSignalConsumed = false;
    this.defaultOptions = config.defaultOptions;
    this.setOptions(config.options);
    this.observers = [];
    this.cache = config.cache;
    this.logger = config.logger || defaultLogger;
    this.queryKey = config.queryKey;
    this.queryHash = config.queryHash;
    this.initialState = config.state || getDefaultState(this.options);
    this.state = this.initialState;
    this.scheduleGc();
  }
  get meta() {
    return this.options.meta;
  }
  setOptions(options) {
    this.options = {
      ...this.defaultOptions,
      ...options
    };
    this.updateCacheTime(this.options.cacheTime);
  }
  optionalRemove() {
    if (!this.observers.length && this.state.fetchStatus === "idle") {
      this.cache.remove(this);
    }
  }
  setData(newData, options) {
    const data = replaceData(this.state.data, newData, this.options);
    this.dispatch({
      data,
      type: "success",
      dataUpdatedAt: options == null ? void 0 : options.updatedAt,
      manual: options == null ? void 0 : options.manual
    });
    return data;
  }
  setState(state, setStateOptions) {
    this.dispatch({
      type: "setState",
      state,
      setStateOptions
    });
  }
  cancel(options) {
    var _this$retryer;
    const promise = this.promise;
    (_this$retryer = this.retryer) == null ? void 0 : _this$retryer.cancel(options);
    return promise ? promise.then(noop).catch(noop) : Promise.resolve();
  }
  destroy() {
    super.destroy();
    this.cancel({
      silent: true
    });
  }
  reset() {
    this.destroy();
    this.setState(this.initialState);
  }
  isActive() {
    return this.observers.some((observer) => observer.options.enabled !== false);
  }
  isDisabled() {
    return this.getObserversCount() > 0 && !this.isActive();
  }
  isStale() {
    return this.state.isInvalidated || !this.state.dataUpdatedAt || this.observers.some((observer) => observer.getCurrentResult().isStale);
  }
  isStaleByTime(staleTime = 0) {
    return this.state.isInvalidated || !this.state.dataUpdatedAt || !timeUntilStale(this.state.dataUpdatedAt, staleTime);
  }
  onFocus() {
    var _this$retryer2;
    const observer = this.observers.find((x) => x.shouldFetchOnWindowFocus());
    if (observer) {
      observer.refetch({
        cancelRefetch: false
      });
    }
    (_this$retryer2 = this.retryer) == null ? void 0 : _this$retryer2.continue();
  }
  onOnline() {
    var _this$retryer3;
    const observer = this.observers.find((x) => x.shouldFetchOnReconnect());
    if (observer) {
      observer.refetch({
        cancelRefetch: false
      });
    }
    (_this$retryer3 = this.retryer) == null ? void 0 : _this$retryer3.continue();
  }
  addObserver(observer) {
    if (!this.observers.includes(observer)) {
      this.observers.push(observer);
      this.clearGcTimeout();
      this.cache.notify({
        type: "observerAdded",
        query: this,
        observer
      });
    }
  }
  removeObserver(observer) {
    if (this.observers.includes(observer)) {
      this.observers = this.observers.filter((x) => x !== observer);
      if (!this.observers.length) {
        if (this.retryer) {
          if (this.abortSignalConsumed) {
            this.retryer.cancel({
              revert: true
            });
          } else {
            this.retryer.cancelRetry();
          }
        }
        this.scheduleGc();
      }
      this.cache.notify({
        type: "observerRemoved",
        query: this,
        observer
      });
    }
  }
  getObserversCount() {
    return this.observers.length;
  }
  invalidate() {
    if (!this.state.isInvalidated) {
      this.dispatch({
        type: "invalidate"
      });
    }
  }
  fetch(options, fetchOptions) {
    var _this$options$behavio, _context$fetchOptions;
    if (this.state.fetchStatus !== "idle") {
      if (this.state.dataUpdatedAt && fetchOptions != null && fetchOptions.cancelRefetch) {
        this.cancel({
          silent: true
        });
      } else if (this.promise) {
        var _this$retryer4;
        (_this$retryer4 = this.retryer) == null ? void 0 : _this$retryer4.continueRetry();
        return this.promise;
      }
    }
    if (options) {
      this.setOptions(options);
    }
    if (!this.options.queryFn) {
      const observer = this.observers.find((x) => x.options.queryFn);
      if (observer) {
        this.setOptions(observer.options);
      }
    }
    if (true) {
      if (!Array.isArray(this.options.queryKey)) {
        this.logger.error("As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']");
      }
    }
    const abortController = getAbortController();
    const queryFnContext = {
      queryKey: this.queryKey,
      pageParam: void 0,
      meta: this.meta
    };
    const addSignalProperty = (object) => {
      Object.defineProperty(object, "signal", {
        enumerable: true,
        get: () => {
          if (abortController) {
            this.abortSignalConsumed = true;
            return abortController.signal;
          }
          return void 0;
        }
      });
    };
    addSignalProperty(queryFnContext);
    const fetchFn = () => {
      if (!this.options.queryFn) {
        return Promise.reject("Missing queryFn for queryKey '" + this.options.queryHash + "'");
      }
      this.abortSignalConsumed = false;
      return this.options.queryFn(queryFnContext);
    };
    const context = {
      fetchOptions,
      options: this.options,
      queryKey: this.queryKey,
      state: this.state,
      fetchFn
    };
    addSignalProperty(context);
    (_this$options$behavio = this.options.behavior) == null ? void 0 : _this$options$behavio.onFetch(context);
    this.revertState = this.state;
    if (this.state.fetchStatus === "idle" || this.state.fetchMeta !== ((_context$fetchOptions = context.fetchOptions) == null ? void 0 : _context$fetchOptions.meta)) {
      var _context$fetchOptions2;
      this.dispatch({
        type: "fetch",
        meta: (_context$fetchOptions2 = context.fetchOptions) == null ? void 0 : _context$fetchOptions2.meta
      });
    }
    const onError = (error) => {
      if (!(isCancelledError(error) && error.silent)) {
        this.dispatch({
          type: "error",
          error
        });
      }
      if (!isCancelledError(error)) {
        var _this$cache$config$on, _this$cache$config, _this$cache$config$on2, _this$cache$config2;
        (_this$cache$config$on = (_this$cache$config = this.cache.config).onError) == null ? void 0 : _this$cache$config$on.call(_this$cache$config, error, this);
        (_this$cache$config$on2 = (_this$cache$config2 = this.cache.config).onSettled) == null ? void 0 : _this$cache$config$on2.call(_this$cache$config2, this.state.data, error, this);
        if (true) {
          this.logger.error(error);
        }
      }
      if (!this.isFetchingOptimistic) {
        this.scheduleGc();
      }
      this.isFetchingOptimistic = false;
    };
    this.retryer = createRetryer({
      fn: context.fetchFn,
      abort: abortController == null ? void 0 : abortController.abort.bind(abortController),
      onSuccess: (data) => {
        var _this$cache$config$on3, _this$cache$config3, _this$cache$config$on4, _this$cache$config4;
        if (typeof data === "undefined") {
          if (true) {
            this.logger.error("Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: " + this.queryHash);
          }
          onError(new Error(this.queryHash + " data is undefined"));
          return;
        }
        this.setData(data);
        (_this$cache$config$on3 = (_this$cache$config3 = this.cache.config).onSuccess) == null ? void 0 : _this$cache$config$on3.call(_this$cache$config3, data, this);
        (_this$cache$config$on4 = (_this$cache$config4 = this.cache.config).onSettled) == null ? void 0 : _this$cache$config$on4.call(_this$cache$config4, data, this.state.error, this);
        if (!this.isFetchingOptimistic) {
          this.scheduleGc();
        }
        this.isFetchingOptimistic = false;
      },
      onError,
      onFail: (failureCount, error) => {
        this.dispatch({
          type: "failed",
          failureCount,
          error
        });
      },
      onPause: () => {
        this.dispatch({
          type: "pause"
        });
      },
      onContinue: () => {
        this.dispatch({
          type: "continue"
        });
      },
      retry: context.options.retry,
      retryDelay: context.options.retryDelay,
      networkMode: context.options.networkMode
    });
    this.promise = this.retryer.promise;
    return this.promise;
  }
  dispatch(action) {
    const reducer = (state) => {
      var _action$meta, _action$dataUpdatedAt;
      switch (action.type) {
        case "failed":
          return {
            ...state,
            fetchFailureCount: action.failureCount,
            fetchFailureReason: action.error
          };
        case "pause":
          return {
            ...state,
            fetchStatus: "paused"
          };
        case "continue":
          return {
            ...state,
            fetchStatus: "fetching"
          };
        case "fetch":
          return {
            ...state,
            fetchFailureCount: 0,
            fetchFailureReason: null,
            fetchMeta: (_action$meta = action.meta) != null ? _action$meta : null,
            fetchStatus: canFetch(this.options.networkMode) ? "fetching" : "paused",
            ...!state.dataUpdatedAt && {
              error: null,
              status: "loading"
            }
          };
        case "success":
          return {
            ...state,
            data: action.data,
            dataUpdateCount: state.dataUpdateCount + 1,
            dataUpdatedAt: (_action$dataUpdatedAt = action.dataUpdatedAt) != null ? _action$dataUpdatedAt : Date.now(),
            error: null,
            isInvalidated: false,
            status: "success",
            ...!action.manual && {
              fetchStatus: "idle",
              fetchFailureCount: 0,
              fetchFailureReason: null
            }
          };
        case "error":
          const error = action.error;
          if (isCancelledError(error) && error.revert && this.revertState) {
            return {
              ...this.revertState,
              fetchStatus: "idle"
            };
          }
          return {
            ...state,
            error,
            errorUpdateCount: state.errorUpdateCount + 1,
            errorUpdatedAt: Date.now(),
            fetchFailureCount: state.fetchFailureCount + 1,
            fetchFailureReason: error,
            fetchStatus: "idle",
            status: "error"
          };
        case "invalidate":
          return {
            ...state,
            isInvalidated: true
          };
        case "setState":
          return {
            ...state,
            ...action.state
          };
      }
    };
    this.state = reducer(this.state);
    notifyManager.batch(() => {
      this.observers.forEach((observer) => {
        observer.onQueryUpdate(action);
      });
      this.cache.notify({
        query: this,
        type: "updated",
        action
      });
    });
  }
};
function getDefaultState(options) {
  const data = typeof options.initialData === "function" ? options.initialData() : options.initialData;
  const hasData = typeof data !== "undefined";
  const initialDataUpdatedAt = hasData ? typeof options.initialDataUpdatedAt === "function" ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;
  return {
    data,
    dataUpdateCount: 0,
    dataUpdatedAt: hasData ? initialDataUpdatedAt != null ? initialDataUpdatedAt : Date.now() : 0,
    error: null,
    errorUpdateCount: 0,
    errorUpdatedAt: 0,
    fetchFailureCount: 0,
    fetchFailureReason: null,
    fetchMeta: null,
    isInvalidated: false,
    status: hasData ? "success" : "loading",
    fetchStatus: "idle"
  };
}

// node_modules/@tanstack/query-core/build/lib/queryCache.mjs
var QueryCache = class extends Subscribable {
  constructor(config) {
    super();
    this.config = config || {};
    this.queries = [];
    this.queriesMap = {};
  }
  build(client, options, state) {
    var _options$queryHash;
    const queryKey = options.queryKey;
    const queryHash = (_options$queryHash = options.queryHash) != null ? _options$queryHash : hashQueryKeyByOptions(queryKey, options);
    let query = this.get(queryHash);
    if (!query) {
      query = new Query({
        cache: this,
        logger: client.getLogger(),
        queryKey,
        queryHash,
        options: client.defaultQueryOptions(options),
        state,
        defaultOptions: client.getQueryDefaults(queryKey)
      });
      this.add(query);
    }
    return query;
  }
  add(query) {
    if (!this.queriesMap[query.queryHash]) {
      this.queriesMap[query.queryHash] = query;
      this.queries.push(query);
      this.notify({
        type: "added",
        query
      });
    }
  }
  remove(query) {
    const queryInMap = this.queriesMap[query.queryHash];
    if (queryInMap) {
      query.destroy();
      this.queries = this.queries.filter((x) => x !== query);
      if (queryInMap === query) {
        delete this.queriesMap[query.queryHash];
      }
      this.notify({
        type: "removed",
        query
      });
    }
  }
  clear() {
    notifyManager.batch(() => {
      this.queries.forEach((query) => {
        this.remove(query);
      });
    });
  }
  get(queryHash) {
    return this.queriesMap[queryHash];
  }
  getAll() {
    return this.queries;
  }
  find(arg1, arg2) {
    const [filters] = parseFilterArgs(arg1, arg2);
    if (typeof filters.exact === "undefined") {
      filters.exact = true;
    }
    return this.queries.find((query) => matchQuery(filters, query));
  }
  findAll(arg1, arg2) {
    const [filters] = parseFilterArgs(arg1, arg2);
    return Object.keys(filters).length > 0 ? this.queries.filter((query) => matchQuery(filters, query)) : this.queries;
  }
  notify(event) {
    notifyManager.batch(() => {
      this.listeners.forEach(({
        listener
      }) => {
        listener(event);
      });
    });
  }
  onFocus() {
    notifyManager.batch(() => {
      this.queries.forEach((query) => {
        query.onFocus();
      });
    });
  }
  onOnline() {
    notifyManager.batch(() => {
      this.queries.forEach((query) => {
        query.onOnline();
      });
    });
  }
};

// node_modules/@tanstack/query-core/build/lib/mutation.mjs
var Mutation = class extends Removable {
  constructor(config) {
    super();
    this.defaultOptions = config.defaultOptions;
    this.mutationId = config.mutationId;
    this.mutationCache = config.mutationCache;
    this.logger = config.logger || defaultLogger;
    this.observers = [];
    this.state = config.state || getDefaultState2();
    this.setOptions(config.options);
    this.scheduleGc();
  }
  setOptions(options) {
    this.options = {
      ...this.defaultOptions,
      ...options
    };
    this.updateCacheTime(this.options.cacheTime);
  }
  get meta() {
    return this.options.meta;
  }
  setState(state) {
    this.dispatch({
      type: "setState",
      state
    });
  }
  addObserver(observer) {
    if (!this.observers.includes(observer)) {
      this.observers.push(observer);
      this.clearGcTimeout();
      this.mutationCache.notify({
        type: "observerAdded",
        mutation: this,
        observer
      });
    }
  }
  removeObserver(observer) {
    this.observers = this.observers.filter((x) => x !== observer);
    this.scheduleGc();
    this.mutationCache.notify({
      type: "observerRemoved",
      mutation: this,
      observer
    });
  }
  optionalRemove() {
    if (!this.observers.length) {
      if (this.state.status === "loading") {
        this.scheduleGc();
      } else {
        this.mutationCache.remove(this);
      }
    }
  }
  continue() {
    var _this$retryer$continu, _this$retryer;
    return (_this$retryer$continu = (_this$retryer = this.retryer) == null ? void 0 : _this$retryer.continue()) != null ? _this$retryer$continu : this.execute();
  }
  async execute() {
    const executeMutation = () => {
      var _this$options$retry;
      this.retryer = createRetryer({
        fn: () => {
          if (!this.options.mutationFn) {
            return Promise.reject("No mutationFn found");
          }
          return this.options.mutationFn(this.state.variables);
        },
        onFail: (failureCount, error) => {
          this.dispatch({
            type: "failed",
            failureCount,
            error
          });
        },
        onPause: () => {
          this.dispatch({
            type: "pause"
          });
        },
        onContinue: () => {
          this.dispatch({
            type: "continue"
          });
        },
        retry: (_this$options$retry = this.options.retry) != null ? _this$options$retry : 0,
        retryDelay: this.options.retryDelay,
        networkMode: this.options.networkMode
      });
      return this.retryer.promise;
    };
    const restored = this.state.status === "loading";
    try {
      var _this$mutationCache$c3, _this$mutationCache$c4, _this$options$onSucce, _this$options2, _this$mutationCache$c5, _this$mutationCache$c6, _this$options$onSettl, _this$options3;
      if (!restored) {
        var _this$mutationCache$c, _this$mutationCache$c2, _this$options$onMutat, _this$options;
        this.dispatch({
          type: "loading",
          variables: this.options.variables
        });
        await ((_this$mutationCache$c = (_this$mutationCache$c2 = this.mutationCache.config).onMutate) == null ? void 0 : _this$mutationCache$c.call(_this$mutationCache$c2, this.state.variables, this));
        const context = await ((_this$options$onMutat = (_this$options = this.options).onMutate) == null ? void 0 : _this$options$onMutat.call(_this$options, this.state.variables));
        if (context !== this.state.context) {
          this.dispatch({
            type: "loading",
            context,
            variables: this.state.variables
          });
        }
      }
      const data = await executeMutation();
      await ((_this$mutationCache$c3 = (_this$mutationCache$c4 = this.mutationCache.config).onSuccess) == null ? void 0 : _this$mutationCache$c3.call(_this$mutationCache$c4, data, this.state.variables, this.state.context, this));
      await ((_this$options$onSucce = (_this$options2 = this.options).onSuccess) == null ? void 0 : _this$options$onSucce.call(_this$options2, data, this.state.variables, this.state.context));
      await ((_this$mutationCache$c5 = (_this$mutationCache$c6 = this.mutationCache.config).onSettled) == null ? void 0 : _this$mutationCache$c5.call(_this$mutationCache$c6, data, null, this.state.variables, this.state.context, this));
      await ((_this$options$onSettl = (_this$options3 = this.options).onSettled) == null ? void 0 : _this$options$onSettl.call(_this$options3, data, null, this.state.variables, this.state.context));
      this.dispatch({
        type: "success",
        data
      });
      return data;
    } catch (error) {
      try {
        var _this$mutationCache$c7, _this$mutationCache$c8, _this$options$onError, _this$options4, _this$mutationCache$c9, _this$mutationCache$c10, _this$options$onSettl2, _this$options5;
        await ((_this$mutationCache$c7 = (_this$mutationCache$c8 = this.mutationCache.config).onError) == null ? void 0 : _this$mutationCache$c7.call(_this$mutationCache$c8, error, this.state.variables, this.state.context, this));
        if (true) {
          this.logger.error(error);
        }
        await ((_this$options$onError = (_this$options4 = this.options).onError) == null ? void 0 : _this$options$onError.call(_this$options4, error, this.state.variables, this.state.context));
        await ((_this$mutationCache$c9 = (_this$mutationCache$c10 = this.mutationCache.config).onSettled) == null ? void 0 : _this$mutationCache$c9.call(_this$mutationCache$c10, void 0, error, this.state.variables, this.state.context, this));
        await ((_this$options$onSettl2 = (_this$options5 = this.options).onSettled) == null ? void 0 : _this$options$onSettl2.call(_this$options5, void 0, error, this.state.variables, this.state.context));
        throw error;
      } finally {
        this.dispatch({
          type: "error",
          error
        });
      }
    }
  }
  dispatch(action) {
    const reducer = (state) => {
      switch (action.type) {
        case "failed":
          return {
            ...state,
            failureCount: action.failureCount,
            failureReason: action.error
          };
        case "pause":
          return {
            ...state,
            isPaused: true
          };
        case "continue":
          return {
            ...state,
            isPaused: false
          };
        case "loading":
          return {
            ...state,
            context: action.context,
            data: void 0,
            failureCount: 0,
            failureReason: null,
            error: null,
            isPaused: !canFetch(this.options.networkMode),
            status: "loading",
            variables: action.variables
          };
        case "success":
          return {
            ...state,
            data: action.data,
            failureCount: 0,
            failureReason: null,
            error: null,
            status: "success",
            isPaused: false
          };
        case "error":
          return {
            ...state,
            data: void 0,
            error: action.error,
            failureCount: state.failureCount + 1,
            failureReason: action.error,
            isPaused: false,
            status: "error"
          };
        case "setState":
          return {
            ...state,
            ...action.state
          };
      }
    };
    this.state = reducer(this.state);
    notifyManager.batch(() => {
      this.observers.forEach((observer) => {
        observer.onMutationUpdate(action);
      });
      this.mutationCache.notify({
        mutation: this,
        type: "updated",
        action
      });
    });
  }
};
function getDefaultState2() {
  return {
    context: void 0,
    data: void 0,
    error: null,
    failureCount: 0,
    failureReason: null,
    isPaused: false,
    status: "idle",
    variables: void 0
  };
}

// node_modules/@tanstack/query-core/build/lib/mutationCache.mjs
var MutationCache = class extends Subscribable {
  constructor(config) {
    super();
    this.config = config || {};
    this.mutations = [];
    this.mutationId = 0;
  }
  build(client, options, state) {
    const mutation = new Mutation({
      mutationCache: this,
      logger: client.getLogger(),
      mutationId: ++this.mutationId,
      options: client.defaultMutationOptions(options),
      state,
      defaultOptions: options.mutationKey ? client.getMutationDefaults(options.mutationKey) : void 0
    });
    this.add(mutation);
    return mutation;
  }
  add(mutation) {
    this.mutations.push(mutation);
    this.notify({
      type: "added",
      mutation
    });
  }
  remove(mutation) {
    this.mutations = this.mutations.filter((x) => x !== mutation);
    this.notify({
      type: "removed",
      mutation
    });
  }
  clear() {
    notifyManager.batch(() => {
      this.mutations.forEach((mutation) => {
        this.remove(mutation);
      });
    });
  }
  getAll() {
    return this.mutations;
  }
  find(filters) {
    if (typeof filters.exact === "undefined") {
      filters.exact = true;
    }
    return this.mutations.find((mutation) => matchMutation(filters, mutation));
  }
  findAll(filters) {
    return this.mutations.filter((mutation) => matchMutation(filters, mutation));
  }
  notify(event) {
    notifyManager.batch(() => {
      this.listeners.forEach(({
        listener
      }) => {
        listener(event);
      });
    });
  }
  resumePausedMutations() {
    var _this$resuming;
    this.resuming = ((_this$resuming = this.resuming) != null ? _this$resuming : Promise.resolve()).then(() => {
      const pausedMutations = this.mutations.filter((x) => x.state.isPaused);
      return notifyManager.batch(() => pausedMutations.reduce((promise, mutation) => promise.then(() => mutation.continue().catch(noop)), Promise.resolve()));
    }).then(() => {
      this.resuming = void 0;
    });
    return this.resuming;
  }
};

// node_modules/@tanstack/query-core/build/lib/infiniteQueryBehavior.mjs
function infiniteQueryBehavior() {
  return {
    onFetch: (context) => {
      context.fetchFn = () => {
        var _context$fetchOptions, _context$fetchOptions2, _context$fetchOptions3, _context$fetchOptions4, _context$state$data, _context$state$data2;
        const refetchPage = (_context$fetchOptions = context.fetchOptions) == null ? void 0 : (_context$fetchOptions2 = _context$fetchOptions.meta) == null ? void 0 : _context$fetchOptions2.refetchPage;
        const fetchMore = (_context$fetchOptions3 = context.fetchOptions) == null ? void 0 : (_context$fetchOptions4 = _context$fetchOptions3.meta) == null ? void 0 : _context$fetchOptions4.fetchMore;
        const pageParam = fetchMore == null ? void 0 : fetchMore.pageParam;
        const isFetchingNextPage = (fetchMore == null ? void 0 : fetchMore.direction) === "forward";
        const isFetchingPreviousPage = (fetchMore == null ? void 0 : fetchMore.direction) === "backward";
        const oldPages = ((_context$state$data = context.state.data) == null ? void 0 : _context$state$data.pages) || [];
        const oldPageParams = ((_context$state$data2 = context.state.data) == null ? void 0 : _context$state$data2.pageParams) || [];
        let newPageParams = oldPageParams;
        let cancelled = false;
        const addSignalProperty = (object) => {
          Object.defineProperty(object, "signal", {
            enumerable: true,
            get: () => {
              var _context$signal;
              if ((_context$signal = context.signal) != null && _context$signal.aborted) {
                cancelled = true;
              } else {
                var _context$signal2;
                (_context$signal2 = context.signal) == null ? void 0 : _context$signal2.addEventListener("abort", () => {
                  cancelled = true;
                });
              }
              return context.signal;
            }
          });
        };
        const queryFn = context.options.queryFn || (() => Promise.reject("Missing queryFn for queryKey '" + context.options.queryHash + "'"));
        const buildNewPages = (pages, param, page, previous) => {
          newPageParams = previous ? [param, ...newPageParams] : [...newPageParams, param];
          return previous ? [page, ...pages] : [...pages, page];
        };
        const fetchPage = (pages, manual, param, previous) => {
          if (cancelled) {
            return Promise.reject("Cancelled");
          }
          if (typeof param === "undefined" && !manual && pages.length) {
            return Promise.resolve(pages);
          }
          const queryFnContext = {
            queryKey: context.queryKey,
            pageParam: param,
            meta: context.options.meta
          };
          addSignalProperty(queryFnContext);
          const queryFnResult = queryFn(queryFnContext);
          const promise2 = Promise.resolve(queryFnResult).then((page) => buildNewPages(pages, param, page, previous));
          return promise2;
        };
        let promise;
        if (!oldPages.length) {
          promise = fetchPage([]);
        } else if (isFetchingNextPage) {
          const manual = typeof pageParam !== "undefined";
          const param = manual ? pageParam : getNextPageParam(context.options, oldPages);
          promise = fetchPage(oldPages, manual, param);
        } else if (isFetchingPreviousPage) {
          const manual = typeof pageParam !== "undefined";
          const param = manual ? pageParam : getPreviousPageParam(context.options, oldPages);
          promise = fetchPage(oldPages, manual, param, true);
        } else {
          newPageParams = [];
          const manual = typeof context.options.getNextPageParam === "undefined";
          const shouldFetchFirstPage = refetchPage && oldPages[0] ? refetchPage(oldPages[0], 0, oldPages) : true;
          promise = shouldFetchFirstPage ? fetchPage([], manual, oldPageParams[0]) : Promise.resolve(buildNewPages([], oldPageParams[0], oldPages[0]));
          for (let i2 = 1; i2 < oldPages.length; i2++) {
            promise = promise.then((pages) => {
              const shouldFetchNextPage = refetchPage && oldPages[i2] ? refetchPage(oldPages[i2], i2, oldPages) : true;
              if (shouldFetchNextPage) {
                const param = manual ? oldPageParams[i2] : getNextPageParam(context.options, pages);
                return fetchPage(pages, manual, param);
              }
              return Promise.resolve(buildNewPages(pages, oldPageParams[i2], oldPages[i2]));
            });
          }
        }
        const finalPromise = promise.then((pages) => ({
          pages,
          pageParams: newPageParams
        }));
        return finalPromise;
      };
    }
  };
}
function getNextPageParam(options, pages) {
  return options.getNextPageParam == null ? void 0 : options.getNextPageParam(pages[pages.length - 1], pages);
}
function getPreviousPageParam(options, pages) {
  return options.getPreviousPageParam == null ? void 0 : options.getPreviousPageParam(pages[0], pages);
}
function hasNextPage(options, pages) {
  if (options.getNextPageParam && Array.isArray(pages)) {
    const nextPageParam = getNextPageParam(options, pages);
    return typeof nextPageParam !== "undefined" && nextPageParam !== null && nextPageParam !== false;
  }
  return;
}
function hasPreviousPage(options, pages) {
  if (options.getPreviousPageParam && Array.isArray(pages)) {
    const previousPageParam = getPreviousPageParam(options, pages);
    return typeof previousPageParam !== "undefined" && previousPageParam !== null && previousPageParam !== false;
  }
  return;
}

// node_modules/@tanstack/query-core/build/lib/queryClient.mjs
var QueryClient = class {
  constructor(config = {}) {
    this.queryCache = config.queryCache || new QueryCache();
    this.mutationCache = config.mutationCache || new MutationCache();
    this.logger = config.logger || defaultLogger;
    this.defaultOptions = config.defaultOptions || {};
    this.queryDefaults = [];
    this.mutationDefaults = [];
    this.mountCount = 0;
    if (config.logger) {
      this.logger.error("Passing a custom logger has been deprecated and will be removed in the next major version.");
    }
  }
  mount() {
    this.mountCount++;
    if (this.mountCount !== 1)
      return;
    this.unsubscribeFocus = focusManager.subscribe(() => {
      if (focusManager.isFocused()) {
        this.resumePausedMutations();
        this.queryCache.onFocus();
      }
    });
    this.unsubscribeOnline = onlineManager.subscribe(() => {
      if (onlineManager.isOnline()) {
        this.resumePausedMutations();
        this.queryCache.onOnline();
      }
    });
  }
  unmount() {
    var _this$unsubscribeFocu, _this$unsubscribeOnli;
    this.mountCount--;
    if (this.mountCount !== 0)
      return;
    (_this$unsubscribeFocu = this.unsubscribeFocus) == null ? void 0 : _this$unsubscribeFocu.call(this);
    this.unsubscribeFocus = void 0;
    (_this$unsubscribeOnli = this.unsubscribeOnline) == null ? void 0 : _this$unsubscribeOnli.call(this);
    this.unsubscribeOnline = void 0;
  }
  isFetching(arg1, arg2) {
    const [filters] = parseFilterArgs(arg1, arg2);
    filters.fetchStatus = "fetching";
    return this.queryCache.findAll(filters).length;
  }
  isMutating(filters) {
    return this.mutationCache.findAll({
      ...filters,
      fetching: true
    }).length;
  }
  getQueryData(queryKey, filters) {
    var _this$queryCache$find;
    return (_this$queryCache$find = this.queryCache.find(queryKey, filters)) == null ? void 0 : _this$queryCache$find.state.data;
  }
  ensureQueryData(arg1, arg2, arg3) {
    const parsedOptions = parseQueryArgs(arg1, arg2, arg3);
    const cachedData = this.getQueryData(parsedOptions.queryKey);
    return cachedData ? Promise.resolve(cachedData) : this.fetchQuery(parsedOptions);
  }
  getQueriesData(queryKeyOrFilters) {
    return this.getQueryCache().findAll(queryKeyOrFilters).map(({
      queryKey,
      state
    }) => {
      const data = state.data;
      return [queryKey, data];
    });
  }
  setQueryData(queryKey, updater, options) {
    const query = this.queryCache.find(queryKey);
    const prevData = query == null ? void 0 : query.state.data;
    const data = functionalUpdate(updater, prevData);
    if (typeof data === "undefined") {
      return void 0;
    }
    const parsedOptions = parseQueryArgs(queryKey);
    const defaultedOptions = this.defaultQueryOptions(parsedOptions);
    return this.queryCache.build(this, defaultedOptions).setData(data, {
      ...options,
      manual: true
    });
  }
  setQueriesData(queryKeyOrFilters, updater, options) {
    return notifyManager.batch(() => this.getQueryCache().findAll(queryKeyOrFilters).map(({
      queryKey
    }) => [queryKey, this.setQueryData(queryKey, updater, options)]));
  }
  getQueryState(queryKey, filters) {
    var _this$queryCache$find2;
    return (_this$queryCache$find2 = this.queryCache.find(queryKey, filters)) == null ? void 0 : _this$queryCache$find2.state;
  }
  removeQueries(arg1, arg2) {
    const [filters] = parseFilterArgs(arg1, arg2);
    const queryCache = this.queryCache;
    notifyManager.batch(() => {
      queryCache.findAll(filters).forEach((query) => {
        queryCache.remove(query);
      });
    });
  }
  resetQueries(arg1, arg2, arg3) {
    const [filters, options] = parseFilterArgs(arg1, arg2, arg3);
    const queryCache = this.queryCache;
    const refetchFilters = {
      type: "active",
      ...filters
    };
    return notifyManager.batch(() => {
      queryCache.findAll(filters).forEach((query) => {
        query.reset();
      });
      return this.refetchQueries(refetchFilters, options);
    });
  }
  cancelQueries(arg1, arg2, arg3) {
    const [filters, cancelOptions = {}] = parseFilterArgs(arg1, arg2, arg3);
    if (typeof cancelOptions.revert === "undefined") {
      cancelOptions.revert = true;
    }
    const promises = notifyManager.batch(() => this.queryCache.findAll(filters).map((query) => query.cancel(cancelOptions)));
    return Promise.all(promises).then(noop).catch(noop);
  }
  invalidateQueries(arg1, arg2, arg3) {
    const [filters, options] = parseFilterArgs(arg1, arg2, arg3);
    return notifyManager.batch(() => {
      var _ref, _filters$refetchType;
      this.queryCache.findAll(filters).forEach((query) => {
        query.invalidate();
      });
      if (filters.refetchType === "none") {
        return Promise.resolve();
      }
      const refetchFilters = {
        ...filters,
        type: (_ref = (_filters$refetchType = filters.refetchType) != null ? _filters$refetchType : filters.type) != null ? _ref : "active"
      };
      return this.refetchQueries(refetchFilters, options);
    });
  }
  refetchQueries(arg1, arg2, arg3) {
    const [filters, options] = parseFilterArgs(arg1, arg2, arg3);
    const promises = notifyManager.batch(() => this.queryCache.findAll(filters).filter((query) => !query.isDisabled()).map((query) => {
      var _options$cancelRefetc;
      return query.fetch(void 0, {
        ...options,
        cancelRefetch: (_options$cancelRefetc = options == null ? void 0 : options.cancelRefetch) != null ? _options$cancelRefetc : true,
        meta: {
          refetchPage: filters.refetchPage
        }
      });
    }));
    let promise = Promise.all(promises).then(noop);
    if (!(options != null && options.throwOnError)) {
      promise = promise.catch(noop);
    }
    return promise;
  }
  fetchQuery(arg1, arg2, arg3) {
    const parsedOptions = parseQueryArgs(arg1, arg2, arg3);
    const defaultedOptions = this.defaultQueryOptions(parsedOptions);
    if (typeof defaultedOptions.retry === "undefined") {
      defaultedOptions.retry = false;
    }
    const query = this.queryCache.build(this, defaultedOptions);
    return query.isStaleByTime(defaultedOptions.staleTime) ? query.fetch(defaultedOptions) : Promise.resolve(query.state.data);
  }
  prefetchQuery(arg1, arg2, arg3) {
    return this.fetchQuery(arg1, arg2, arg3).then(noop).catch(noop);
  }
  fetchInfiniteQuery(arg1, arg2, arg3) {
    const parsedOptions = parseQueryArgs(arg1, arg2, arg3);
    parsedOptions.behavior = infiniteQueryBehavior();
    return this.fetchQuery(parsedOptions);
  }
  prefetchInfiniteQuery(arg1, arg2, arg3) {
    return this.fetchInfiniteQuery(arg1, arg2, arg3).then(noop).catch(noop);
  }
  resumePausedMutations() {
    return this.mutationCache.resumePausedMutations();
  }
  getQueryCache() {
    return this.queryCache;
  }
  getMutationCache() {
    return this.mutationCache;
  }
  getLogger() {
    return this.logger;
  }
  getDefaultOptions() {
    return this.defaultOptions;
  }
  setDefaultOptions(options) {
    this.defaultOptions = options;
  }
  setQueryDefaults(queryKey, options) {
    const result = this.queryDefaults.find((x) => hashQueryKey(queryKey) === hashQueryKey(x.queryKey));
    if (result) {
      result.defaultOptions = options;
    } else {
      this.queryDefaults.push({
        queryKey,
        defaultOptions: options
      });
    }
  }
  getQueryDefaults(queryKey) {
    if (!queryKey) {
      return void 0;
    }
    const firstMatchingDefaults = this.queryDefaults.find((x) => partialMatchKey(queryKey, x.queryKey));
    if (true) {
      const matchingDefaults = this.queryDefaults.filter((x) => partialMatchKey(queryKey, x.queryKey));
      if (matchingDefaults.length > 1) {
        this.logger.error("[QueryClient] Several query defaults match with key '" + JSON.stringify(queryKey) + "'. The first matching query defaults are used. Please check how query defaults are registered. Order does matter here. cf. https://react-query.tanstack.com/reference/QueryClient#queryclientsetquerydefaults.");
      }
    }
    return firstMatchingDefaults == null ? void 0 : firstMatchingDefaults.defaultOptions;
  }
  setMutationDefaults(mutationKey, options) {
    const result = this.mutationDefaults.find((x) => hashQueryKey(mutationKey) === hashQueryKey(x.mutationKey));
    if (result) {
      result.defaultOptions = options;
    } else {
      this.mutationDefaults.push({
        mutationKey,
        defaultOptions: options
      });
    }
  }
  getMutationDefaults(mutationKey) {
    if (!mutationKey) {
      return void 0;
    }
    const firstMatchingDefaults = this.mutationDefaults.find((x) => partialMatchKey(mutationKey, x.mutationKey));
    if (true) {
      const matchingDefaults = this.mutationDefaults.filter((x) => partialMatchKey(mutationKey, x.mutationKey));
      if (matchingDefaults.length > 1) {
        this.logger.error("[QueryClient] Several mutation defaults match with key '" + JSON.stringify(mutationKey) + "'. The first matching mutation defaults are used. Please check how mutation defaults are registered. Order does matter here. cf. https://react-query.tanstack.com/reference/QueryClient#queryclientsetmutationdefaults.");
      }
    }
    return firstMatchingDefaults == null ? void 0 : firstMatchingDefaults.defaultOptions;
  }
  defaultQueryOptions(options) {
    if (options != null && options._defaulted) {
      return options;
    }
    const defaultedOptions = {
      ...this.defaultOptions.queries,
      ...this.getQueryDefaults(options == null ? void 0 : options.queryKey),
      ...options,
      _defaulted: true
    };
    if (!defaultedOptions.queryHash && defaultedOptions.queryKey) {
      defaultedOptions.queryHash = hashQueryKeyByOptions(defaultedOptions.queryKey, defaultedOptions);
    }
    if (typeof defaultedOptions.refetchOnReconnect === "undefined") {
      defaultedOptions.refetchOnReconnect = defaultedOptions.networkMode !== "always";
    }
    if (typeof defaultedOptions.useErrorBoundary === "undefined") {
      defaultedOptions.useErrorBoundary = !!defaultedOptions.suspense;
    }
    return defaultedOptions;
  }
  defaultMutationOptions(options) {
    if (options != null && options._defaulted) {
      return options;
    }
    return {
      ...this.defaultOptions.mutations,
      ...this.getMutationDefaults(options == null ? void 0 : options.mutationKey),
      ...options,
      _defaulted: true
    };
  }
  clear() {
    this.queryCache.clear();
    this.mutationCache.clear();
  }
};

// node_modules/@tanstack/query-core/build/lib/queryObserver.mjs
var QueryObserver = class extends Subscribable {
  constructor(client, options) {
    super();
    this.client = client;
    this.options = options;
    this.trackedProps = /* @__PURE__ */ new Set();
    this.selectError = null;
    this.bindMethods();
    this.setOptions(options);
  }
  bindMethods() {
    this.remove = this.remove.bind(this);
    this.refetch = this.refetch.bind(this);
  }
  onSubscribe() {
    if (this.listeners.size === 1) {
      this.currentQuery.addObserver(this);
      if (shouldFetchOnMount(this.currentQuery, this.options)) {
        this.executeFetch();
      }
      this.updateTimers();
    }
  }
  onUnsubscribe() {
    if (!this.hasListeners()) {
      this.destroy();
    }
  }
  shouldFetchOnReconnect() {
    return shouldFetchOn(this.currentQuery, this.options, this.options.refetchOnReconnect);
  }
  shouldFetchOnWindowFocus() {
    return shouldFetchOn(this.currentQuery, this.options, this.options.refetchOnWindowFocus);
  }
  destroy() {
    this.listeners = /* @__PURE__ */ new Set();
    this.clearStaleTimeout();
    this.clearRefetchInterval();
    this.currentQuery.removeObserver(this);
  }
  setOptions(options, notifyOptions) {
    const prevOptions = this.options;
    const prevQuery = this.currentQuery;
    this.options = this.client.defaultQueryOptions(options);
    if (typeof (options == null ? void 0 : options.isDataEqual) !== "undefined") {
      this.client.getLogger().error("The isDataEqual option has been deprecated and will be removed in the next major version. You can achieve the same functionality by passing a function as the structuralSharing option");
    }
    if (!shallowEqualObjects(prevOptions, this.options)) {
      this.client.getQueryCache().notify({
        type: "observerOptionsUpdated",
        query: this.currentQuery,
        observer: this
      });
    }
    if (typeof this.options.enabled !== "undefined" && typeof this.options.enabled !== "boolean") {
      throw new Error("Expected enabled to be a boolean");
    }
    if (!this.options.queryKey) {
      this.options.queryKey = prevOptions.queryKey;
    }
    this.updateQuery();
    const mounted = this.hasListeners();
    if (mounted && shouldFetchOptionally(this.currentQuery, prevQuery, this.options, prevOptions)) {
      this.executeFetch();
    }
    this.updateResult(notifyOptions);
    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.staleTime !== prevOptions.staleTime)) {
      this.updateStaleTimeout();
    }
    const nextRefetchInterval = this.computeRefetchInterval();
    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || nextRefetchInterval !== this.currentRefetchInterval)) {
      this.updateRefetchInterval(nextRefetchInterval);
    }
  }
  getOptimisticResult(options) {
    const query = this.client.getQueryCache().build(this.client, options);
    const result = this.createResult(query, options);
    if (shouldAssignObserverCurrentProperties(this, result, options)) {
      this.currentResult = result;
      this.currentResultOptions = this.options;
      this.currentResultState = this.currentQuery.state;
    }
    return result;
  }
  getCurrentResult() {
    return this.currentResult;
  }
  trackResult(result) {
    const trackedResult = {};
    Object.keys(result).forEach((key) => {
      Object.defineProperty(trackedResult, key, {
        configurable: false,
        enumerable: true,
        get: () => {
          this.trackedProps.add(key);
          return result[key];
        }
      });
    });
    return trackedResult;
  }
  getCurrentQuery() {
    return this.currentQuery;
  }
  remove() {
    this.client.getQueryCache().remove(this.currentQuery);
  }
  refetch({
    refetchPage,
    ...options
  } = {}) {
    return this.fetch({
      ...options,
      meta: {
        refetchPage
      }
    });
  }
  fetchOptimistic(options) {
    const defaultedOptions = this.client.defaultQueryOptions(options);
    const query = this.client.getQueryCache().build(this.client, defaultedOptions);
    query.isFetchingOptimistic = true;
    return query.fetch().then(() => this.createResult(query, defaultedOptions));
  }
  fetch(fetchOptions) {
    var _fetchOptions$cancelR;
    return this.executeFetch({
      ...fetchOptions,
      cancelRefetch: (_fetchOptions$cancelR = fetchOptions.cancelRefetch) != null ? _fetchOptions$cancelR : true
    }).then(() => {
      this.updateResult();
      return this.currentResult;
    });
  }
  executeFetch(fetchOptions) {
    this.updateQuery();
    let promise = this.currentQuery.fetch(this.options, fetchOptions);
    if (!(fetchOptions != null && fetchOptions.throwOnError)) {
      promise = promise.catch(noop);
    }
    return promise;
  }
  updateStaleTimeout() {
    this.clearStaleTimeout();
    if (isServer || this.currentResult.isStale || !isValidTimeout(this.options.staleTime)) {
      return;
    }
    const time = timeUntilStale(this.currentResult.dataUpdatedAt, this.options.staleTime);
    const timeout = time + 1;
    this.staleTimeoutId = setTimeout(() => {
      if (!this.currentResult.isStale) {
        this.updateResult();
      }
    }, timeout);
  }
  computeRefetchInterval() {
    var _this$options$refetch;
    return typeof this.options.refetchInterval === "function" ? this.options.refetchInterval(this.currentResult.data, this.currentQuery) : (_this$options$refetch = this.options.refetchInterval) != null ? _this$options$refetch : false;
  }
  updateRefetchInterval(nextInterval) {
    this.clearRefetchInterval();
    this.currentRefetchInterval = nextInterval;
    if (isServer || this.options.enabled === false || !isValidTimeout(this.currentRefetchInterval) || this.currentRefetchInterval === 0) {
      return;
    }
    this.refetchIntervalId = setInterval(() => {
      if (this.options.refetchIntervalInBackground || focusManager.isFocused()) {
        this.executeFetch();
      }
    }, this.currentRefetchInterval);
  }
  updateTimers() {
    this.updateStaleTimeout();
    this.updateRefetchInterval(this.computeRefetchInterval());
  }
  clearStaleTimeout() {
    if (this.staleTimeoutId) {
      clearTimeout(this.staleTimeoutId);
      this.staleTimeoutId = void 0;
    }
  }
  clearRefetchInterval() {
    if (this.refetchIntervalId) {
      clearInterval(this.refetchIntervalId);
      this.refetchIntervalId = void 0;
    }
  }
  createResult(query, options) {
    const prevQuery = this.currentQuery;
    const prevOptions = this.options;
    const prevResult = this.currentResult;
    const prevResultState = this.currentResultState;
    const prevResultOptions = this.currentResultOptions;
    const queryChange = query !== prevQuery;
    const queryInitialState = queryChange ? query.state : this.currentQueryInitialState;
    const prevQueryResult = queryChange ? this.currentResult : this.previousQueryResult;
    const {
      state
    } = query;
    let {
      dataUpdatedAt,
      error,
      errorUpdatedAt,
      fetchStatus,
      status
    } = state;
    let isPreviousData = false;
    let isPlaceholderData = false;
    let data;
    if (options._optimisticResults) {
      const mounted = this.hasListeners();
      const fetchOnMount = !mounted && shouldFetchOnMount(query, options);
      const fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);
      if (fetchOnMount || fetchOptionally) {
        fetchStatus = canFetch(query.options.networkMode) ? "fetching" : "paused";
        if (!dataUpdatedAt) {
          status = "loading";
        }
      }
      if (options._optimisticResults === "isRestoring") {
        fetchStatus = "idle";
      }
    }
    if (options.keepPreviousData && !state.dataUpdatedAt && prevQueryResult != null && prevQueryResult.isSuccess && status !== "error") {
      data = prevQueryResult.data;
      dataUpdatedAt = prevQueryResult.dataUpdatedAt;
      status = prevQueryResult.status;
      isPreviousData = true;
    } else if (options.select && typeof state.data !== "undefined") {
      if (prevResult && state.data === (prevResultState == null ? void 0 : prevResultState.data) && options.select === this.selectFn) {
        data = this.selectResult;
      } else {
        try {
          this.selectFn = options.select;
          data = options.select(state.data);
          data = replaceData(prevResult == null ? void 0 : prevResult.data, data, options);
          this.selectResult = data;
          this.selectError = null;
        } catch (selectError) {
          if (true) {
            this.client.getLogger().error(selectError);
          }
          this.selectError = selectError;
        }
      }
    } else {
      data = state.data;
    }
    if (typeof options.placeholderData !== "undefined" && typeof data === "undefined" && status === "loading") {
      let placeholderData;
      if (prevResult != null && prevResult.isPlaceholderData && options.placeholderData === (prevResultOptions == null ? void 0 : prevResultOptions.placeholderData)) {
        placeholderData = prevResult.data;
      } else {
        placeholderData = typeof options.placeholderData === "function" ? options.placeholderData() : options.placeholderData;
        if (options.select && typeof placeholderData !== "undefined") {
          try {
            placeholderData = options.select(placeholderData);
            this.selectError = null;
          } catch (selectError) {
            if (true) {
              this.client.getLogger().error(selectError);
            }
            this.selectError = selectError;
          }
        }
      }
      if (typeof placeholderData !== "undefined") {
        status = "success";
        data = replaceData(prevResult == null ? void 0 : prevResult.data, placeholderData, options);
        isPlaceholderData = true;
      }
    }
    if (this.selectError) {
      error = this.selectError;
      data = this.selectResult;
      errorUpdatedAt = Date.now();
      status = "error";
    }
    const isFetching = fetchStatus === "fetching";
    const isLoading = status === "loading";
    const isError2 = status === "error";
    const result = {
      status,
      fetchStatus,
      isLoading,
      isSuccess: status === "success",
      isError: isError2,
      isInitialLoading: isLoading && isFetching,
      data,
      dataUpdatedAt,
      error,
      errorUpdatedAt,
      failureCount: state.fetchFailureCount,
      failureReason: state.fetchFailureReason,
      errorUpdateCount: state.errorUpdateCount,
      isFetched: state.dataUpdateCount > 0 || state.errorUpdateCount > 0,
      isFetchedAfterMount: state.dataUpdateCount > queryInitialState.dataUpdateCount || state.errorUpdateCount > queryInitialState.errorUpdateCount,
      isFetching,
      isRefetching: isFetching && !isLoading,
      isLoadingError: isError2 && state.dataUpdatedAt === 0,
      isPaused: fetchStatus === "paused",
      isPlaceholderData,
      isPreviousData,
      isRefetchError: isError2 && state.dataUpdatedAt !== 0,
      isStale: isStale(query, options),
      refetch: this.refetch,
      remove: this.remove
    };
    return result;
  }
  updateResult(notifyOptions) {
    const prevResult = this.currentResult;
    const nextResult = this.createResult(this.currentQuery, this.options);
    this.currentResultState = this.currentQuery.state;
    this.currentResultOptions = this.options;
    if (shallowEqualObjects(nextResult, prevResult)) {
      return;
    }
    this.currentResult = nextResult;
    const defaultNotifyOptions = {
      cache: true
    };
    const shouldNotifyListeners = () => {
      if (!prevResult) {
        return true;
      }
      const {
        notifyOnChangeProps
      } = this.options;
      const notifyOnChangePropsValue = typeof notifyOnChangeProps === "function" ? notifyOnChangeProps() : notifyOnChangeProps;
      if (notifyOnChangePropsValue === "all" || !notifyOnChangePropsValue && !this.trackedProps.size) {
        return true;
      }
      const includedProps = new Set(notifyOnChangePropsValue != null ? notifyOnChangePropsValue : this.trackedProps);
      if (this.options.useErrorBoundary) {
        includedProps.add("error");
      }
      return Object.keys(this.currentResult).some((key) => {
        const typedKey = key;
        const changed = this.currentResult[typedKey] !== prevResult[typedKey];
        return changed && includedProps.has(typedKey);
      });
    };
    if ((notifyOptions == null ? void 0 : notifyOptions.listeners) !== false && shouldNotifyListeners()) {
      defaultNotifyOptions.listeners = true;
    }
    this.notify({
      ...defaultNotifyOptions,
      ...notifyOptions
    });
  }
  updateQuery() {
    const query = this.client.getQueryCache().build(this.client, this.options);
    if (query === this.currentQuery) {
      return;
    }
    const prevQuery = this.currentQuery;
    this.currentQuery = query;
    this.currentQueryInitialState = query.state;
    this.previousQueryResult = this.currentResult;
    if (this.hasListeners()) {
      prevQuery == null ? void 0 : prevQuery.removeObserver(this);
      query.addObserver(this);
    }
  }
  onQueryUpdate(action) {
    const notifyOptions = {};
    if (action.type === "success") {
      notifyOptions.onSuccess = !action.manual;
    } else if (action.type === "error" && !isCancelledError(action.error)) {
      notifyOptions.onError = true;
    }
    this.updateResult(notifyOptions);
    if (this.hasListeners()) {
      this.updateTimers();
    }
  }
  notify(notifyOptions) {
    notifyManager.batch(() => {
      if (notifyOptions.onSuccess) {
        var _this$options$onSucce, _this$options, _this$options$onSettl, _this$options2;
        (_this$options$onSucce = (_this$options = this.options).onSuccess) == null ? void 0 : _this$options$onSucce.call(_this$options, this.currentResult.data);
        (_this$options$onSettl = (_this$options2 = this.options).onSettled) == null ? void 0 : _this$options$onSettl.call(_this$options2, this.currentResult.data, null);
      } else if (notifyOptions.onError) {
        var _this$options$onError, _this$options3, _this$options$onSettl2, _this$options4;
        (_this$options$onError = (_this$options3 = this.options).onError) == null ? void 0 : _this$options$onError.call(_this$options3, this.currentResult.error);
        (_this$options$onSettl2 = (_this$options4 = this.options).onSettled) == null ? void 0 : _this$options$onSettl2.call(_this$options4, void 0, this.currentResult.error);
      }
      if (notifyOptions.listeners) {
        this.listeners.forEach(({
          listener
        }) => {
          listener(this.currentResult);
        });
      }
      if (notifyOptions.cache) {
        this.client.getQueryCache().notify({
          query: this.currentQuery,
          type: "observerResultsUpdated"
        });
      }
    });
  }
};
function shouldLoadOnMount(query, options) {
  return options.enabled !== false && !query.state.dataUpdatedAt && !(query.state.status === "error" && options.retryOnMount === false);
}
function shouldFetchOnMount(query, options) {
  return shouldLoadOnMount(query, options) || query.state.dataUpdatedAt > 0 && shouldFetchOn(query, options, options.refetchOnMount);
}
function shouldFetchOn(query, options, field) {
  if (options.enabled !== false) {
    const value = typeof field === "function" ? field(query) : field;
    return value === "always" || value !== false && isStale(query, options);
  }
  return false;
}
function shouldFetchOptionally(query, prevQuery, options, prevOptions) {
  return options.enabled !== false && (query !== prevQuery || prevOptions.enabled === false) && (!options.suspense || query.state.status !== "error") && isStale(query, options);
}
function isStale(query, options) {
  return query.isStaleByTime(options.staleTime);
}
function shouldAssignObserverCurrentProperties(observer, optimisticResult, options) {
  if (options.keepPreviousData) {
    return false;
  }
  if (options.placeholderData !== void 0) {
    return optimisticResult.isPlaceholderData;
  }
  if (!shallowEqualObjects(observer.getCurrentResult(), optimisticResult)) {
    return true;
  }
  return false;
}

// node_modules/@tanstack/query-core/build/lib/infiniteQueryObserver.mjs
var InfiniteQueryObserver = class extends QueryObserver {
  // Type override
  // Type override
  // Type override
  // eslint-disable-next-line @typescript-eslint/no-useless-constructor
  constructor(client, options) {
    super(client, options);
  }
  bindMethods() {
    super.bindMethods();
    this.fetchNextPage = this.fetchNextPage.bind(this);
    this.fetchPreviousPage = this.fetchPreviousPage.bind(this);
  }
  setOptions(options, notifyOptions) {
    super.setOptions({
      ...options,
      behavior: infiniteQueryBehavior()
    }, notifyOptions);
  }
  getOptimisticResult(options) {
    options.behavior = infiniteQueryBehavior();
    return super.getOptimisticResult(options);
  }
  fetchNextPage({
    pageParam,
    ...options
  } = {}) {
    return this.fetch({
      ...options,
      meta: {
        fetchMore: {
          direction: "forward",
          pageParam
        }
      }
    });
  }
  fetchPreviousPage({
    pageParam,
    ...options
  } = {}) {
    return this.fetch({
      ...options,
      meta: {
        fetchMore: {
          direction: "backward",
          pageParam
        }
      }
    });
  }
  createResult(query, options) {
    var _state$fetchMeta, _state$fetchMeta$fetc, _state$fetchMeta2, _state$fetchMeta2$fet, _state$data, _state$data2;
    const {
      state
    } = query;
    const result = super.createResult(query, options);
    const {
      isFetching,
      isRefetching
    } = result;
    const isFetchingNextPage = isFetching && ((_state$fetchMeta = state.fetchMeta) == null ? void 0 : (_state$fetchMeta$fetc = _state$fetchMeta.fetchMore) == null ? void 0 : _state$fetchMeta$fetc.direction) === "forward";
    const isFetchingPreviousPage = isFetching && ((_state$fetchMeta2 = state.fetchMeta) == null ? void 0 : (_state$fetchMeta2$fet = _state$fetchMeta2.fetchMore) == null ? void 0 : _state$fetchMeta2$fet.direction) === "backward";
    return {
      ...result,
      fetchNextPage: this.fetchNextPage,
      fetchPreviousPage: this.fetchPreviousPage,
      hasNextPage: hasNextPage(options, (_state$data = state.data) == null ? void 0 : _state$data.pages),
      hasPreviousPage: hasPreviousPage(options, (_state$data2 = state.data) == null ? void 0 : _state$data2.pages),
      isFetchingNextPage,
      isFetchingPreviousPage,
      isRefetching: isRefetching && !isFetchingNextPage && !isFetchingPreviousPage
    };
  }
};

// node_modules/@tanstack/query-core/build/lib/mutationObserver.mjs
var MutationObserver = class extends Subscribable {
  constructor(client, options) {
    super();
    this.client = client;
    this.setOptions(options);
    this.bindMethods();
    this.updateResult();
  }
  bindMethods() {
    this.mutate = this.mutate.bind(this);
    this.reset = this.reset.bind(this);
  }
  setOptions(options) {
    var _this$currentMutation;
    const prevOptions = this.options;
    this.options = this.client.defaultMutationOptions(options);
    if (!shallowEqualObjects(prevOptions, this.options)) {
      this.client.getMutationCache().notify({
        type: "observerOptionsUpdated",
        mutation: this.currentMutation,
        observer: this
      });
    }
    (_this$currentMutation = this.currentMutation) == null ? void 0 : _this$currentMutation.setOptions(this.options);
  }
  onUnsubscribe() {
    if (!this.hasListeners()) {
      var _this$currentMutation2;
      (_this$currentMutation2 = this.currentMutation) == null ? void 0 : _this$currentMutation2.removeObserver(this);
    }
  }
  onMutationUpdate(action) {
    this.updateResult();
    const notifyOptions = {
      listeners: true
    };
    if (action.type === "success") {
      notifyOptions.onSuccess = true;
    } else if (action.type === "error") {
      notifyOptions.onError = true;
    }
    this.notify(notifyOptions);
  }
  getCurrentResult() {
    return this.currentResult;
  }
  reset() {
    this.currentMutation = void 0;
    this.updateResult();
    this.notify({
      listeners: true
    });
  }
  mutate(variables, options) {
    this.mutateOptions = options;
    if (this.currentMutation) {
      this.currentMutation.removeObserver(this);
    }
    this.currentMutation = this.client.getMutationCache().build(this.client, {
      ...this.options,
      variables: typeof variables !== "undefined" ? variables : this.options.variables
    });
    this.currentMutation.addObserver(this);
    return this.currentMutation.execute();
  }
  updateResult() {
    const state = this.currentMutation ? this.currentMutation.state : getDefaultState2();
    const result = {
      ...state,
      isLoading: state.status === "loading",
      isSuccess: state.status === "success",
      isError: state.status === "error",
      isIdle: state.status === "idle",
      mutate: this.mutate,
      reset: this.reset
    };
    this.currentResult = result;
  }
  notify(options) {
    notifyManager.batch(() => {
      if (this.mutateOptions && this.hasListeners()) {
        if (options.onSuccess) {
          var _this$mutateOptions$o, _this$mutateOptions, _this$mutateOptions$o2, _this$mutateOptions2;
          (_this$mutateOptions$o = (_this$mutateOptions = this.mutateOptions).onSuccess) == null ? void 0 : _this$mutateOptions$o.call(_this$mutateOptions, this.currentResult.data, this.currentResult.variables, this.currentResult.context);
          (_this$mutateOptions$o2 = (_this$mutateOptions2 = this.mutateOptions).onSettled) == null ? void 0 : _this$mutateOptions$o2.call(_this$mutateOptions2, this.currentResult.data, null, this.currentResult.variables, this.currentResult.context);
        } else if (options.onError) {
          var _this$mutateOptions$o3, _this$mutateOptions3, _this$mutateOptions$o4, _this$mutateOptions4;
          (_this$mutateOptions$o3 = (_this$mutateOptions3 = this.mutateOptions).onError) == null ? void 0 : _this$mutateOptions$o3.call(_this$mutateOptions3, this.currentResult.error, this.currentResult.variables, this.currentResult.context);
          (_this$mutateOptions$o4 = (_this$mutateOptions4 = this.mutateOptions).onSettled) == null ? void 0 : _this$mutateOptions$o4.call(_this$mutateOptions4, void 0, this.currentResult.error, this.currentResult.variables, this.currentResult.context);
        }
      }
      if (options.listeners) {
        this.listeners.forEach(({
          listener
        }) => {
          listener(this.currentResult);
        });
      }
    });
  }
};

// node_modules/@tanstack/react-query/build/lib/reactBatchedUpdates.mjs
var ReactDOM = __toESM(require_react_dom(), 1);
var unstable_batchedUpdates2 = ReactDOM.unstable_batchedUpdates;

// node_modules/@tanstack/react-query/build/lib/setBatchUpdatesFn.mjs
notifyManager.setBatchNotifyFunction(unstable_batchedUpdates2);

// node_modules/@tanstack/react-query/build/lib/useQueries.mjs
var React5 = __toESM(require_react(), 1);

// node_modules/@tanstack/react-query/build/lib/useSyncExternalStore.mjs
var import_shim = __toESM(require_shim(), 1);
var useSyncExternalStore = import_shim.useSyncExternalStore;

// node_modules/@tanstack/react-query/build/lib/QueryClientProvider.mjs
var React = __toESM(require_react(), 1);
var defaultContext = React.createContext(void 0);
var QueryClientSharingContext = React.createContext(false);
function getQueryClientContext(context, contextSharing) {
  if (context) {
    return context;
  }
  if (contextSharing && typeof window !== "undefined") {
    if (!window.ReactQueryClientContext) {
      window.ReactQueryClientContext = defaultContext;
    }
    return window.ReactQueryClientContext;
  }
  return defaultContext;
}
var useQueryClient = ({
  context
} = {}) => {
  const queryClient = React.useContext(getQueryClientContext(context, React.useContext(QueryClientSharingContext)));
  if (!queryClient) {
    throw new Error("No QueryClient set, use QueryClientProvider to set one");
  }
  return queryClient;
};
var QueryClientProvider = ({
  client,
  children,
  context,
  contextSharing = false
}) => {
  React.useEffect(() => {
    client.mount();
    return () => {
      client.unmount();
    };
  }, [client]);
  if (contextSharing) {
    client.getLogger().error("The contextSharing option has been deprecated and will be removed in the next major version");
  }
  const Context = getQueryClientContext(context, contextSharing);
  return React.createElement(QueryClientSharingContext.Provider, {
    value: !context && contextSharing
  }, React.createElement(Context.Provider, {
    value: client
  }, children));
};

// node_modules/@tanstack/react-query/build/lib/isRestoring.mjs
var React2 = __toESM(require_react(), 1);
var IsRestoringContext = React2.createContext(false);
var useIsRestoring = () => React2.useContext(IsRestoringContext);
var IsRestoringProvider = IsRestoringContext.Provider;

// node_modules/@tanstack/react-query/build/lib/QueryErrorResetBoundary.mjs
var React3 = __toESM(require_react(), 1);
function createValue() {
  let isReset = false;
  return {
    clearReset: () => {
      isReset = false;
    },
    reset: () => {
      isReset = true;
    },
    isReset: () => {
      return isReset;
    }
  };
}
var QueryErrorResetBoundaryContext = React3.createContext(createValue());
var useQueryErrorResetBoundary = () => React3.useContext(QueryErrorResetBoundaryContext);

// node_modules/@tanstack/react-query/build/lib/errorBoundaryUtils.mjs
var React4 = __toESM(require_react(), 1);

// node_modules/@tanstack/react-query/build/lib/utils.mjs
function shouldThrowError(_useErrorBoundary, params) {
  if (typeof _useErrorBoundary === "function") {
    return _useErrorBoundary(...params);
  }
  return !!_useErrorBoundary;
}

// node_modules/@tanstack/react-query/build/lib/errorBoundaryUtils.mjs
var ensurePreventErrorBoundaryRetry = (options, errorResetBoundary) => {
  if (options.suspense || options.useErrorBoundary) {
    if (!errorResetBoundary.isReset()) {
      options.retryOnMount = false;
    }
  }
};
var useClearResetErrorBoundary = (errorResetBoundary) => {
  React4.useEffect(() => {
    errorResetBoundary.clearReset();
  }, [errorResetBoundary]);
};
var getHasError = ({
  result,
  errorResetBoundary,
  useErrorBoundary,
  query
}) => {
  return result.isError && !errorResetBoundary.isReset() && !result.isFetching && shouldThrowError(useErrorBoundary, [result.error, query]);
};

// node_modules/@tanstack/react-query/build/lib/suspense.mjs
var ensureStaleTime = (defaultedOptions) => {
  if (defaultedOptions.suspense) {
    if (typeof defaultedOptions.staleTime !== "number") {
      defaultedOptions.staleTime = 1e3;
    }
  }
};
var willFetch = (result, isRestoring) => result.isLoading && result.isFetching && !isRestoring;
var shouldSuspend = (defaultedOptions, result, isRestoring) => (defaultedOptions == null ? void 0 : defaultedOptions.suspense) && willFetch(result, isRestoring);
var fetchOptimistic = (defaultedOptions, observer, errorResetBoundary) => observer.fetchOptimistic(defaultedOptions).then(({
  data
}) => {
  defaultedOptions.onSuccess == null ? void 0 : defaultedOptions.onSuccess(data);
  defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(data, null);
}).catch((error) => {
  errorResetBoundary.clearReset();
  defaultedOptions.onError == null ? void 0 : defaultedOptions.onError(error);
  defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(void 0, error);
});

// node_modules/@tanstack/react-query/build/lib/useBaseQuery.mjs
var React6 = __toESM(require_react(), 1);
function useBaseQuery(options, Observer) {
  const queryClient = useQueryClient({
    context: options.context
  });
  const isRestoring = useIsRestoring();
  const errorResetBoundary = useQueryErrorResetBoundary();
  const defaultedOptions = queryClient.defaultQueryOptions(options);
  defaultedOptions._optimisticResults = isRestoring ? "isRestoring" : "optimistic";
  if (defaultedOptions.onError) {
    defaultedOptions.onError = notifyManager.batchCalls(defaultedOptions.onError);
  }
  if (defaultedOptions.onSuccess) {
    defaultedOptions.onSuccess = notifyManager.batchCalls(defaultedOptions.onSuccess);
  }
  if (defaultedOptions.onSettled) {
    defaultedOptions.onSettled = notifyManager.batchCalls(defaultedOptions.onSettled);
  }
  ensureStaleTime(defaultedOptions);
  ensurePreventErrorBoundaryRetry(defaultedOptions, errorResetBoundary);
  useClearResetErrorBoundary(errorResetBoundary);
  const [observer] = React6.useState(() => new Observer(queryClient, defaultedOptions));
  const result = observer.getOptimisticResult(defaultedOptions);
  useSyncExternalStore(React6.useCallback((onStoreChange) => {
    const unsubscribe = isRestoring ? () => void 0 : observer.subscribe(notifyManager.batchCalls(onStoreChange));
    observer.updateResult();
    return unsubscribe;
  }, [observer, isRestoring]), () => observer.getCurrentResult(), () => observer.getCurrentResult());
  React6.useEffect(() => {
    observer.setOptions(defaultedOptions, {
      listeners: false
    });
  }, [defaultedOptions, observer]);
  if (shouldSuspend(defaultedOptions, result, isRestoring)) {
    throw fetchOptimistic(defaultedOptions, observer, errorResetBoundary);
  }
  if (getHasError({
    result,
    errorResetBoundary,
    useErrorBoundary: defaultedOptions.useErrorBoundary,
    query: observer.getCurrentQuery()
  })) {
    throw result.error;
  }
  return !defaultedOptions.notifyOnChangeProps ? observer.trackResult(result) : result;
}

// node_modules/@tanstack/react-query/build/lib/useQuery.mjs
function useQuery(arg1, arg2, arg3) {
  const parsedOptions = parseQueryArgs(arg1, arg2, arg3);
  return useBaseQuery(parsedOptions, QueryObserver);
}

// node_modules/@tanstack/react-query/build/lib/Hydrate.mjs
var React7 = __toESM(require_react(), 1);

// node_modules/@tanstack/react-query/build/lib/useIsFetching.mjs
var React8 = __toESM(require_react(), 1);

// node_modules/@tanstack/react-query/build/lib/useIsMutating.mjs
var React9 = __toESM(require_react(), 1);

// node_modules/@tanstack/react-query/build/lib/useMutation.mjs
var React10 = __toESM(require_react(), 1);
function useMutation(arg1, arg2, arg3) {
  const options = parseMutationArgs(arg1, arg2, arg3);
  const queryClient = useQueryClient({
    context: options.context
  });
  const [observer] = React10.useState(() => new MutationObserver(queryClient, options));
  React10.useEffect(() => {
    observer.setOptions(options);
  }, [observer, options]);
  const result = useSyncExternalStore(React10.useCallback((onStoreChange) => observer.subscribe(notifyManager.batchCalls(onStoreChange)), [observer]), () => observer.getCurrentResult(), () => observer.getCurrentResult());
  const mutate = React10.useCallback((variables, mutateOptions) => {
    observer.mutate(variables, mutateOptions).catch(noop2);
  }, [observer]);
  if (result.error && shouldThrowError(observer.options.useErrorBoundary, [result.error])) {
    throw result.error;
  }
  return {
    ...result,
    mutate,
    mutateAsync: result.mutate
  };
}
function noop2() {
}

// node_modules/@tanstack/react-query/build/lib/useInfiniteQuery.mjs
function useInfiniteQuery(arg1, arg2, arg3) {
  const options = parseQueryArgs(arg1, arg2, arg3);
  return useBaseQuery(options, InfiniteQueryObserver);
}

// node_modules/@refinedev/core/dist/index.mjs
var import_react3 = __toESM(require_react(), 1);

// node_modules/lodash-es/isFunction.js
var asyncTag = "[object AsyncFunction]";
var funcTag = "[object Function]";
var genTag = "[object GeneratorFunction]";
var proxyTag = "[object Proxy]";
function isFunction(value) {
  if (!isObject_default(value)) {
    return false;
  }
  var tag = baseGetTag_default(value);
  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
}
var isFunction_default = isFunction;

// node_modules/lodash-es/_coreJsData.js
var coreJsData = root_default["__core-js_shared__"];
var coreJsData_default = coreJsData;

// node_modules/lodash-es/_isMasked.js
var maskSrcKey = function() {
  var uid = /[^.]+$/.exec(coreJsData_default && coreJsData_default.keys && coreJsData_default.keys.IE_PROTO || "");
  return uid ? "Symbol(src)_1." + uid : "";
}();
function isMasked(func) {
  return !!maskSrcKey && maskSrcKey in func;
}
var isMasked_default = isMasked;

// node_modules/lodash-es/_toSource.js
var funcProto = Function.prototype;
var funcToString = funcProto.toString;
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {
    }
    try {
      return func + "";
    } catch (e) {
    }
  }
  return "";
}
var toSource_default = toSource;

// node_modules/lodash-es/_baseIsNative.js
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
var reIsHostCtor = /^\[object .+?Constructor\]$/;
var funcProto2 = Function.prototype;
var objectProto = Object.prototype;
var funcToString2 = funcProto2.toString;
var hasOwnProperty = objectProto.hasOwnProperty;
var reIsNative = RegExp(
  "^" + funcToString2.call(hasOwnProperty).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
);
function baseIsNative(value) {
  if (!isObject_default(value) || isMasked_default(value)) {
    return false;
  }
  var pattern = isFunction_default(value) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource_default(value));
}
var baseIsNative_default = baseIsNative;

// node_modules/lodash-es/_getValue.js
function getValue(object, key) {
  return object == null ? void 0 : object[key];
}
var getValue_default = getValue;

// node_modules/lodash-es/_getNative.js
function getNative(object, key) {
  var value = getValue_default(object, key);
  return baseIsNative_default(value) ? value : void 0;
}
var getNative_default = getNative;

// node_modules/lodash-es/_nativeCreate.js
var nativeCreate = getNative_default(Object, "create");
var nativeCreate_default = nativeCreate;

// node_modules/lodash-es/_hashClear.js
function hashClear() {
  this.__data__ = nativeCreate_default ? nativeCreate_default(null) : {};
  this.size = 0;
}
var hashClear_default = hashClear;

// node_modules/lodash-es/_hashDelete.js
function hashDelete(key) {
  var result = this.has(key) && delete this.__data__[key];
  this.size -= result ? 1 : 0;
  return result;
}
var hashDelete_default = hashDelete;

// node_modules/lodash-es/_hashGet.js
var HASH_UNDEFINED = "__lodash_hash_undefined__";
var objectProto2 = Object.prototype;
var hasOwnProperty2 = objectProto2.hasOwnProperty;
function hashGet(key) {
  var data = this.__data__;
  if (nativeCreate_default) {
    var result = data[key];
    return result === HASH_UNDEFINED ? void 0 : result;
  }
  return hasOwnProperty2.call(data, key) ? data[key] : void 0;
}
var hashGet_default = hashGet;

// node_modules/lodash-es/_hashHas.js
var objectProto3 = Object.prototype;
var hasOwnProperty3 = objectProto3.hasOwnProperty;
function hashHas(key) {
  var data = this.__data__;
  return nativeCreate_default ? data[key] !== void 0 : hasOwnProperty3.call(data, key);
}
var hashHas_default = hashHas;

// node_modules/lodash-es/_hashSet.js
var HASH_UNDEFINED2 = "__lodash_hash_undefined__";
function hashSet(key, value) {
  var data = this.__data__;
  this.size += this.has(key) ? 0 : 1;
  data[key] = nativeCreate_default && value === void 0 ? HASH_UNDEFINED2 : value;
  return this;
}
var hashSet_default = hashSet;

// node_modules/lodash-es/_Hash.js
function Hash(entries) {
  var index = -1, length = entries == null ? 0 : entries.length;
  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}
Hash.prototype.clear = hashClear_default;
Hash.prototype["delete"] = hashDelete_default;
Hash.prototype.get = hashGet_default;
Hash.prototype.has = hashHas_default;
Hash.prototype.set = hashSet_default;
var Hash_default = Hash;

// node_modules/lodash-es/_listCacheClear.js
function listCacheClear() {
  this.__data__ = [];
  this.size = 0;
}
var listCacheClear_default = listCacheClear;

// node_modules/lodash-es/eq.js
function eq(value, other) {
  return value === other || value !== value && other !== other;
}
var eq_default = eq;

// node_modules/lodash-es/_assocIndexOf.js
function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (eq_default(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}
var assocIndexOf_default = assocIndexOf;

// node_modules/lodash-es/_listCacheDelete.js
var arrayProto = Array.prototype;
var splice = arrayProto.splice;
function listCacheDelete(key) {
  var data = this.__data__, index = assocIndexOf_default(data, key);
  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  --this.size;
  return true;
}
var listCacheDelete_default = listCacheDelete;

// node_modules/lodash-es/_listCacheGet.js
function listCacheGet(key) {
  var data = this.__data__, index = assocIndexOf_default(data, key);
  return index < 0 ? void 0 : data[index][1];
}
var listCacheGet_default = listCacheGet;

// node_modules/lodash-es/_listCacheHas.js
function listCacheHas(key) {
  return assocIndexOf_default(this.__data__, key) > -1;
}
var listCacheHas_default = listCacheHas;

// node_modules/lodash-es/_listCacheSet.js
function listCacheSet(key, value) {
  var data = this.__data__, index = assocIndexOf_default(data, key);
  if (index < 0) {
    ++this.size;
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}
var listCacheSet_default = listCacheSet;

// node_modules/lodash-es/_ListCache.js
function ListCache(entries) {
  var index = -1, length = entries == null ? 0 : entries.length;
  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}
ListCache.prototype.clear = listCacheClear_default;
ListCache.prototype["delete"] = listCacheDelete_default;
ListCache.prototype.get = listCacheGet_default;
ListCache.prototype.has = listCacheHas_default;
ListCache.prototype.set = listCacheSet_default;
var ListCache_default = ListCache;

// node_modules/lodash-es/_Map.js
var Map2 = getNative_default(root_default, "Map");
var Map_default = Map2;

// node_modules/lodash-es/_mapCacheClear.js
function mapCacheClear() {
  this.size = 0;
  this.__data__ = {
    "hash": new Hash_default(),
    "map": new (Map_default || ListCache_default)(),
    "string": new Hash_default()
  };
}
var mapCacheClear_default = mapCacheClear;

// node_modules/lodash-es/_isKeyable.js
function isKeyable(value) {
  var type = typeof value;
  return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
}
var isKeyable_default = isKeyable;

// node_modules/lodash-es/_getMapData.js
function getMapData(map, key) {
  var data = map.__data__;
  return isKeyable_default(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
}
var getMapData_default = getMapData;

// node_modules/lodash-es/_mapCacheDelete.js
function mapCacheDelete(key) {
  var result = getMapData_default(this, key)["delete"](key);
  this.size -= result ? 1 : 0;
  return result;
}
var mapCacheDelete_default = mapCacheDelete;

// node_modules/lodash-es/_mapCacheGet.js
function mapCacheGet(key) {
  return getMapData_default(this, key).get(key);
}
var mapCacheGet_default = mapCacheGet;

// node_modules/lodash-es/_mapCacheHas.js
function mapCacheHas(key) {
  return getMapData_default(this, key).has(key);
}
var mapCacheHas_default = mapCacheHas;

// node_modules/lodash-es/_mapCacheSet.js
function mapCacheSet(key, value) {
  var data = getMapData_default(this, key), size = data.size;
  data.set(key, value);
  this.size += data.size == size ? 0 : 1;
  return this;
}
var mapCacheSet_default = mapCacheSet;

// node_modules/lodash-es/_MapCache.js
function MapCache(entries) {
  var index = -1, length = entries == null ? 0 : entries.length;
  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}
MapCache.prototype.clear = mapCacheClear_default;
MapCache.prototype["delete"] = mapCacheDelete_default;
MapCache.prototype.get = mapCacheGet_default;
MapCache.prototype.has = mapCacheHas_default;
MapCache.prototype.set = mapCacheSet_default;
var MapCache_default = MapCache;

// node_modules/lodash-es/_setCacheAdd.js
var HASH_UNDEFINED3 = "__lodash_hash_undefined__";
function setCacheAdd(value) {
  this.__data__.set(value, HASH_UNDEFINED3);
  return this;
}
var setCacheAdd_default = setCacheAdd;

// node_modules/lodash-es/_setCacheHas.js
function setCacheHas(value) {
  return this.__data__.has(value);
}
var setCacheHas_default = setCacheHas;

// node_modules/lodash-es/_SetCache.js
function SetCache(values) {
  var index = -1, length = values == null ? 0 : values.length;
  this.__data__ = new MapCache_default();
  while (++index < length) {
    this.add(values[index]);
  }
}
SetCache.prototype.add = SetCache.prototype.push = setCacheAdd_default;
SetCache.prototype.has = setCacheHas_default;
var SetCache_default = SetCache;

// node_modules/lodash-es/_baseFindIndex.js
function baseFindIndex(array, predicate, fromIndex, fromRight) {
  var length = array.length, index = fromIndex + (fromRight ? 1 : -1);
  while (fromRight ? index-- : ++index < length) {
    if (predicate(array[index], index, array)) {
      return index;
    }
  }
  return -1;
}
var baseFindIndex_default = baseFindIndex;

// node_modules/lodash-es/_baseIsNaN.js
function baseIsNaN(value) {
  return value !== value;
}
var baseIsNaN_default = baseIsNaN;

// node_modules/lodash-es/_strictIndexOf.js
function strictIndexOf(array, value, fromIndex) {
  var index = fromIndex - 1, length = array.length;
  while (++index < length) {
    if (array[index] === value) {
      return index;
    }
  }
  return -1;
}
var strictIndexOf_default = strictIndexOf;

// node_modules/lodash-es/_baseIndexOf.js
function baseIndexOf(array, value, fromIndex) {
  return value === value ? strictIndexOf_default(array, value, fromIndex) : baseFindIndex_default(array, baseIsNaN_default, fromIndex);
}
var baseIndexOf_default = baseIndexOf;

// node_modules/lodash-es/_arrayIncludes.js
function arrayIncludes(array, value) {
  var length = array == null ? 0 : array.length;
  return !!length && baseIndexOf_default(array, value, 0) > -1;
}
var arrayIncludes_default = arrayIncludes;

// node_modules/lodash-es/_arrayIncludesWith.js
function arrayIncludesWith(array, value, comparator) {
  var index = -1, length = array == null ? 0 : array.length;
  while (++index < length) {
    if (comparator(value, array[index])) {
      return true;
    }
  }
  return false;
}
var arrayIncludesWith_default = arrayIncludesWith;

// node_modules/lodash-es/_arrayMap.js
function arrayMap(array, iteratee) {
  var index = -1, length = array == null ? 0 : array.length, result = Array(length);
  while (++index < length) {
    result[index] = iteratee(array[index], index, array);
  }
  return result;
}
var arrayMap_default = arrayMap;

// node_modules/lodash-es/_baseUnary.js
function baseUnary(func) {
  return function(value) {
    return func(value);
  };
}
var baseUnary_default = baseUnary;

// node_modules/lodash-es/_cacheHas.js
function cacheHas(cache, key) {
  return cache.has(key);
}
var cacheHas_default = cacheHas;

// node_modules/lodash-es/_baseDifference.js
var LARGE_ARRAY_SIZE = 200;
function baseDifference(array, values, iteratee, comparator) {
  var index = -1, includes = arrayIncludes_default, isCommon = true, length = array.length, result = [], valuesLength = values.length;
  if (!length) {
    return result;
  }
  if (iteratee) {
    values = arrayMap_default(values, baseUnary_default(iteratee));
  }
  if (comparator) {
    includes = arrayIncludesWith_default;
    isCommon = false;
  } else if (values.length >= LARGE_ARRAY_SIZE) {
    includes = cacheHas_default;
    isCommon = false;
    values = new SetCache_default(values);
  }
  outer:
    while (++index < length) {
      var value = array[index], computed = iteratee == null ? value : iteratee(value);
      value = comparator || value !== 0 ? value : 0;
      if (isCommon && computed === computed) {
        var valuesIndex = valuesLength;
        while (valuesIndex--) {
          if (values[valuesIndex] === computed) {
            continue outer;
          }
        }
        result.push(value);
      } else if (!includes(values, computed, comparator)) {
        result.push(value);
      }
    }
  return result;
}
var baseDifference_default = baseDifference;

// node_modules/lodash-es/_arrayPush.js
function arrayPush(array, values) {
  var index = -1, length = values.length, offset = array.length;
  while (++index < length) {
    array[offset + index] = values[index];
  }
  return array;
}
var arrayPush_default = arrayPush;

// node_modules/lodash-es/_baseIsArguments.js
var argsTag = "[object Arguments]";
function baseIsArguments(value) {
  return isObjectLike_default(value) && baseGetTag_default(value) == argsTag;
}
var baseIsArguments_default = baseIsArguments;

// node_modules/lodash-es/isArguments.js
var objectProto4 = Object.prototype;
var hasOwnProperty4 = objectProto4.hasOwnProperty;
var propertyIsEnumerable = objectProto4.propertyIsEnumerable;
var isArguments = baseIsArguments_default(function() {
  return arguments;
}()) ? baseIsArguments_default : function(value) {
  return isObjectLike_default(value) && hasOwnProperty4.call(value, "callee") && !propertyIsEnumerable.call(value, "callee");
};
var isArguments_default = isArguments;

// node_modules/lodash-es/isArray.js
var isArray = Array.isArray;
var isArray_default = isArray;

// node_modules/lodash-es/_isFlattenable.js
var spreadableSymbol = Symbol_default ? Symbol_default.isConcatSpreadable : void 0;
function isFlattenable(value) {
  return isArray_default(value) || isArguments_default(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);
}
var isFlattenable_default = isFlattenable;

// node_modules/lodash-es/_baseFlatten.js
function baseFlatten(array, depth, predicate, isStrict, result) {
  var index = -1, length = array.length;
  predicate || (predicate = isFlattenable_default);
  result || (result = []);
  while (++index < length) {
    var value = array[index];
    if (depth > 0 && predicate(value)) {
      if (depth > 1) {
        baseFlatten(value, depth - 1, predicate, isStrict, result);
      } else {
        arrayPush_default(result, value);
      }
    } else if (!isStrict) {
      result[result.length] = value;
    }
  }
  return result;
}
var baseFlatten_default = baseFlatten;

// node_modules/lodash-es/identity.js
function identity(value) {
  return value;
}
var identity_default = identity;

// node_modules/lodash-es/_apply.js
function apply(func, thisArg, args) {
  switch (args.length) {
    case 0:
      return func.call(thisArg);
    case 1:
      return func.call(thisArg, args[0]);
    case 2:
      return func.call(thisArg, args[0], args[1]);
    case 3:
      return func.call(thisArg, args[0], args[1], args[2]);
  }
  return func.apply(thisArg, args);
}
var apply_default = apply;

// node_modules/lodash-es/_overRest.js
var nativeMax = Math.max;
function overRest(func, start, transform) {
  start = nativeMax(start === void 0 ? func.length - 1 : start, 0);
  return function() {
    var args = arguments, index = -1, length = nativeMax(args.length - start, 0), array = Array(length);
    while (++index < length) {
      array[index] = args[start + index];
    }
    index = -1;
    var otherArgs = Array(start + 1);
    while (++index < start) {
      otherArgs[index] = args[index];
    }
    otherArgs[start] = transform(array);
    return apply_default(func, this, otherArgs);
  };
}
var overRest_default = overRest;

// node_modules/lodash-es/constant.js
function constant(value) {
  return function() {
    return value;
  };
}
var constant_default = constant;

// node_modules/lodash-es/_defineProperty.js
var defineProperty = function() {
  try {
    var func = getNative_default(Object, "defineProperty");
    func({}, "", {});
    return func;
  } catch (e) {
  }
}();
var defineProperty_default = defineProperty;

// node_modules/lodash-es/_baseSetToString.js
var baseSetToString = !defineProperty_default ? identity_default : function(func, string) {
  return defineProperty_default(func, "toString", {
    "configurable": true,
    "enumerable": false,
    "value": constant_default(string),
    "writable": true
  });
};
var baseSetToString_default = baseSetToString;

// node_modules/lodash-es/_shortOut.js
var HOT_COUNT = 800;
var HOT_SPAN = 16;
var nativeNow = Date.now;
function shortOut(func) {
  var count = 0, lastCalled = 0;
  return function() {
    var stamp = nativeNow(), remaining = HOT_SPAN - (stamp - lastCalled);
    lastCalled = stamp;
    if (remaining > 0) {
      if (++count >= HOT_COUNT) {
        return arguments[0];
      }
    } else {
      count = 0;
    }
    return func.apply(void 0, arguments);
  };
}
var shortOut_default = shortOut;

// node_modules/lodash-es/_setToString.js
var setToString = shortOut_default(baseSetToString_default);
var setToString_default = setToString;

// node_modules/lodash-es/_baseRest.js
function baseRest(func, start) {
  return setToString_default(overRest_default(func, start, identity_default), func + "");
}
var baseRest_default = baseRest;

// node_modules/lodash-es/isLength.js
var MAX_SAFE_INTEGER = 9007199254740991;
function isLength(value) {
  return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}
var isLength_default = isLength;

// node_modules/lodash-es/isArrayLike.js
function isArrayLike(value) {
  return value != null && isLength_default(value.length) && !isFunction_default(value);
}
var isArrayLike_default = isArrayLike;

// node_modules/lodash-es/isArrayLikeObject.js
function isArrayLikeObject(value) {
  return isObjectLike_default(value) && isArrayLike_default(value);
}
var isArrayLikeObject_default = isArrayLikeObject;

// node_modules/lodash-es/last.js
function last(array) {
  var length = array == null ? 0 : array.length;
  return length ? array[length - 1] : void 0;
}
var last_default = last;

// node_modules/lodash-es/differenceWith.js
var differenceWith = baseRest_default(function(array, values) {
  var comparator = last_default(values);
  if (isArrayLikeObject_default(comparator)) {
    comparator = void 0;
  }
  return isArrayLikeObject_default(array) ? baseDifference_default(array, baseFlatten_default(values, 1, isArrayLikeObject_default, true), void 0, comparator) : [];
});
var differenceWith_default = differenceWith;

// node_modules/lodash-es/_Set.js
var Set2 = getNative_default(root_default, "Set");
var Set_default = Set2;

// node_modules/lodash-es/noop.js
function noop3() {
}
var noop_default = noop3;

// node_modules/lodash-es/_setToArray.js
function setToArray(set) {
  var index = -1, result = Array(set.size);
  set.forEach(function(value) {
    result[++index] = value;
  });
  return result;
}
var setToArray_default = setToArray;

// node_modules/lodash-es/_createSet.js
var INFINITY = 1 / 0;
var createSet = !(Set_default && 1 / setToArray_default(new Set_default([, -0]))[1] == INFINITY) ? noop_default : function(values) {
  return new Set_default(values);
};
var createSet_default = createSet;

// node_modules/lodash-es/_baseUniq.js
var LARGE_ARRAY_SIZE2 = 200;
function baseUniq(array, iteratee, comparator) {
  var index = -1, includes = arrayIncludes_default, length = array.length, isCommon = true, result = [], seen = result;
  if (comparator) {
    isCommon = false;
    includes = arrayIncludesWith_default;
  } else if (length >= LARGE_ARRAY_SIZE2) {
    var set = iteratee ? null : createSet_default(array);
    if (set) {
      return setToArray_default(set);
    }
    isCommon = false;
    includes = cacheHas_default;
    seen = new SetCache_default();
  } else {
    seen = iteratee ? [] : result;
  }
  outer:
    while (++index < length) {
      var value = array[index], computed = iteratee ? iteratee(value) : value;
      value = comparator || value !== 0 ? value : 0;
      if (isCommon && computed === computed) {
        var seenIndex = seen.length;
        while (seenIndex--) {
          if (seen[seenIndex] === computed) {
            continue outer;
          }
        }
        if (iteratee) {
          seen.push(computed);
        }
        result.push(value);
      } else if (!includes(seen, computed, comparator)) {
        if (seen !== result) {
          seen.push(computed);
        }
        result.push(value);
      }
    }
  return result;
}
var baseUniq_default = baseUniq;

// node_modules/lodash-es/unionWith.js
var unionWith = baseRest_default(function(arrays) {
  var comparator = last_default(arrays);
  comparator = typeof comparator == "function" ? comparator : void 0;
  return baseUniq_default(baseFlatten_default(arrays, 1, isArrayLikeObject_default, true), void 0, comparator);
});
var unionWith_default = unionWith;

// node_modules/@refinedev/core/dist/index.mjs
var import_qs = __toESM(require_lib(), 1);
var import_warn_once = __toESM(require_warn_once(), 1);

// node_modules/lodash-es/fromPairs.js
function fromPairs(pairs) {
  var index = -1, length = pairs == null ? 0 : pairs.length, result = {};
  while (++index < length) {
    var pair = pairs[index];
    result[pair[0]] = pair[1];
  }
  return result;
}
var fromPairs_default = fromPairs;

// node_modules/lodash-es/_arrayFilter.js
function arrayFilter(array, predicate) {
  var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result = [];
  while (++index < length) {
    var value = array[index];
    if (predicate(value, index, array)) {
      result[resIndex++] = value;
    }
  }
  return result;
}
var arrayFilter_default = arrayFilter;

// node_modules/lodash-es/_baseProperty.js
function baseProperty(key) {
  return function(object) {
    return object == null ? void 0 : object[key];
  };
}
var baseProperty_default = baseProperty;

// node_modules/lodash-es/_baseTimes.js
function baseTimes(n, iteratee) {
  var index = -1, result = Array(n);
  while (++index < n) {
    result[index] = iteratee(index);
  }
  return result;
}
var baseTimes_default = baseTimes;

// node_modules/lodash-es/unzip.js
var nativeMax2 = Math.max;
function unzip(array) {
  if (!(array && array.length)) {
    return [];
  }
  var length = 0;
  array = arrayFilter_default(array, function(group) {
    if (isArrayLikeObject_default(group)) {
      length = nativeMax2(group.length, length);
      return true;
    }
  });
  return baseTimes_default(length, function(index) {
    return arrayMap_default(array, baseProperty_default(index));
  });
}
var unzip_default = unzip;

// node_modules/lodash-es/zip.js
var zip = baseRest_default(unzip_default);
var zip_default = zip;

// node_modules/@refinedev/core/dist/index.mjs
var import_pluralize = __toESM(require_pluralize(), 1);
var import_react4 = __toESM(require_react(), 1);
var import_pluralize2 = __toESM(require_pluralize(), 1);
var import_react5 = __toESM(require_react(), 1);
var import_react6 = __toESM(require_react(), 1);
var import_react7 = __toESM(require_react(), 1);
var import_react8 = __toESM(require_react(), 1);
var import_react9 = __toESM(require_react(), 1);
var import_react10 = __toESM(require_react(), 1);
var import_react11 = __toESM(require_react(), 1);
var import_react12 = __toESM(require_react(), 1);
var import_react13 = __toESM(require_react(), 1);
var import_qs2 = __toESM(require_lib(), 1);
var import_react14 = __toESM(require_react(), 1);
var import_qs3 = __toESM(require_lib(), 1);
var import_react15 = __toESM(require_react(), 1);
var import_react16 = __toESM(require_react(), 1);
var import_react17 = __toESM(require_react(), 1);
var import_react18 = __toESM(require_react(), 1);
var import_react19 = __toESM(require_react(), 1);
var import_react20 = __toESM(require_react(), 1);
var import_react21 = __toESM(require_react(), 1);
var import_react22 = __toESM(require_react(), 1);
var import_react23 = __toESM(require_react(), 1);
var import_react24 = __toESM(require_react(), 1);

// node_modules/lodash-es/_stackClear.js
function stackClear() {
  this.__data__ = new ListCache_default();
  this.size = 0;
}
var stackClear_default = stackClear;

// node_modules/lodash-es/_stackDelete.js
function stackDelete(key) {
  var data = this.__data__, result = data["delete"](key);
  this.size = data.size;
  return result;
}
var stackDelete_default = stackDelete;

// node_modules/lodash-es/_stackGet.js
function stackGet(key) {
  return this.__data__.get(key);
}
var stackGet_default = stackGet;

// node_modules/lodash-es/_stackHas.js
function stackHas(key) {
  return this.__data__.has(key);
}
var stackHas_default = stackHas;

// node_modules/lodash-es/_stackSet.js
var LARGE_ARRAY_SIZE3 = 200;
function stackSet(key, value) {
  var data = this.__data__;
  if (data instanceof ListCache_default) {
    var pairs = data.__data__;
    if (!Map_default || pairs.length < LARGE_ARRAY_SIZE3 - 1) {
      pairs.push([key, value]);
      this.size = ++data.size;
      return this;
    }
    data = this.__data__ = new MapCache_default(pairs);
  }
  data.set(key, value);
  this.size = data.size;
  return this;
}
var stackSet_default = stackSet;

// node_modules/lodash-es/_Stack.js
function Stack(entries) {
  var data = this.__data__ = new ListCache_default(entries);
  this.size = data.size;
}
Stack.prototype.clear = stackClear_default;
Stack.prototype["delete"] = stackDelete_default;
Stack.prototype.get = stackGet_default;
Stack.prototype.has = stackHas_default;
Stack.prototype.set = stackSet_default;
var Stack_default = Stack;

// node_modules/lodash-es/_arraySome.js
function arraySome(array, predicate) {
  var index = -1, length = array == null ? 0 : array.length;
  while (++index < length) {
    if (predicate(array[index], index, array)) {
      return true;
    }
  }
  return false;
}
var arraySome_default = arraySome;

// node_modules/lodash-es/_equalArrays.js
var COMPARE_PARTIAL_FLAG = 1;
var COMPARE_UNORDERED_FLAG = 2;
function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG, arrLength = array.length, othLength = other.length;
  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
    return false;
  }
  var arrStacked = stack.get(array);
  var othStacked = stack.get(other);
  if (arrStacked && othStacked) {
    return arrStacked == other && othStacked == array;
  }
  var index = -1, result = true, seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache_default() : void 0;
  stack.set(array, other);
  stack.set(other, array);
  while (++index < arrLength) {
    var arrValue = array[index], othValue = other[index];
    if (customizer) {
      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
    }
    if (compared !== void 0) {
      if (compared) {
        continue;
      }
      result = false;
      break;
    }
    if (seen) {
      if (!arraySome_default(other, function(othValue2, othIndex) {
        if (!cacheHas_default(seen, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack))) {
          return seen.push(othIndex);
        }
      })) {
        result = false;
        break;
      }
    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
      result = false;
      break;
    }
  }
  stack["delete"](array);
  stack["delete"](other);
  return result;
}
var equalArrays_default = equalArrays;

// node_modules/lodash-es/_Uint8Array.js
var Uint8Array2 = root_default.Uint8Array;
var Uint8Array_default = Uint8Array2;

// node_modules/lodash-es/_mapToArray.js
function mapToArray(map) {
  var index = -1, result = Array(map.size);
  map.forEach(function(value, key) {
    result[++index] = [key, value];
  });
  return result;
}
var mapToArray_default = mapToArray;

// node_modules/lodash-es/_equalByTag.js
var COMPARE_PARTIAL_FLAG2 = 1;
var COMPARE_UNORDERED_FLAG2 = 2;
var boolTag = "[object Boolean]";
var dateTag = "[object Date]";
var errorTag = "[object Error]";
var mapTag = "[object Map]";
var numberTag = "[object Number]";
var regexpTag = "[object RegExp]";
var setTag = "[object Set]";
var stringTag = "[object String]";
var symbolTag = "[object Symbol]";
var arrayBufferTag = "[object ArrayBuffer]";
var dataViewTag = "[object DataView]";
var symbolProto = Symbol_default ? Symbol_default.prototype : void 0;
var symbolValueOf = symbolProto ? symbolProto.valueOf : void 0;
function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
  switch (tag) {
    case dataViewTag:
      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
        return false;
      }
      object = object.buffer;
      other = other.buffer;
    case arrayBufferTag:
      if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array_default(object), new Uint8Array_default(other))) {
        return false;
      }
      return true;
    case boolTag:
    case dateTag:
    case numberTag:
      return eq_default(+object, +other);
    case errorTag:
      return object.name == other.name && object.message == other.message;
    case regexpTag:
    case stringTag:
      return object == other + "";
    case mapTag:
      var convert = mapToArray_default;
    case setTag:
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG2;
      convert || (convert = setToArray_default);
      if (object.size != other.size && !isPartial) {
        return false;
      }
      var stacked = stack.get(object);
      if (stacked) {
        return stacked == other;
      }
      bitmask |= COMPARE_UNORDERED_FLAG2;
      stack.set(object, other);
      var result = equalArrays_default(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
      stack["delete"](object);
      return result;
    case symbolTag:
      if (symbolValueOf) {
        return symbolValueOf.call(object) == symbolValueOf.call(other);
      }
  }
  return false;
}
var equalByTag_default = equalByTag;

// node_modules/lodash-es/_baseGetAllKeys.js
function baseGetAllKeys(object, keysFunc, symbolsFunc) {
  var result = keysFunc(object);
  return isArray_default(object) ? result : arrayPush_default(result, symbolsFunc(object));
}
var baseGetAllKeys_default = baseGetAllKeys;

// node_modules/lodash-es/stubArray.js
function stubArray() {
  return [];
}
var stubArray_default = stubArray;

// node_modules/lodash-es/_getSymbols.js
var objectProto5 = Object.prototype;
var propertyIsEnumerable2 = objectProto5.propertyIsEnumerable;
var nativeGetSymbols = Object.getOwnPropertySymbols;
var getSymbols = !nativeGetSymbols ? stubArray_default : function(object) {
  if (object == null) {
    return [];
  }
  object = Object(object);
  return arrayFilter_default(nativeGetSymbols(object), function(symbol) {
    return propertyIsEnumerable2.call(object, symbol);
  });
};
var getSymbols_default = getSymbols;

// node_modules/lodash-es/stubFalse.js
function stubFalse() {
  return false;
}
var stubFalse_default = stubFalse;

// node_modules/lodash-es/isBuffer.js
var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
var freeModule = freeExports && typeof module == "object" && module && !module.nodeType && module;
var moduleExports = freeModule && freeModule.exports === freeExports;
var Buffer2 = moduleExports ? root_default.Buffer : void 0;
var nativeIsBuffer = Buffer2 ? Buffer2.isBuffer : void 0;
var isBuffer = nativeIsBuffer || stubFalse_default;
var isBuffer_default = isBuffer;

// node_modules/lodash-es/_isIndex.js
var MAX_SAFE_INTEGER2 = 9007199254740991;
var reIsUint = /^(?:0|[1-9]\d*)$/;
function isIndex(value, length) {
  var type = typeof value;
  length = length == null ? MAX_SAFE_INTEGER2 : length;
  return !!length && (type == "number" || type != "symbol" && reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length);
}
var isIndex_default = isIndex;

// node_modules/lodash-es/_baseIsTypedArray.js
var argsTag2 = "[object Arguments]";
var arrayTag = "[object Array]";
var boolTag2 = "[object Boolean]";
var dateTag2 = "[object Date]";
var errorTag2 = "[object Error]";
var funcTag2 = "[object Function]";
var mapTag2 = "[object Map]";
var numberTag2 = "[object Number]";
var objectTag = "[object Object]";
var regexpTag2 = "[object RegExp]";
var setTag2 = "[object Set]";
var stringTag2 = "[object String]";
var weakMapTag = "[object WeakMap]";
var arrayBufferTag2 = "[object ArrayBuffer]";
var dataViewTag2 = "[object DataView]";
var float32Tag = "[object Float32Array]";
var float64Tag = "[object Float64Array]";
var int8Tag = "[object Int8Array]";
var int16Tag = "[object Int16Array]";
var int32Tag = "[object Int32Array]";
var uint8Tag = "[object Uint8Array]";
var uint8ClampedTag = "[object Uint8ClampedArray]";
var uint16Tag = "[object Uint16Array]";
var uint32Tag = "[object Uint32Array]";
var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag2] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag2] = typedArrayTags[boolTag2] = typedArrayTags[dataViewTag2] = typedArrayTags[dateTag2] = typedArrayTags[errorTag2] = typedArrayTags[funcTag2] = typedArrayTags[mapTag2] = typedArrayTags[numberTag2] = typedArrayTags[objectTag] = typedArrayTags[regexpTag2] = typedArrayTags[setTag2] = typedArrayTags[stringTag2] = typedArrayTags[weakMapTag] = false;
function baseIsTypedArray(value) {
  return isObjectLike_default(value) && isLength_default(value.length) && !!typedArrayTags[baseGetTag_default(value)];
}
var baseIsTypedArray_default = baseIsTypedArray;

// node_modules/lodash-es/_nodeUtil.js
var freeExports2 = typeof exports == "object" && exports && !exports.nodeType && exports;
var freeModule2 = freeExports2 && typeof module == "object" && module && !module.nodeType && module;
var moduleExports2 = freeModule2 && freeModule2.exports === freeExports2;
var freeProcess = moduleExports2 && freeGlobal_default.process;
var nodeUtil = function() {
  try {
    var types = freeModule2 && freeModule2.require && freeModule2.require("util").types;
    if (types) {
      return types;
    }
    return freeProcess && freeProcess.binding && freeProcess.binding("util");
  } catch (e) {
  }
}();
var nodeUtil_default = nodeUtil;

// node_modules/lodash-es/isTypedArray.js
var nodeIsTypedArray = nodeUtil_default && nodeUtil_default.isTypedArray;
var isTypedArray = nodeIsTypedArray ? baseUnary_default(nodeIsTypedArray) : baseIsTypedArray_default;
var isTypedArray_default = isTypedArray;

// node_modules/lodash-es/_arrayLikeKeys.js
var objectProto6 = Object.prototype;
var hasOwnProperty5 = objectProto6.hasOwnProperty;
function arrayLikeKeys(value, inherited) {
  var isArr = isArray_default(value), isArg = !isArr && isArguments_default(value), isBuff = !isArr && !isArg && isBuffer_default(value), isType = !isArr && !isArg && !isBuff && isTypedArray_default(value), skipIndexes = isArr || isArg || isBuff || isType, result = skipIndexes ? baseTimes_default(value.length, String) : [], length = result.length;
  for (var key in value) {
    if ((inherited || hasOwnProperty5.call(value, key)) && !(skipIndexes && // Safari 9 has enumerable `arguments.length` in strict mode.
    (key == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
    isBuff && (key == "offset" || key == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
    isType && (key == "buffer" || key == "byteLength" || key == "byteOffset") || // Skip index properties.
    isIndex_default(key, length)))) {
      result.push(key);
    }
  }
  return result;
}
var arrayLikeKeys_default = arrayLikeKeys;

// node_modules/lodash-es/_isPrototype.js
var objectProto7 = Object.prototype;
function isPrototype(value) {
  var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto7;
  return value === proto;
}
var isPrototype_default = isPrototype;

// node_modules/lodash-es/_overArg.js
function overArg(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}
var overArg_default = overArg;

// node_modules/lodash-es/_nativeKeys.js
var nativeKeys = overArg_default(Object.keys, Object);
var nativeKeys_default = nativeKeys;

// node_modules/lodash-es/_baseKeys.js
var objectProto8 = Object.prototype;
var hasOwnProperty6 = objectProto8.hasOwnProperty;
function baseKeys(object) {
  if (!isPrototype_default(object)) {
    return nativeKeys_default(object);
  }
  var result = [];
  for (var key in Object(object)) {
    if (hasOwnProperty6.call(object, key) && key != "constructor") {
      result.push(key);
    }
  }
  return result;
}
var baseKeys_default = baseKeys;

// node_modules/lodash-es/keys.js
function keys(object) {
  return isArrayLike_default(object) ? arrayLikeKeys_default(object) : baseKeys_default(object);
}
var keys_default = keys;

// node_modules/lodash-es/_getAllKeys.js
function getAllKeys(object) {
  return baseGetAllKeys_default(object, keys_default, getSymbols_default);
}
var getAllKeys_default = getAllKeys;

// node_modules/lodash-es/_equalObjects.js
var COMPARE_PARTIAL_FLAG3 = 1;
var objectProto9 = Object.prototype;
var hasOwnProperty7 = objectProto9.hasOwnProperty;
function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG3, objProps = getAllKeys_default(object), objLength = objProps.length, othProps = getAllKeys_default(other), othLength = othProps.length;
  if (objLength != othLength && !isPartial) {
    return false;
  }
  var index = objLength;
  while (index--) {
    var key = objProps[index];
    if (!(isPartial ? key in other : hasOwnProperty7.call(other, key))) {
      return false;
    }
  }
  var objStacked = stack.get(object);
  var othStacked = stack.get(other);
  if (objStacked && othStacked) {
    return objStacked == other && othStacked == object;
  }
  var result = true;
  stack.set(object, other);
  stack.set(other, object);
  var skipCtor = isPartial;
  while (++index < objLength) {
    key = objProps[index];
    var objValue = object[key], othValue = other[key];
    if (customizer) {
      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
    }
    if (!(compared === void 0 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
      result = false;
      break;
    }
    skipCtor || (skipCtor = key == "constructor");
  }
  if (result && !skipCtor) {
    var objCtor = object.constructor, othCtor = other.constructor;
    if (objCtor != othCtor && ("constructor" in object && "constructor" in other) && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
      result = false;
    }
  }
  stack["delete"](object);
  stack["delete"](other);
  return result;
}
var equalObjects_default = equalObjects;

// node_modules/lodash-es/_DataView.js
var DataView2 = getNative_default(root_default, "DataView");
var DataView_default = DataView2;

// node_modules/lodash-es/_Promise.js
var Promise2 = getNative_default(root_default, "Promise");
var Promise_default = Promise2;

// node_modules/lodash-es/_WeakMap.js
var WeakMap2 = getNative_default(root_default, "WeakMap");
var WeakMap_default = WeakMap2;

// node_modules/lodash-es/_getTag.js
var mapTag3 = "[object Map]";
var objectTag2 = "[object Object]";
var promiseTag = "[object Promise]";
var setTag3 = "[object Set]";
var weakMapTag2 = "[object WeakMap]";
var dataViewTag3 = "[object DataView]";
var dataViewCtorString = toSource_default(DataView_default);
var mapCtorString = toSource_default(Map_default);
var promiseCtorString = toSource_default(Promise_default);
var setCtorString = toSource_default(Set_default);
var weakMapCtorString = toSource_default(WeakMap_default);
var getTag = baseGetTag_default;
if (DataView_default && getTag(new DataView_default(new ArrayBuffer(1))) != dataViewTag3 || Map_default && getTag(new Map_default()) != mapTag3 || Promise_default && getTag(Promise_default.resolve()) != promiseTag || Set_default && getTag(new Set_default()) != setTag3 || WeakMap_default && getTag(new WeakMap_default()) != weakMapTag2) {
  getTag = function(value) {
    var result = baseGetTag_default(value), Ctor = result == objectTag2 ? value.constructor : void 0, ctorString = Ctor ? toSource_default(Ctor) : "";
    if (ctorString) {
      switch (ctorString) {
        case dataViewCtorString:
          return dataViewTag3;
        case mapCtorString:
          return mapTag3;
        case promiseCtorString:
          return promiseTag;
        case setCtorString:
          return setTag3;
        case weakMapCtorString:
          return weakMapTag2;
      }
    }
    return result;
  };
}
var getTag_default = getTag;

// node_modules/lodash-es/_baseIsEqualDeep.js
var COMPARE_PARTIAL_FLAG4 = 1;
var argsTag3 = "[object Arguments]";
var arrayTag2 = "[object Array]";
var objectTag3 = "[object Object]";
var objectProto10 = Object.prototype;
var hasOwnProperty8 = objectProto10.hasOwnProperty;
function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
  var objIsArr = isArray_default(object), othIsArr = isArray_default(other), objTag = objIsArr ? arrayTag2 : getTag_default(object), othTag = othIsArr ? arrayTag2 : getTag_default(other);
  objTag = objTag == argsTag3 ? objectTag3 : objTag;
  othTag = othTag == argsTag3 ? objectTag3 : othTag;
  var objIsObj = objTag == objectTag3, othIsObj = othTag == objectTag3, isSameTag = objTag == othTag;
  if (isSameTag && isBuffer_default(object)) {
    if (!isBuffer_default(other)) {
      return false;
    }
    objIsArr = true;
    objIsObj = false;
  }
  if (isSameTag && !objIsObj) {
    stack || (stack = new Stack_default());
    return objIsArr || isTypedArray_default(object) ? equalArrays_default(object, other, bitmask, customizer, equalFunc, stack) : equalByTag_default(object, other, objTag, bitmask, customizer, equalFunc, stack);
  }
  if (!(bitmask & COMPARE_PARTIAL_FLAG4)) {
    var objIsWrapped = objIsObj && hasOwnProperty8.call(object, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty8.call(other, "__wrapped__");
    if (objIsWrapped || othIsWrapped) {
      var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
      stack || (stack = new Stack_default());
      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
    }
  }
  if (!isSameTag) {
    return false;
  }
  stack || (stack = new Stack_default());
  return equalObjects_default(object, other, bitmask, customizer, equalFunc, stack);
}
var baseIsEqualDeep_default = baseIsEqualDeep;

// node_modules/lodash-es/_baseIsEqual.js
function baseIsEqual(value, other, bitmask, customizer, stack) {
  if (value === other) {
    return true;
  }
  if (value == null || other == null || !isObjectLike_default(value) && !isObjectLike_default(other)) {
    return value !== value && other !== other;
  }
  return baseIsEqualDeep_default(value, other, bitmask, customizer, baseIsEqual, stack);
}
var baseIsEqual_default = baseIsEqual;

// node_modules/lodash-es/isEqual.js
function isEqual(value, other) {
  return baseIsEqual_default(value, other);
}
var isEqual_default = isEqual;

// node_modules/@refinedev/core/dist/index.mjs
var import_react25 = __toESM(require_react(), 1);
var import_react26 = __toESM(require_react(), 1);
var import_react27 = __toESM(require_react(), 1);
var import_react28 = __toESM(require_react(), 1);
var import_react29 = __toESM(require_react(), 1);
var import_react30 = __toESM(require_react(), 1);
var import_react31 = __toESM(require_react(), 1);
var import_react32 = __toESM(require_react(), 1);
var import_react33 = __toESM(require_react(), 1);
var import_react34 = __toESM(require_react(), 1);
var import_react35 = __toESM(require_react(), 1);
var import_react36 = __toESM(require_react(), 1);
var import_react37 = __toESM(require_react(), 1);
var import_react38 = __toESM(require_react(), 1);
var import_react39 = __toESM(require_react(), 1);
var import_react40 = __toESM(require_react(), 1);
var import_react41 = __toESM(require_react(), 1);
var import_react42 = __toESM(require_react(), 1);
var import_papaparse = __toESM(require_papaparse_min(), 1);
var import_warn_once2 = __toESM(require_warn_once(), 1);
var import_react43 = __toESM(require_react(), 1);
var import_warn_once3 = __toESM(require_warn_once(), 1);
var import_react44 = __toESM(require_react(), 1);
var import_react45 = __toESM(require_react(), 1);
var import_react46 = __toESM(require_react(), 1);
var import_react47 = __toESM(require_react(), 1);
var import_warn_once4 = __toESM(require_warn_once(), 1);
var import_react48 = __toESM(require_react(), 1);

// node_modules/lodash-es/_baseSlice.js
function baseSlice(array, start, end) {
  var index = -1, length = array.length;
  if (start < 0) {
    start = -start > length ? 0 : length + start;
  }
  end = end > length ? length : end;
  if (end < 0) {
    end += length;
  }
  length = start > end ? 0 : end - start >>> 0;
  start >>>= 0;
  var result = Array(length);
  while (++index < length) {
    result[index] = array[index + start];
  }
  return result;
}
var baseSlice_default = baseSlice;

// node_modules/lodash-es/_isIterateeCall.js
function isIterateeCall(value, index, object) {
  if (!isObject_default(object)) {
    return false;
  }
  var type = typeof index;
  if (type == "number" ? isArrayLike_default(object) && isIndex_default(index, object.length) : type == "string" && index in object) {
    return eq_default(object[index], value);
  }
  return false;
}
var isIterateeCall_default = isIterateeCall;

// node_modules/lodash-es/toFinite.js
var INFINITY2 = 1 / 0;
var MAX_INTEGER = 17976931348623157e292;
function toFinite(value) {
  if (!value) {
    return value === 0 ? value : 0;
  }
  value = toNumber_default(value);
  if (value === INFINITY2 || value === -INFINITY2) {
    var sign = value < 0 ? -1 : 1;
    return sign * MAX_INTEGER;
  }
  return value === value ? value : 0;
}
var toFinite_default = toFinite;

// node_modules/lodash-es/toInteger.js
function toInteger(value) {
  var result = toFinite_default(value), remainder = result % 1;
  return result === result ? remainder ? result - remainder : result : 0;
}
var toInteger_default = toInteger;

// node_modules/lodash-es/chunk.js
var nativeCeil = Math.ceil;
var nativeMax3 = Math.max;
function chunk(array, size, guard) {
  if (guard ? isIterateeCall_default(array, size, guard) : size === void 0) {
    size = 1;
  } else {
    size = nativeMax3(toInteger_default(size), 0);
  }
  var length = array == null ? 0 : array.length;
  if (!length || size < 1) {
    return [];
  }
  var index = 0, resIndex = 0, result = Array(nativeCeil(length / size));
  while (index < length) {
    result[resIndex++] = baseSlice_default(array, index, index += size);
  }
  return result;
}
var chunk_default = chunk;

// node_modules/@refinedev/core/dist/index.mjs
var import_papaparse2 = __toESM(require_papaparse_min(), 1);
var import_react49 = __toESM(require_react(), 1);
var import_react50 = __toESM(require_react(), 1);
var import_react51 = __toESM(require_react(), 1);
var import_react52 = __toESM(require_react(), 1);
var import_react53 = __toESM(require_react(), 1);
var import_react54 = __toESM(require_react(), 1);
var import_react55 = __toESM(require_react(), 1);
var import_react56 = __toESM(require_react(), 1);

// node_modules/lodash-es/_isKey.js
var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/;
var reIsPlainProp = /^\w*$/;
function isKey(value, object) {
  if (isArray_default(value)) {
    return false;
  }
  var type = typeof value;
  if (type == "number" || type == "symbol" || type == "boolean" || value == null || isSymbol_default(value)) {
    return true;
  }
  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);
}
var isKey_default = isKey;

// node_modules/lodash-es/memoize.js
var FUNC_ERROR_TEXT = "Expected a function";
function memoize(func, resolver) {
  if (typeof func != "function" || resolver != null && typeof resolver != "function") {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  var memoized = function() {
    var args = arguments, key = resolver ? resolver.apply(this, args) : args[0], cache = memoized.cache;
    if (cache.has(key)) {
      return cache.get(key);
    }
    var result = func.apply(this, args);
    memoized.cache = cache.set(key, result) || cache;
    return result;
  };
  memoized.cache = new (memoize.Cache || MapCache_default)();
  return memoized;
}
memoize.Cache = MapCache_default;
var memoize_default = memoize;

// node_modules/lodash-es/_memoizeCapped.js
var MAX_MEMOIZE_SIZE = 500;
function memoizeCapped(func) {
  var result = memoize_default(func, function(key) {
    if (cache.size === MAX_MEMOIZE_SIZE) {
      cache.clear();
    }
    return key;
  });
  var cache = result.cache;
  return result;
}
var memoizeCapped_default = memoizeCapped;

// node_modules/lodash-es/_stringToPath.js
var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
var reEscapeChar = /\\(\\)?/g;
var stringToPath = memoizeCapped_default(function(string) {
  var result = [];
  if (string.charCodeAt(0) === 46) {
    result.push("");
  }
  string.replace(rePropName, function(match, number, quote, subString) {
    result.push(quote ? subString.replace(reEscapeChar, "$1") : number || match);
  });
  return result;
});
var stringToPath_default = stringToPath;

// node_modules/lodash-es/_baseToString.js
var INFINITY3 = 1 / 0;
var symbolProto2 = Symbol_default ? Symbol_default.prototype : void 0;
var symbolToString = symbolProto2 ? symbolProto2.toString : void 0;
function baseToString(value) {
  if (typeof value == "string") {
    return value;
  }
  if (isArray_default(value)) {
    return arrayMap_default(value, baseToString) + "";
  }
  if (isSymbol_default(value)) {
    return symbolToString ? symbolToString.call(value) : "";
  }
  var result = value + "";
  return result == "0" && 1 / value == -INFINITY3 ? "-0" : result;
}
var baseToString_default = baseToString;

// node_modules/lodash-es/toString.js
function toString(value) {
  return value == null ? "" : baseToString_default(value);
}
var toString_default = toString;

// node_modules/lodash-es/_castPath.js
function castPath(value, object) {
  if (isArray_default(value)) {
    return value;
  }
  return isKey_default(value, object) ? [value] : stringToPath_default(toString_default(value));
}
var castPath_default = castPath;

// node_modules/lodash-es/_toKey.js
var INFINITY4 = 1 / 0;
function toKey(value) {
  if (typeof value == "string" || isSymbol_default(value)) {
    return value;
  }
  var result = value + "";
  return result == "0" && 1 / value == -INFINITY4 ? "-0" : result;
}
var toKey_default = toKey;

// node_modules/lodash-es/_baseGet.js
function baseGet(object, path) {
  path = castPath_default(path, object);
  var index = 0, length = path.length;
  while (object != null && index < length) {
    object = object[toKey_default(path[index++])];
  }
  return index && index == length ? object : void 0;
}
var baseGet_default = baseGet;

// node_modules/lodash-es/get.js
function get(object, path, defaultValue) {
  var result = object == null ? void 0 : baseGet_default(object, path);
  return result === void 0 ? defaultValue : result;
}
var get_default = get;

// node_modules/lodash-es/_baseIsMatch.js
var COMPARE_PARTIAL_FLAG5 = 1;
var COMPARE_UNORDERED_FLAG3 = 2;
function baseIsMatch(object, source, matchData, customizer) {
  var index = matchData.length, length = index, noCustomizer = !customizer;
  if (object == null) {
    return !length;
  }
  object = Object(object);
  while (index--) {
    var data = matchData[index];
    if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {
      return false;
    }
  }
  while (++index < length) {
    data = matchData[index];
    var key = data[0], objValue = object[key], srcValue = data[1];
    if (noCustomizer && data[2]) {
      if (objValue === void 0 && !(key in object)) {
        return false;
      }
    } else {
      var stack = new Stack_default();
      if (customizer) {
        var result = customizer(objValue, srcValue, key, object, source, stack);
      }
      if (!(result === void 0 ? baseIsEqual_default(srcValue, objValue, COMPARE_PARTIAL_FLAG5 | COMPARE_UNORDERED_FLAG3, customizer, stack) : result)) {
        return false;
      }
    }
  }
  return true;
}
var baseIsMatch_default = baseIsMatch;

// node_modules/lodash-es/_isStrictComparable.js
function isStrictComparable(value) {
  return value === value && !isObject_default(value);
}
var isStrictComparable_default = isStrictComparable;

// node_modules/lodash-es/_getMatchData.js
function getMatchData(object) {
  var result = keys_default(object), length = result.length;
  while (length--) {
    var key = result[length], value = object[key];
    result[length] = [key, value, isStrictComparable_default(value)];
  }
  return result;
}
var getMatchData_default = getMatchData;

// node_modules/lodash-es/_matchesStrictComparable.js
function matchesStrictComparable(key, srcValue) {
  return function(object) {
    if (object == null) {
      return false;
    }
    return object[key] === srcValue && (srcValue !== void 0 || key in Object(object));
  };
}
var matchesStrictComparable_default = matchesStrictComparable;

// node_modules/lodash-es/_baseMatches.js
function baseMatches(source) {
  var matchData = getMatchData_default(source);
  if (matchData.length == 1 && matchData[0][2]) {
    return matchesStrictComparable_default(matchData[0][0], matchData[0][1]);
  }
  return function(object) {
    return object === source || baseIsMatch_default(object, source, matchData);
  };
}
var baseMatches_default = baseMatches;

// node_modules/lodash-es/_baseHasIn.js
function baseHasIn(object, key) {
  return object != null && key in Object(object);
}
var baseHasIn_default = baseHasIn;

// node_modules/lodash-es/_hasPath.js
function hasPath(object, path, hasFunc) {
  path = castPath_default(path, object);
  var index = -1, length = path.length, result = false;
  while (++index < length) {
    var key = toKey_default(path[index]);
    if (!(result = object != null && hasFunc(object, key))) {
      break;
    }
    object = object[key];
  }
  if (result || ++index != length) {
    return result;
  }
  length = object == null ? 0 : object.length;
  return !!length && isLength_default(length) && isIndex_default(key, length) && (isArray_default(object) || isArguments_default(object));
}
var hasPath_default = hasPath;

// node_modules/lodash-es/hasIn.js
function hasIn(object, path) {
  return object != null && hasPath_default(object, path, baseHasIn_default);
}
var hasIn_default = hasIn;

// node_modules/lodash-es/_baseMatchesProperty.js
var COMPARE_PARTIAL_FLAG6 = 1;
var COMPARE_UNORDERED_FLAG4 = 2;
function baseMatchesProperty(path, srcValue) {
  if (isKey_default(path) && isStrictComparable_default(srcValue)) {
    return matchesStrictComparable_default(toKey_default(path), srcValue);
  }
  return function(object) {
    var objValue = get_default(object, path);
    return objValue === void 0 && objValue === srcValue ? hasIn_default(object, path) : baseIsEqual_default(srcValue, objValue, COMPARE_PARTIAL_FLAG6 | COMPARE_UNORDERED_FLAG4);
  };
}
var baseMatchesProperty_default = baseMatchesProperty;

// node_modules/lodash-es/_basePropertyDeep.js
function basePropertyDeep(path) {
  return function(object) {
    return baseGet_default(object, path);
  };
}
var basePropertyDeep_default = basePropertyDeep;

// node_modules/lodash-es/property.js
function property(path) {
  return isKey_default(path) ? baseProperty_default(toKey_default(path)) : basePropertyDeep_default(path);
}
var property_default = property;

// node_modules/lodash-es/_baseIteratee.js
function baseIteratee(value) {
  if (typeof value == "function") {
    return value;
  }
  if (value == null) {
    return identity_default;
  }
  if (typeof value == "object") {
    return isArray_default(value) ? baseMatchesProperty_default(value[0], value[1]) : baseMatches_default(value);
  }
  return property_default(value);
}
var baseIteratee_default = baseIteratee;

// node_modules/lodash-es/uniqBy.js
function uniqBy(array, iteratee) {
  return array && array.length ? baseUniq_default(array, baseIteratee_default(iteratee, 2)) : [];
}
var uniqBy_default = uniqBy;

// node_modules/@refinedev/core/dist/index.mjs
var import_react57 = __toESM(require_react(), 1);
var import_qs4 = __toESM(require_lib(), 1);
var import_warn_once5 = __toESM(require_warn_once(), 1);
var import_react58 = __toESM(require_react(), 1);
var import_react59 = __toESM(require_react(), 1);
var import_react60 = __toESM(require_react(), 1);
var import_react61 = __toESM(require_react(), 1);
var import_warn_once6 = __toESM(require_warn_once(), 1);
var import_react62 = __toESM(require_react(), 1);
var import_react63 = __toESM(require_react(), 1);
var import_react64 = __toESM(require_react(), 1);
var import_react65 = __toESM(require_react(), 1);
var import_react66 = __toESM(require_react(), 1);
var import_react67 = __toESM(require_react(), 1);
var import_react68 = __toESM(require_react(), 1);
var import_react69 = __toESM(require_react(), 1);
var import_react70 = __toESM(require_react(), 1);
var import_react71 = __toESM(require_react(), 1);
var import_react72 = __toESM(require_react(), 1);
var import_react73 = __toESM(require_react(), 1);
var import_react74 = __toESM(require_react(), 1);
var import_react75 = __toESM(require_react(), 1);
var import_react76 = __toESM(require_react(), 1);
var import_react77 = __toESM(require_react(), 1);
var import_react78 = __toESM(require_react(), 1);
var import_react79 = __toESM(require_react(), 1);
var import_react80 = __toESM(require_react(), 1);
var import_react81 = __toESM(require_react(), 1);
var import_react82 = __toESM(require_react(), 1);
var import_react83 = __toESM(require_react(), 1);
var import_react84 = __toESM(require_react(), 1);
var import_react85 = __toESM(require_react(), 1);
var import_react86 = __toESM(require_react(), 1);
var import_react87 = __toESM(require_react(), 1);
var qn = Object.defineProperty;
var o = (e, t) => qn(e, "name", { value: t, configurable: true });
var Ho = import_react3.default.createContext({});
var Wo = o(({ children: e, isProvided: t, ...r }) => {
  let { replace: s } = Pe(), n = o(async (c2) => {
    var u;
    try {
      return await ((u = r.login) == null ? void 0 : u.call(r, c2));
    } catch (l2) {
      return Promise.reject(l2);
    }
  }, "loginFunc"), a = o(async (c2) => {
    var u;
    try {
      return await ((u = r.register) == null ? void 0 : u.call(r, c2));
    } catch (l2) {
      return Promise.reject(l2);
    }
  }, "registerFunc"), i2 = o(async (c2) => {
    var u;
    try {
      return await ((u = r.logout) == null ? void 0 : u.call(r, c2));
    } catch (l2) {
      return Promise.reject(l2);
    }
  }, "logoutFunc"), p3 = o(async (c2) => {
    var u;
    try {
      return await ((u = r.checkAuth) == null ? void 0 : u.call(r, c2)), Promise.resolve();
    } catch (l2) {
      return l2 != null && l2.redirectPath && s(l2.redirectPath), Promise.reject(l2);
    }
  }, "checkAuthFunc");
  return import_react3.default.createElement(Ho.Provider, { value: { ...r, login: n, logout: i2, checkAuth: p3, register: a, isProvided: t } }, e);
}, "LegacyAuthContextProvider");
var $o = import_react3.default.createContext({});
var zo = o(({ children: e, isProvided: t, ...r }) => {
  let s = o(async (u) => {
    var l2;
    try {
      return await ((l2 = r.login) == null ? void 0 : l2.call(r, u));
    } catch (m2) {
      return console.warn("Unhandled Error in login: refine always expects a resolved promise.", m2), Promise.reject(m2);
    }
  }, "handleLogin"), n = o(async (u) => {
    var l2;
    try {
      return await ((l2 = r.register) == null ? void 0 : l2.call(r, u));
    } catch (m2) {
      return console.warn("Unhandled Error in register: refine always expects a resolved promise.", m2), Promise.reject(m2);
    }
  }, "handleRegister"), a = o(async (u) => {
    var l2;
    try {
      return await ((l2 = r.logout) == null ? void 0 : l2.call(r, u));
    } catch (m2) {
      return console.warn("Unhandled Error in logout: refine always expects a resolved promise.", m2), Promise.reject(m2);
    }
  }, "handleLogout"), i2 = o(async (u) => {
    var l2;
    try {
      let m2 = await ((l2 = r.check) == null ? void 0 : l2.call(r, u));
      return Promise.resolve(m2);
    } catch (m2) {
      return console.warn("Unhandled Error in check: refine always expects a resolved promise.", m2), Promise.reject(m2);
    }
  }, "handleCheck"), p3 = o(async (u) => {
    var l2;
    try {
      let m2 = await ((l2 = r.forgotPassword) == null ? void 0 : l2.call(r, u));
      return Promise.resolve(m2);
    } catch (m2) {
      return console.warn("Unhandled Error in forgotPassword: refine always expects a resolved promise.", m2), Promise.reject(m2);
    }
  }, "handleForgotPassword"), c2 = o(async (u) => {
    var l2;
    try {
      let m2 = await ((l2 = r.updatePassword) == null ? void 0 : l2.call(r, u));
      return Promise.resolve(m2);
    } catch (m2) {
      return console.warn("Unhandled Error in updatePassword: refine always expects a resolved promise.", m2), Promise.reject(m2);
    }
  }, "handleUpdatePassword");
  return import_react3.default.createElement($o.Provider, { value: { ...r, login: s, logout: a, check: i2, register: n, forgotPassword: p3, updatePassword: c2, isProvided: t } }, e);
}, "AuthBindingsContextProvider");
var xe = o(() => import_react3.default.useContext(Ho), "useLegacyAuthContext");
var Ue = o(() => import_react3.default.useContext($o), "useAuthBindingsContext");
var Bt = o((e) => e / 1e3, "userFriendlySecond");
var or = o((e, t = (r) => r) => {
  let [r, ...s] = e;
  return s.map((n) => fromPairs_default(zip_default(r, n))).map((n, a, i2) => t.call(void 0, n, a, i2));
}, "importCSVMapper");
var sr = o((e = "", t) => {
  let r = Kt(e);
  return t === "singular" ? import_pluralize.default.singular(r) : import_pluralize.default.plural(r);
}, "userFriendlyResourceName");
var _o = o((e = {}) => e != null && e.id ? { ...e, id: decodeURIComponent(e.id) } : e, "handleUseParams");
function pt(e, t) {
  return e.findIndex((r, s) => s <= e.length - t.length && t.every((n, a) => e[s + a] === n));
}
o(pt, "arrayFindIndex");
function ra(e) {
  if (e[0] === "data") {
    let t = e.slice(1);
    if (t[2] === "many")
      t[2] = "getMany";
    else if (t[2] === "infinite")
      t[2] = "list";
    else if (t[2] === "one")
      t[2] = "detail";
    else if (t[1] === "custom") {
      let r = { ...t[2] };
      return delete r.method, delete r.url, [t[0], t[1], t[2].method, t[2].url, r];
    }
    return t;
  }
  if (e[0] === "audit" && e[2] === "list")
    return ["logList", e[1], e[3]];
  if (e[0] === "access" && e.length === 4)
    return ["useCan", { resource: e[1], action: e[2], ...e[3] }];
  if (e[0] === "auth") {
    if (pt(e, ["auth", "login"]) !== -1)
      return ["useLogin"];
    if (pt(e, ["auth", "logout"]) !== -1)
      return ["useLogout"];
    if (pt(e, ["auth", "identity"]) !== -1)
      return ["getUserIdentity"];
    if (pt(e, ["auth", "register"]) !== -1)
      return ["useRegister"];
    if (pt(e, ["auth", "forgotPassword"]) !== -1)
      return ["useForgotPassword"];
    if (pt(e, ["auth", "check"]) !== -1)
      return ["useAuthenticated", e[2]];
    if (pt(e, ["auth", "onError"]) !== -1)
      return ["useCheckError"];
    if (pt(e, ["auth", "permissions"]) !== -1)
      return ["usePermissions"];
    if (pt(e, ["auth", "updatePassword"]) !== -1)
      return ["useUpdatePassword"];
  }
  return e;
}
o(ra, "convertToLegacy");
var He = class {
  constructor(t = []) {
    this.segments = [];
    this.segments = t;
  }
  key() {
    return this.segments;
  }
  legacy() {
    return ra(this.segments);
  }
  get(t) {
    return t ? this.legacy() : this.segments;
  }
};
o(He, "BaseKeyBuilder");
var st = class extends He {
  params(t) {
    return new He([...this.segments, t]);
  }
};
o(st, "ParamsKeyBuilder");
var nr = class extends He {
  id(t) {
    return new st([...this.segments, t ? String(t) : void 0]);
  }
};
o(nr, "DataIdRequiringKeyBuilder");
var ar = class extends He {
  ids(...t) {
    return new st([...this.segments, ...t.length ? [t.map((r) => String(r))] : []]);
  }
};
o(ar, "DataIdsRequiringKeyBuilder");
var ir = class extends He {
  action(t) {
    if (t === "one")
      return new nr([...this.segments, t]);
    if (t === "many")
      return new ar([...this.segments, t]);
    if (["list", "infinite"].includes(t))
      return new st([...this.segments, t]);
    throw new Error("Invalid action type");
  }
};
o(ir, "DataResourceKeyBuilder");
var ur = class extends He {
  resource(t) {
    return new ir([...this.segments, t]);
  }
  mutation(t) {
    return new st([...t === "custom" ? this.segments : [this.segments[0]], t]);
  }
};
o(ur, "DataKeyBuilder");
var cr = class extends He {
  action(t) {
    return new st([...this.segments, t]);
  }
};
o(cr, "AuthKeyBuilder");
var pr = class extends He {
  action(t) {
    return new st([...this.segments, t]);
  }
};
o(pr, "AccessResourceKeyBuilder");
var dr = class extends He {
  resource(t) {
    return new pr([...this.segments, t]);
  }
};
o(dr, "AccessKeyBuilder");
var lr = class extends He {
  action(t) {
    return new st([...this.segments, t]);
  }
};
o(lr, "AuditActionKeyBuilder");
var mr = class extends He {
  resource(t) {
    return new lr([...this.segments, t]);
  }
  action(t) {
    return new st([...this.segments, t]);
  }
};
o(mr, "AuditKeyBuilder");
var Mt = class extends He {
  data(t) {
    return new ur(["data", t || "default"]);
  }
  auth() {
    return new cr(["auth"]);
  }
  access() {
    return new dr(["access"]);
  }
  audit() {
    return new mr(["audit"]);
  }
};
o(Mt, "KeyBuilder");
var nt = o(() => new Mt([]), "keys");
var S = o((...e) => e.find((t) => typeof t < "u"), "pickNotDeprecated");
var jo = o((e, t, r, s) => {
  let n = t || "default", a = { all: [n], resourceAll: [n, e || ""], list: (i2) => [...a.resourceAll, "list", { ...i2, ...S(r, s) || {} }], many: (i2) => [...a.resourceAll, "getMany", i2 == null ? void 0 : i2.map(String), { ...S(r, s) || {} }].filter((p3) => p3 !== void 0), detail: (i2) => [...a.resourceAll, "detail", i2 == null ? void 0 : i2.toString(), { ...S(r, s) || {} }], logList: (i2) => ["logList", e, i2, s].filter((p3) => p3 !== void 0) };
  return a;
}, "queryKeys");
var dt = o((e) => (t, r, s, n) => {
  let a = r || "default";
  return { all: nt().data(a).get(e), resourceAll: nt().data(r).resource(t ?? "").get(e), list: (p3) => nt().data(r).resource(t ?? "").action("list").params({ ...p3, ...S(s, n) || {} }).get(e), many: (p3) => nt().data(r).resource(t ?? "").action("many").ids(...p3 ?? []).params({ ...S(s, n) || {} }).get(e), detail: (p3) => nt().data(r).resource(t ?? "").action("one").id(p3 ?? "").params({ ...S(s, n) || {} }).get(e), logList: (p3) => [...nt().audit().resource(t).action("list").params(p3).get(e), n].filter((c2) => c2 !== void 0) };
}, "queryKeysReplacement");
var _r = o((e, t) => !e || !t ? false : !!e.find((r) => r === t), "hasPermission");
var wt = o((e) => e.startsWith(":"), "isParameter");
var it = o((e) => e.split("/").filter((r) => r !== ""), "splitToSegments");
var Xo = o((e, t) => {
  let r = it(e), s = it(t);
  return r.length === s.length;
}, "isSegmentCountsSame");
var ke = o((e) => e.replace(/^\/|\/$/g, ""), "removeLeadingTrailingSlashes");
var Zo = o((e, t) => {
  let r = ke(e), s = ke(t);
  if (!Xo(r, s))
    return false;
  let n = it(r);
  return it(s).every((i2, p3) => wt(i2) || i2 === n[p3]);
}, "checkBySegments");
var Yo = o((e, t, r) => {
  let s = ke(r || ""), n = `${s}${s ? "/" : ""}${e}`;
  return t === "list" ? n = `${n}` : t === "create" ? n = `${n}/create` : t === "edit" ? n = `${n}/edit/:id` : t === "show" ? n = `${n}/show/:id` : t === "clone" && (n = `${n}/clone/:id`), `/${n.replace(/^\//, "")}`;
}, "getDefaultActionPath");
var Oe = o((e, t) => {
  var n, a;
  let r = S((n = e.meta) == null ? void 0 : n.parent, (a = e.options) == null ? void 0 : a.parent, e.parentName);
  return r ? t.find((i2) => (i2.identifier ?? i2.name) === r) ?? { name: r } : void 0;
}, "getParentResource");
var Gt = o((e, t, r) => {
  let s = [], n = Oe(e, t);
  for (; n; )
    s.push(n), n = Oe(n, t);
  if (s.length !== 0)
    return `/${s.reverse().map((a) => {
      var p3;
      let i2 = r ? ((p3 = a.options) == null ? void 0 : p3.route) ?? a.name : a.name;
      return ke(i2);
    }).join("/")}`;
}, "getParentPrefixForResource");
var Se = o((e, t, r) => {
  let s = [], n = ["list", "show", "edit", "create", "clone"], a = Gt(e, t, r);
  return n.forEach((i2) => {
    var u, l2;
    let p3 = r && i2 === "clone" ? e.create : e[i2], c2;
    typeof p3 == "function" || r ? c2 = Yo(r ? ((u = e.meta) == null ? void 0 : u.route) ?? ((l2 = e.options) == null ? void 0 : l2.route) ?? e.name : e.name, i2, r ? a : void 0) : typeof p3 == "string" ? c2 = p3 : typeof p3 == "object" && (c2 = p3.path), c2 && s.push({ action: i2, resource: e, route: `/${c2.replace(/^\//, "")}` });
  }), s;
}, "getActionRoutesFromResource");
var Jo = o((e) => {
  var n;
  if (e.length === 0)
    return;
  if (e.length === 1)
    return e[0];
  let t = e.map((a) => ({ ...a, splitted: it(ke(a.route)) })), r = ((n = t[0]) == null ? void 0 : n.splitted.length) ?? 0, s = [...t];
  for (let a = 0; a < r; a++) {
    let i2 = s.filter((p3) => !wt(p3.splitted[a]));
    if (i2.length !== 0) {
      if (i2.length === 1) {
        s = i2;
        break;
      }
      s = i2;
    }
  }
  return s[0];
}, "pickMatchedRoute");
var qo = o((e, t) => {
  let s = t.flatMap((a) => Se(a, t)).filter((a) => Zo(e, a.route)), n = Jo(s);
  return { found: !!n, resource: n == null ? void 0 : n.resource, action: n == null ? void 0 : n.action, matchedRoute: n == null ? void 0 : n.route };
}, "matchResourceFromRoute");
var fr = o((e, t) => {
  var n;
  let r, s = Gt(e, t, true);
  if (s) {
    let a = S(e.meta, e.options);
    r = `${s}/${(a == null ? void 0 : a.route) ?? e.name}`;
  } else
    r = ((n = e.options) == null ? void 0 : n.route) ?? e.name;
  return `/${r.replace(/^\//, "")}`;
}, "routeGenerator");
var es = o((e) => {
  var i2;
  let t = [], r = {}, s = {}, n, a;
  for (let p3 = 0; p3 < e.length; p3++) {
    n = e[p3];
    let c2 = n.route ?? ((i2 = S(n == null ? void 0 : n.meta, n.options)) == null ? void 0 : i2.route) ?? "";
    r[c2] = n, r[c2].children = [], s[n.name] = n, s[n.name].children = [];
  }
  for (let p3 in r)
    Object.hasOwn(r, p3) && (a = r[p3], a.parentName && s[a.parentName] ? s[a.parentName].children.push(a) : t.push(a));
  return t;
}, "createTreeView");
var Kt = o((e) => (e = e.replace(/([a-z]{1})([A-Z]{1})/g, "$1-$2"), e = e.replace(/([A-Z]{1})([A-Z]{1})([a-z]{1})/g, "$1-$2$3"), e = e.toLowerCase().replace(/[_-]+/g, " ").replace(/\s{2,}/g, " ").trim(), e = e.charAt(0).toUpperCase() + e.slice(1), e), "humanizeString");
var jr = o(({ children: e }) => import_react5.default.createElement("div", null, e), "DefaultLayout");
var sa = { icon: import_react4.default.createElement("svg", { width: 24, height: 24, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", "data-testid": "refine-logo", id: "refine-default-logo" }, import_react4.default.createElement("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M13.7889 0.422291C12.6627 -0.140764 11.3373 -0.140764 10.2111 0.422291L2.21115 4.42229C0.85601 5.09986 0 6.48491 0 8V16C0 17.5151 0.85601 18.9001 2.21115 19.5777L10.2111 23.5777C11.3373 24.1408 12.6627 24.1408 13.7889 23.5777L21.7889 19.5777C23.144 18.9001 24 17.5151 24 16V8C24 6.48491 23.144 5.09986 21.7889 4.42229L13.7889 0.422291ZM8 8C8 5.79086 9.79086 4 12 4C14.2091 4 16 5.79086 16 8V16C16 18.2091 14.2091 20 12 20C9.79086 20 8 18.2091 8 16V8Z", fill: "currentColor" }), import_react4.default.createElement("path", { d: "M14 8C14 9.10457 13.1046 10 12 10C10.8954 10 10 9.10457 10 8C10 6.89543 10.8954 6 12 6C13.1046 6 14 6.89543 14 8Z", fill: "currentColor" })), text: "Refine Project" };
var Fe = { mutationMode: "pessimistic", syncWithLocation: false, undoableTimeout: 5e3, warnWhenUnsavedChanges: false, liveMode: "off", redirect: { afterCreate: "list", afterClone: "list", afterEdit: "list" }, overtime: { interval: 1e3 }, textTransformers: { humanize: Kt, plural: import_pluralize2.default.plural, singular: import_pluralize2.default.singular }, disableServerSideValidation: false, title: sa };
var Qe = import_react4.default.createContext({ hasDashboard: false, mutationMode: "pessimistic", warnWhenUnsavedChanges: false, syncWithLocation: false, undoableTimeout: 5e3, Title: void 0, Sider: void 0, Header: void 0, Footer: void 0, Layout: jr, OffLayoutArea: void 0, liveMode: "off", onLiveEvent: void 0, options: Fe });
var rs = o(({ hasDashboard: e, mutationMode: t, warnWhenUnsavedChanges: r, syncWithLocation: s, undoableTimeout: n, children: a, DashboardPage: i2, Title: p3, Layout: c2 = jr, Header: u, Sider: l2, Footer: m2, OffLayoutArea: g2, LoginPage: d3 = Xr, catchAll: y2, liveMode: P = "off", onLiveEvent: C2, options: f2 }) => import_react4.default.createElement(Qe.Provider, { value: { __initialized: true, hasDashboard: e, mutationMode: t, warnWhenUnsavedChanges: r, syncWithLocation: s, Title: p3, undoableTimeout: n, Layout: c2, Header: u, Sider: l2, Footer: m2, OffLayoutArea: g2, DashboardPage: i2, LoginPage: d3, catchAll: y2, liveMode: P, onLiveEvent: C2, options: f2 } }, a), "RefineContextProvider");
var Zr = o(({ options: e, disableTelemetry: t, liveMode: r, mutationMode: s, reactQueryClientConfig: n, reactQueryDevtoolConfig: a, syncWithLocation: i2, undoableTimeout: p3, warnWhenUnsavedChanges: c2 } = {}) => {
  var g2, d3, y2, P, C2, f2, R2, M, w, T3, b, x;
  let u = { breadcrumb: e == null ? void 0 : e.breadcrumb, mutationMode: (e == null ? void 0 : e.mutationMode) ?? s ?? Fe.mutationMode, undoableTimeout: (e == null ? void 0 : e.undoableTimeout) ?? p3 ?? Fe.undoableTimeout, syncWithLocation: (e == null ? void 0 : e.syncWithLocation) ?? i2 ?? Fe.syncWithLocation, warnWhenUnsavedChanges: (e == null ? void 0 : e.warnWhenUnsavedChanges) ?? c2 ?? Fe.warnWhenUnsavedChanges, liveMode: (e == null ? void 0 : e.liveMode) ?? r ?? Fe.liveMode, redirect: { afterCreate: ((g2 = e == null ? void 0 : e.redirect) == null ? void 0 : g2.afterCreate) ?? Fe.redirect.afterCreate, afterClone: ((d3 = e == null ? void 0 : e.redirect) == null ? void 0 : d3.afterClone) ?? Fe.redirect.afterClone, afterEdit: ((y2 = e == null ? void 0 : e.redirect) == null ? void 0 : y2.afterEdit) ?? Fe.redirect.afterEdit }, overtime: (e == null ? void 0 : e.overtime) ?? Fe.overtime, textTransformers: { humanize: ((P = e == null ? void 0 : e.textTransformers) == null ? void 0 : P.humanize) ?? Fe.textTransformers.humanize, plural: ((C2 = e == null ? void 0 : e.textTransformers) == null ? void 0 : C2.plural) ?? Fe.textTransformers.plural, singular: ((f2 = e == null ? void 0 : e.textTransformers) == null ? void 0 : f2.singular) ?? Fe.textTransformers.singular }, disableServerSideValidation: (e == null ? void 0 : e.disableServerSideValidation) ?? Fe.disableServerSideValidation, projectId: e == null ? void 0 : e.projectId, useNewQueryKeys: e == null ? void 0 : e.useNewQueryKeys, title: { icon: typeof ((R2 = e == null ? void 0 : e.title) == null ? void 0 : R2.icon) > "u" ? Fe.title.icon : (M = e == null ? void 0 : e.title) == null ? void 0 : M.icon, text: typeof ((w = e == null ? void 0 : e.title) == null ? void 0 : w.text) > "u" ? Fe.title.text : (T3 = e == null ? void 0 : e.title) == null ? void 0 : T3.text } }, l2 = (e == null ? void 0 : e.disableTelemetry) ?? t ?? false, m2 = { clientConfig: ((b = e == null ? void 0 : e.reactQuery) == null ? void 0 : b.clientConfig) ?? n ?? {}, devtoolConfig: ((x = e == null ? void 0 : e.reactQuery) == null ? void 0 : x.devtoolConfig) ?? a ?? {} };
  return { optionsWithDefaults: u, disableTelemetryWithDefault: l2, reactQueryWithDefaults: m2 };
}, "handleRefineOptions");
var Yr = o(({ redirectFromProps: e, action: t, redirectOptions: r }) => {
  if (e || e === false)
    return e;
  switch (t) {
    case "clone":
      return r.afterClone;
    case "create":
      return r.afterCreate;
    case "edit":
      return r.afterEdit;
    default:
      return false;
  }
}, "redirectPage");
var yr = o(async (e, t, r) => {
  let s = [];
  for (let [n, a] of e.entries())
    try {
      let i2 = await a();
      s.push(t(i2, n));
    } catch (i2) {
      s.push(r(i2, n));
    }
  return s;
}, "sequentialPromises");
var Ee = o((e, t = [], r = false) => {
  if (!e)
    return;
  if (r) {
    let n = t.find((i2) => ke(i2.route ?? "") === ke(e));
    return n || t.find((i2) => i2.name === e);
  }
  let s = t.find((n) => n.identifier === e);
  return s || (s = t.find((n) => n.name === e)), s;
}, "pickResource");
var ee = o((e, t, r) => {
  if (t)
    return t;
  let s = Ee(e, r), n = S(s == null ? void 0 : s.meta, s == null ? void 0 : s.options);
  return n != null && n.dataProviderName ? n.dataProviderName : "default";
}, "pickDataProvider");
var lt = o(async (e) => ({ data: (await Promise.all(e)).map((t) => t.data) }), "handleMultiple");
var gr = o((e) => {
  let { pagination: t, cursor: r } = e;
  if (r != null && r.next)
    return r.next;
  let s = (t == null ? void 0 : t.current) || 1, n = (t == null ? void 0 : t.pageSize) || 10, a = Math.ceil((e.total || 0) / n);
  return s < a ? Number(s) + 1 : void 0;
}, "getNextPageParam");
var Tr = o((e) => {
  let { pagination: t, cursor: r } = e;
  if (r != null && r.prev)
    return r.prev;
  let s = (t == null ? void 0 : t.current) || 1;
  return s === 1 ? void 0 : s - 1;
}, "getPreviousPageParam");
var xr = o((e) => {
  let t = [];
  return e.forEach((r) => {
    var s, n;
    t.push({ ...r, label: ((s = r.meta) == null ? void 0 : s.label) ?? ((n = r.options) == null ? void 0 : n.label), route: fr(r, e), canCreate: !!r.create, canEdit: !!r.edit, canShow: !!r.show, canDelete: r.canDelete });
  }), t;
}, "legacyResourceTransform");
var os = o((e) => it(ke(e)).flatMap((r) => wt(r) ? [r.slice(1)] : []), "pickRouteParams");
var ss = o((e, t = {}) => e.reduce((r, s) => {
  let n = t[s];
  return typeof n < "u" && (r[s] = n), r;
}, {}), "prepareRouteParams");
var We = o((e, t = {}, r = {}, s = {}) => {
  let n = os(e), a = ss(n, { ...t, ...typeof (r == null ? void 0 : r.id) < "u" ? { id: r.id } : {}, ...typeof (r == null ? void 0 : r.action) < "u" ? { action: r.action } : {}, ...typeof (r == null ? void 0 : r.resource) < "u" ? { resource: r.resource } : {}, ...r == null ? void 0 : r.params, ...s });
  return e.replace(/:([^\/]+)/g, (i2, p3) => {
    let c2 = a[p3];
    return typeof c2 < "u" ? `${c2}` : i2;
  });
}, "composeRoute");
var ie = o(() => {
  let e = xe(), t = Ue();
  return t.isProvided ? { isLegacy: false, ...t } : e.isProvided ? { isLegacy: true, ...e, check: e.checkAuth, onError: e.checkError, getIdentity: e.getUserIdentity } : null;
}, "useActiveAuthProvider");
var Wt = o(({ hasPagination: e, pagination: t, configPagination: r } = {}) => {
  let s = e === false ? "off" : "server", n = (t == null ? void 0 : t.mode) ?? s, a = S(t == null ? void 0 : t.current, r == null ? void 0 : r.current) ?? 1, i2 = S(t == null ? void 0 : t.pageSize, r == null ? void 0 : r.pageSize) ?? 10;
  return { current: a, pageSize: i2, mode: n };
}, "handlePaginationParams");
var Pr = o((e) => {
  let [t, r] = (0, import_react6.useState)(false);
  return (0, import_react6.useEffect)(() => {
    let s = window.matchMedia(e);
    s.matches !== t && r(s.matches);
    let n = o(() => r(s.matches), "listener");
    return window.addEventListener("resize", n), () => window.removeEventListener("resize", n);
  }, [t, e]), t;
}, "useMediaQuery");
var hr = o((e, t, r, s) => {
  let n = s ? e(t, s, r) : e(t, r), a = r ?? t;
  return n === t || typeof n > "u" ? a : n;
}, "safeTranslate");
function ns(e, t, r, s, n) {
  var g2;
  let a = { create: "Create new ", clone: `#${s ?? ""} Clone `, edit: `#${s ?? ""} Edit `, show: `#${s ?? ""} Show `, list: "" }, i2 = (t == null ? void 0 : t.identifier) ?? (t == null ? void 0 : t.name), p3 = (t == null ? void 0 : t.label) ?? ((g2 = t == null ? void 0 : t.meta) == null ? void 0 : g2.label) ?? sr(i2, r === "list" ? "plural" : "singular"), c2 = n ?? p3, u = hr(e, "documentTitle.default", "Refine"), l2 = hr(e, "documentTitle.suffix", " | Refine"), m2 = u;
  return r && i2 && (m2 = hr(e, `documentTitle.${i2}.${r}`, `${a[r] ?? ""}${c2}${l2}`, { id: s })), m2;
}
o(ns, "generateDefaultDocumentTitle");
var _e = o((e, t) => {
  let { mutationMode: r, undoableTimeout: s } = (0, import_react7.useContext)(Qe);
  return { mutationMode: e ?? r, undoableTimeout: t ?? s };
}, "useMutationMode");
var Jr = import_react9.default.createContext({});
var is = o(({ children: e }) => {
  let [t, r] = (0, import_react9.useState)(false);
  return import_react9.default.createElement(Jr.Provider, { value: { warnWhen: t, setWarnWhen: r } }, e);
}, "UnsavedWarnContextProvider");
var vt = o(() => {
  let { warnWhenUnsavedChanges: e } = (0, import_react8.useContext)(Qe), { warnWhen: t, setWarnWhen: r } = (0, import_react8.useContext)(Jr);
  return { warnWhenUnsavedChanges: e, warnWhen: !!t, setWarnWhen: r ?? (() => {
  }) };
}, "useWarnAboutChange");
var qr = o(() => {
  let { syncWithLocation: e } = (0, import_react10.useContext)(Qe);
  return { syncWithLocation: e };
}, "useSyncWithLocation");
var da = o(() => {
  let { Title: e } = (0, import_react11.useContext)(Qe);
  return e;
}, "useTitle");
var ge = o(() => {
  let { Footer: e, Header: t, Layout: r, OffLayoutArea: s, Sider: n, Title: a, hasDashboard: i2, mutationMode: p3, syncWithLocation: c2, undoableTimeout: u, warnWhenUnsavedChanges: l2, DashboardPage: m2, LoginPage: g2, catchAll: d3, options: y2, __initialized: P } = (0, import_react12.useContext)(Qe);
  return { __initialized: P, Footer: e, Header: t, Layout: r, OffLayoutArea: s, Sider: n, Title: a, hasDashboard: i2, mutationMode: p3, syncWithLocation: c2, undoableTimeout: u, warnWhenUnsavedChanges: l2, DashboardPage: m2, LoginPage: g2, catchAll: d3, options: y2 };
}, "useRefineContext");
var Pt = o(() => {
  let { options: { textTransformers: e } } = ge();
  return o((r = "", s) => {
    let n = e.humanize(r);
    return s === "singular" ? e.singular(n) : e.plural(n);
  }, "getFriendlyName");
}, "useUserFriendlyName");
var cs = o((e) => typeof e == "object" && e !== null, "isNested");
var ma = o((e) => Array.isArray(e), "isArray");
var Rr = o((e, t = "") => cs(e) ? Object.keys(e).reduce((r, s) => {
  let n = t.length ? `${t}.` : "";
  return cs(e[s]) && Object.keys(e[s]).length && (ma(e[s]) && e[s].length ? e[s].forEach((a, i2) => {
    Object.assign(r, Rr(a, `${n + s}.${i2}`));
  }) : Object.assign(r, Rr(e[s], n + s))), r[n + s] = e[s], r;
}, {}) : { [t]: e }, "flattenObjectKeys");
var ps = o((e) => e.split(".").map((t) => Number.isNaN(Number(t)) ? t : Number(t)), "propertyPathToArray");
var eo = o((e, t, r) => {
  if (typeof window > "u")
    return;
  let s = new Blob([t], { type: r }), n = document.createElement("a");
  n.setAttribute("visibility", "hidden"), n.download = e;
  let a = URL.createObjectURL(s);
  n.href = a, document.body.appendChild(n), n.click(), document.body.removeChild(n), setTimeout(() => {
    URL.revokeObjectURL(a);
  });
}, "downloadInBrowser");
var Cr = o((e) => {
  setTimeout(e, 0);
}, "deferExecution");
var to = o((e, t = 1e3, r) => {
  let s = [], n = o(() => {
    s.forEach((p3) => {
      var c2;
      return (c2 = p3.reject) == null ? void 0 : c2.call(p3, r);
    }), s = [];
  }, "cancelPrevious"), a = debounce_default((...p3) => {
    let { resolve: c2, reject: u } = s.pop() || {};
    Promise.resolve(e(...p3)).then(c2).catch(u);
  }, t), i2 = o((...p3) => new Promise((c2, u) => {
    n(), s.push({ resolve: c2, reject: u }), a(...p3);
  }), "runner");
  return i2.flush = () => a.flush(), i2.cancel = () => {
    a.cancel(), n();
  }, i2;
}, "asyncDebounce");
var je = o((e) => {
  let t = { queryKey: e.queryKey, pageParam: e.pageParam };
  return Object.defineProperty(t, "signal", { enumerable: true, get: () => e.signal }), t;
}, "prepareQueryContext");
var br = o((e) => {
  let { current: t, pageSize: r, sorter: s, sorters: n, filters: a } = import_qs.default.parse(e.substring(1));
  return { parsedCurrent: t && Number(t), parsedPageSize: r && Number(r), parsedSorter: S(n, s) ?? [], parsedFilters: a ?? [] };
}, "parseTableParams");
var ga = o((e) => {
  let t = import_qs.default.stringify(e);
  return br(`/${t}`);
}, "parseTableParamsFromQuery");
var vr = o((e) => {
  let t = { skipNulls: true, arrayFormat: "indices", encode: false }, { pagination: r, sorter: s, sorters: n, filters: a, ...i2 } = e;
  return import_qs.default.stringify({ ...i2, ...r || {}, sorters: S(n, s), filters: a }, t);
}, "stringifyTableParams");
var ms = o((e, t) => e.operator !== "and" && e.operator !== "or" && t.operator !== "and" && t.operator !== "or" ? ("field" in e ? e.field : void 0) === ("field" in t ? t.field : void 0) && e.operator === t.operator : ("key" in e ? e.key : void 0) === ("key" in t ? t.key : void 0) && e.operator === t.operator, "compareFilters");
var fs = o((e, t) => e.field === t.field, "compareSorters");
var It = o((e, t, r = []) => (t.filter((n) => (n.operator === "or" || n.operator === "and") && !n.key).length > 1 && (0, import_warn_once.default)(true, `[conditionalFilters]: You have created multiple Conditional Filters at the top level, this requires the key parameter. 
For more information, see https://refine.dev/docs/advanced-tutorials/data-provider/handling-filters/#top-level-multiple-conditional-filters-usage`), unionWith_default(e, t, r, ms).filter((n) => n.value !== void 0 && n.value !== null && (n.operator !== "or" || n.operator === "or" && n.value.length !== 0) && (n.operator !== "and" || n.operator === "and" && n.value.length !== 0))), "unionFilters");
var Dr = o((e, t) => unionWith_default(e, t, fs).filter((r) => r.order !== void 0 && r.order !== null), "unionSorters");
var Ur = o((e, t) => [...differenceWith_default(t, e, ms), ...e], "setInitialFilters");
var Er = o((e, t) => [...differenceWith_default(t, e, fs), ...e], "setInitialSorters");
var Ta = o((e, t) => {
  if (!t)
    return;
  let r = t.find((s) => s.field === e);
  if (r)
    return r.order;
}, "getDefaultSortOrder");
var xa = o((e, t, r = "eq") => {
  let s = t == null ? void 0 : t.find((n) => {
    if (n.operator !== "or" && n.operator !== "and" && "field" in n) {
      let { operator: a, field: i2 } = n;
      return i2 === e && a === r;
    }
  });
  if (s)
    return s.value || [];
}, "getDefaultFilter");
var Pa = o((e) => new Promise((t, r) => {
  let s = new FileReader(), n = o(() => {
    s.result && (s.removeEventListener("load", n, false), t(s.result));
  }, "resultHandler");
  s.addEventListener("load", n, false), s.readAsDataURL(e.originFileObj), s.onerror = (a) => (s.removeEventListener("load", n, false), r(a));
}), "file2Base64");
var Z = o(() => {
  let { options: { useNewQueryKeys: e } } = ge();
  return { keys: nt, preferLegacyKeys: !e };
}, "useKeys");
function ha({ v3LegacyAuthProviderCompatible: e = false, options: t, params: r } = {}) {
  let { getPermissions: s } = xe(), { getPermissions: n } = Ue(), { keys: a, preferLegacyKeys: i2 } = Z(), p3 = useQuery({ queryKey: a().auth().action("permissions").get(i2), queryFn: n ? () => n(r) : () => Promise.resolve(void 0), enabled: !e && !!n, ...e ? {} : t, meta: { ...e ? {} : t == null ? void 0 : t.meta, ...k("usePermissions", i2) } }), c2 = useQuery({ queryKey: [...a().auth().action("permissions").get(i2), "v3LegacyAuthProviderCompatible"], queryFn: s ? () => s(r) : () => Promise.resolve(void 0), enabled: e && !!s, ...e ? t : {}, meta: { ...e ? t == null ? void 0 : t.meta : {}, ...k("usePermissions", i2) } });
  return e ? c2 : p3;
}
o(ha, "usePermissions");
function oo({ v3LegacyAuthProviderCompatible: e = false, queryOptions: t } = {}) {
  let { getUserIdentity: r } = xe(), { getIdentity: s } = Ue(), { keys: n, preferLegacyKeys: a } = Z(), i2 = useQuery({ queryKey: n().auth().action("identity").get(a), queryFn: s ?? (() => Promise.resolve({})), enabled: !e && !!s, retry: false, ...e === true ? {} : t, meta: { ...e === true ? {} : t == null ? void 0 : t.meta, ...k("useGetIdentity", a) } }), p3 = useQuery({ queryKey: [...n().auth().action("identity").get(a), "v3LegacyAuthProviderCompatible"], queryFn: r ?? (() => Promise.resolve({})), enabled: e && !!r, retry: false, ...e ? t : {}, meta: { ...e ? t == null ? void 0 : t.meta : {}, ...k("useGetIdentity", a) } });
  return e ? p3 : i2;
}
o(oo, "useGetIdentity");
var St = o(() => {
  let e = useQueryClient(), { keys: t, preferLegacyKeys: r } = Z();
  return o(async () => {
    await Promise.all(["check", "identity", "permissions"].map((n) => e.invalidateQueries(t().auth().action(n).get(r))));
  }, "invalidate");
}, "useInvalidateAuthStore");
function Lr({ v3LegacyAuthProviderCompatible: e, mutationOptions: t } = {}) {
  let r = St(), s = se(), n = Le(), { push: a } = Pe(), { open: i2, close: p3 } = $e(), { logout: c2 } = xe(), { logout: u } = Ue(), { keys: l2, preferLegacyKeys: m2 } = Z(), g2 = useMutation({ mutationKey: l2().auth().action("logout").get(m2), mutationFn: u, onSuccess: async (y2, P) => {
    let { success: C2, error: f2, redirectTo: R2, successNotification: M } = y2, { redirectPath: w } = P ?? {}, T3 = w ?? R2;
    C2 && (p3 == null || p3("useLogout-error"), M && (i2 == null || i2(Ca(M)))), (f2 || !C2) && (i2 == null || i2(so(f2))), T3 !== false && (s === "legacy" ? a(T3 ?? "/login") : T3 && n({ to: T3 })), await r();
  }, onError: (y2) => {
    i2 == null || i2(so(y2));
  }, ...e === true ? {} : t, meta: { ...e === true ? {} : t == null ? void 0 : t.meta, ...k("useLogout", m2) } }), d3 = useMutation({ mutationKey: [...l2().auth().action("logout").get(m2), "v3LegacyAuthProviderCompatible"], mutationFn: c2, onSuccess: async (y2, P) => {
    let C2 = (P == null ? void 0 : P.redirectPath) ?? y2;
    if (C2 !== false) {
      if (C2) {
        s === "legacy" ? a(C2) : n({ to: C2 });
        return;
      }
      s === "legacy" ? a("/login") : n({ to: "/login" }), await r();
    }
  }, onError: (y2) => {
    i2 == null || i2(so(y2));
  }, ...e ? t : {}, meta: { ...e ? t == null ? void 0 : t.meta : {}, ...k("useLogout", m2) } });
  return e ? d3 : g2;
}
o(Lr, "useLogout");
var so = o((e) => ({ key: "useLogout-error", type: "error", message: (e == null ? void 0 : e.name) || "Logout Error", description: (e == null ? void 0 : e.message) || "Something went wrong during logout" }), "buildNotification");
var Ca = o((e) => ({ message: e.message, description: e.description, key: "logout-success", type: "success" }), "buildSuccessNotification");
function $t({ v3LegacyAuthProviderCompatible: e, mutationOptions: t } = {}) {
  let r = St(), s = se(), n = Le(), { replace: a } = Pe(), i2 = Te(), { useLocation: p3 } = le(), { search: c2 } = p3(), { close: u, open: l2 } = $e(), { login: m2 } = xe(), { login: g2 } = Ue(), { keys: d3, preferLegacyKeys: y2 } = Z(), P = import_react13.default.useMemo(() => {
    var R2;
    return s === "legacy" ? import_qs2.default.parse(c2, { ignoreQueryPrefix: true }).to : (R2 = i2.params) == null ? void 0 : R2.to;
  }, [s, i2.params, c2]), C2 = useMutation({ mutationKey: d3().auth().action("login").get(y2), mutationFn: g2, onSuccess: async ({ success: R2, redirectTo: M, error: w, successNotification: T3 }) => {
    R2 && (u == null || u("login-error"), T3 && (l2 == null || l2(Da(T3)))), (w || !R2) && (l2 == null || l2(no(w))), P && R2 ? s === "legacy" ? a(P) : n({ to: P, type: "replace" }) : M ? s === "legacy" ? a(M) : n({ to: M, type: "replace" }) : s === "legacy" && a("/"), await r();
  }, onError: (R2) => {
    l2 == null || l2(no(R2));
  }, ...e === true ? {} : t, meta: { ...e === true ? {} : t == null ? void 0 : t.meta, ...k("useLogin", y2) } }), f2 = useMutation({ mutationKey: [...d3().auth().action("login").get(y2), "v3LegacyAuthProviderCompatible"], mutationFn: m2, onSuccess: async (R2) => {
    P && a(P), R2 !== false && !P && (typeof R2 == "string" ? s === "legacy" ? a(R2) : n({ to: R2, type: "replace" }) : s === "legacy" ? a("/") : n({ to: "/", type: "replace" })), await r(), u == null || u("login-error");
  }, onError: (R2) => {
    l2 == null || l2(no(R2));
  }, ...e ? t : {}, meta: { ...e ? t == null ? void 0 : t.meta : {}, ...k("useLogin", y2) } });
  return e ? f2 : C2;
}
o($t, "useLogin");
var no = o((e) => ({ message: (e == null ? void 0 : e.name) || "Login Error", description: (e == null ? void 0 : e.message) || "Invalid credentials", key: "login-error", type: "error" }), "buildNotification");
var Da = o((e) => ({ message: e.message, description: e.description, key: "login-success", type: "success" }), "buildSuccessNotification");
function io({ v3LegacyAuthProviderCompatible: e, mutationOptions: t } = {}) {
  let r = St(), s = se(), n = Le(), { replace: a } = Pe(), { register: i2 } = xe(), { register: p3 } = Ue(), { close: c2, open: u } = $e(), { keys: l2, preferLegacyKeys: m2 } = Z(), g2 = useMutation({ mutationKey: l2().auth().action("register").get(m2), mutationFn: p3, onSuccess: async ({ success: y2, redirectTo: P, error: C2, successNotification: f2 }) => {
    y2 && (c2 == null || c2("register-error"), f2 && (u == null || u(Ua(f2)))), (C2 || !y2) && (u == null || u(ao(C2))), P ? s === "legacy" ? a(P) : n({ to: P, type: "replace" }) : s === "legacy" && a("/"), await r();
  }, onError: (y2) => {
    u == null || u(ao(y2));
  }, ...e === true ? {} : t, meta: { ...e === true ? {} : t == null ? void 0 : t.meta, ...k("useRegister", m2) } }), d3 = useMutation({ mutationKey: [...l2().auth().action("register").get(m2), "v3LegacyAuthProviderCompatible"], mutationFn: i2, onSuccess: async (y2) => {
    y2 !== false && (y2 ? s === "legacy" ? a(y2) : n({ to: y2, type: "replace" }) : s === "legacy" ? a("/") : n({ to: "/", type: "replace" }), await r(), c2 == null || c2("register-error"));
  }, onError: (y2) => {
    u == null || u(ao(y2));
  }, ...e ? t : {}, meta: { ...e ? t == null ? void 0 : t.meta : {}, ...k("useRegister", m2) } });
  return e ? d3 : g2;
}
o(io, "useRegister");
var ao = o((e) => ({ message: (e == null ? void 0 : e.name) || "Register Error", description: (e == null ? void 0 : e.message) || "Error while registering", key: "register-error", type: "error" }), "buildNotification");
var Ua = o((e) => ({ message: e.message, description: e.description, key: "register-success", type: "success" }), "buildSuccessNotification");
function co({ v3LegacyAuthProviderCompatible: e, mutationOptions: t } = {}) {
  let r = se(), s = Le(), { replace: n } = Pe(), { forgotPassword: a } = xe(), { forgotPassword: i2 } = Ue(), { close: p3, open: c2 } = $e(), { keys: u, preferLegacyKeys: l2 } = Z(), m2 = useMutation({ mutationKey: u().auth().action("forgotPassword").get(l2), mutationFn: i2, onSuccess: ({ success: d3, redirectTo: y2, error: P, successNotification: C2 }) => {
    d3 && (p3 == null || p3("forgot-password-error"), C2 && (c2 == null || c2(Ea(C2)))), (P || !d3) && (c2 == null || c2(uo(P))), y2 && (r === "legacy" ? n(y2) : s({ to: y2, type: "replace" }));
  }, onError: (d3) => {
    c2 == null || c2(uo(d3));
  }, ...e === true ? {} : t, meta: { ...e === true ? {} : t == null ? void 0 : t.meta, ...k("useForgotPassword", l2) } }), g2 = useMutation({ mutationKey: [...u().auth().action("forgotPassword").get(l2), "v3LegacyAuthProviderCompatible"], mutationFn: a, onSuccess: (d3) => {
    d3 !== false && d3 && (r === "legacy" ? n(d3) : s({ to: d3, type: "replace" })), p3 == null || p3("forgot-password-error");
  }, onError: (d3) => {
    c2 == null || c2(uo(d3));
  }, ...e ? t : {}, meta: { ...e ? t == null ? void 0 : t.meta : {}, ...k("useForgotPassword", l2) } });
  return e ? g2 : m2;
}
o(co, "useForgotPassword");
var uo = o((e) => ({ message: (e == null ? void 0 : e.name) || "Forgot Password Error", description: (e == null ? void 0 : e.message) || "Error while resetting password", key: "forgot-password-error", type: "error" }), "buildNotification");
var Ea = o((e) => ({ message: e.message, description: e.description, key: "forgot-password-success", type: "success" }), "buildSuccessNotification");
function lo({ v3LegacyAuthProviderCompatible: e, mutationOptions: t } = {}) {
  let r = se(), s = Le(), { replace: n } = Pe(), { updatePassword: a } = xe(), { updatePassword: i2 } = Ue(), { close: p3, open: c2 } = $e(), { keys: u, preferLegacyKeys: l2 } = Z(), m2 = Te(), { useLocation: g2 } = le(), { search: d3 } = g2(), y2 = import_react14.default.useMemo(() => r === "legacy" ? import_qs3.default.parse(d3, { ignoreQueryPrefix: true }) ?? {} : m2.params ?? {}, [d3, m2, r]), P = useMutation({ mutationKey: u().auth().action("updatePassword").get(l2), mutationFn: async (f2) => i2 == null ? void 0 : i2({ ...y2, ...f2 }), onSuccess: ({ success: f2, redirectTo: R2, error: M, successNotification: w }) => {
    f2 && (p3 == null || p3("update-password-error"), w && (c2 == null || c2(wa(w)))), (M || !f2) && (c2 == null || c2(po(M))), R2 && (r === "legacy" ? n(R2) : s({ to: R2, type: "replace" }));
  }, onError: (f2) => {
    c2 == null || c2(po(f2));
  }, ...e === true ? {} : t, meta: { ...e === true ? {} : t == null ? void 0 : t.meta, ...k("useUpdatePassword", l2) } }), C2 = useMutation({ mutationKey: [...u().auth().action("updatePassword").get(l2), "v3LegacyAuthProviderCompatible"], mutationFn: async (f2) => a == null ? void 0 : a({ ...y2, ...f2 }), onSuccess: (f2) => {
    f2 !== false && f2 && (r === "legacy" ? n(f2) : s({ to: f2, type: "replace" })), p3 == null || p3("update-password-error");
  }, onError: (f2) => {
    c2 == null || c2(po(f2));
  }, ...e ? t : {}, meta: { ...e ? t == null ? void 0 : t.meta : {}, ...k("useUpdatePassword", l2) } });
  return e ? C2 : P;
}
o(lo, "useUpdatePassword");
var po = o((e) => ({ message: (e == null ? void 0 : e.name) || "Update Password Error", description: (e == null ? void 0 : e.message) || "Error while updating password", key: "update-password-error", type: "error" }), "buildNotification");
var wa = o((e) => ({ message: e.message, description: e.description, key: "update-password-success", type: "success" }), "buildSuccessNotification");
function Mr({ v3LegacyAuthProviderCompatible: e = false, params: t } = {}) {
  let { checkAuth: r } = xe(), { check: s } = Ue(), { keys: n, preferLegacyKeys: a } = Z(), i2 = useQuery({ queryKey: n().auth().action("check").params(t).get(a), queryFn: async () => await (s == null ? void 0 : s(t)) ?? {}, retry: false, enabled: !e, meta: { ...k("useIsAuthenticated", a) } }), p3 = useQuery({ queryKey: [...n().auth().action("check").params(t).get(a), "v3LegacyAuthProviderCompatible"], queryFn: async () => await (r == null ? void 0 : r(t)) ?? {}, retry: false, enabled: e, meta: { ...k("useIsAuthenticated", a) } });
  return e ? p3 : i2;
}
o(Mr, "useIsAuthenticated");
var Ia = Mr;
function he({ v3LegacyAuthProviderCompatible: e = false } = {}) {
  let t = se(), r = Le(), { replace: s } = Pe(), { checkError: n } = xe(), { onError: a } = Ue(), { keys: i2, preferLegacyKeys: p3 } = Z(), { mutate: c2 } = Lr({ v3LegacyAuthProviderCompatible: !!e }), { mutate: u } = Lr({ v3LegacyAuthProviderCompatible: !!e }), l2 = useMutation({ mutationKey: i2().auth().action("onError").get(p3), ...a ? { mutationFn: a, onSuccess: ({ logout: g2, redirectTo: d3 }) => {
    if (g2) {
      u({ redirectPath: d3 });
      return;
    }
    if (d3) {
      t === "legacy" ? s(d3) : r({ to: d3, type: "replace" });
      return;
    }
  } } : { mutationFn: () => ({}) }, meta: { ...k("useOnError", p3) } }), m2 = useMutation({ mutationKey: [...i2().auth().action("onError").get(p3), "v3LegacyAuthProviderCompatible"], mutationFn: n, onError: (g2) => {
    c2({ redirectPath: g2 });
  }, meta: { ...k("useOnError", p3) } });
  return e ? m2 : l2;
}
o(he, "useOnError");
var Sa = he;
var mo = o(() => {
  let { isProvided: e } = xe(), { isProvided: t } = Ue();
  return !!(t || e);
}, "useIsExistAuthentication");
var pe = o(({ isLoading: e, interval: t, onInterval: r }) => {
  let [s, n] = (0, import_react15.useState)(void 0), { options: a } = ge(), { overtime: i2 } = a, p3 = t ?? i2.interval, c2 = r ?? (i2 == null ? void 0 : i2.onInterval);
  return (0, import_react15.useEffect)(() => {
    let u;
    return e && (u = setInterval(() => {
      n((l2) => l2 === void 0 ? p3 : l2 + p3);
    }, p3)), () => {
      clearInterval(u), n(void 0);
    };
  }, [e, p3]), (0, import_react15.useEffect)(() => {
    c2 && s && c2(s);
  }, [s]), { elapsedTime: s };
}, "useLoadingOvertime");
var zt = o(({ resource: e, config: t, filters: r, hasPagination: s, pagination: n, sorters: a, queryOptions: i2, successNotification: p3, errorNotification: c2, meta: u, metaData: l2, liveMode: m2, onLiveEvent: g2, liveParams: d3, dataProviderName: y2, overtimeOptions: P } = {}) => {
  let { resources: C2, resource: f2, identifier: R2 } = Y(e), M = fe(), w = $(), T3 = ie(), { mutate: b } = he({ v3LegacyAuthProviderCompatible: !!(T3 != null && T3.isLegacy) }), x = Re(), k2 = ue(), { keys: F, preferLegacyKeys: v } = Z(), V = ee(R2, y2, C2), U = S(u, l2), L = S(r, t == null ? void 0 : t.filters), B = S(a, t == null ? void 0 : t.sort), h = S(s, t == null ? void 0 : t.hasPagination), I2 = Wt({ pagination: n, configPagination: t == null ? void 0 : t.pagination, hasPagination: h }), Q = I2.mode === "server", W = k2({ resource: f2, meta: U }), _2 = { meta: W, metaData: W, filters: L, hasPagination: Q, pagination: I2, sorters: B, config: { ...t, sort: B } }, K = (i2 == null ? void 0 : i2.enabled) === void 0 || (i2 == null ? void 0 : i2.enabled) === true, { getList: j } = M(V);
  ht({ resource: R2, types: ["*"], params: { meta: W, metaData: W, pagination: I2, hasPagination: Q, sort: B, sorters: B, filters: L, subscriptionType: "useList", ...d3 }, channel: `resources/${f2 == null ? void 0 : f2.name}`, enabled: K, liveMode: m2, onLiveEvent: g2, dataProviderName: V, meta: { ...u, dataProviderName: y2 } });
  let te = useQuery({ queryKey: F().data(V).resource(R2 ?? "").action("list").params({ ...U || {}, filters: L, hasPagination: Q, ...Q && { pagination: I2 }, ...a && { sorters: a }, ...(t == null ? void 0 : t.sort) && { sort: t == null ? void 0 : t.sort } }).get(v), queryFn: (D) => {
    let E2 = { ...W, queryContext: je(D) };
    return j({ resource: (f2 == null ? void 0 : f2.name) ?? "", pagination: I2, hasPagination: Q, filters: L, sort: B, sorters: B, meta: E2, metaData: E2 });
  }, ...i2, enabled: typeof (i2 == null ? void 0 : i2.enabled) < "u" ? i2 == null ? void 0 : i2.enabled : !!(f2 != null && f2.name), select: (D) => {
    var q;
    let E2 = D, { current: N, mode: G, pageSize: X } = I2;
    return G === "client" && (E2 = { ...E2, data: E2.data.slice((N - 1) * X, N * X), total: E2.total }), i2 != null && i2.select ? (q = i2 == null ? void 0 : i2.select) == null ? void 0 : q.call(i2, E2) : E2;
  }, onSuccess: (D) => {
    var N;
    (N = i2 == null ? void 0 : i2.onSuccess) == null || N.call(i2, D);
    let E2 = typeof p3 == "function" ? p3(D, _2, R2) : p3;
    x(E2);
  }, onError: (D) => {
    var N;
    b(D), (N = i2 == null ? void 0 : i2.onError) == null || N.call(i2, D);
    let E2 = typeof c2 == "function" ? c2(D, _2, R2) : c2;
    x(E2, { key: `${R2}-useList-notification`, message: w("notifications.error", { statusCode: D.statusCode }, `Error (status code: ${D.statusCode})`), description: D.message, type: "error" });
  }, meta: { ...i2 == null ? void 0 : i2.meta, ...k("useList", v, f2 == null ? void 0 : f2.name) } }), { elapsedTime: ae } = pe({ isLoading: te.isFetching, interval: P == null ? void 0 : P.interval, onInterval: P == null ? void 0 : P.onInterval });
  return { ...te, overtime: { elapsedTime: ae } };
}, "useList");
var Ot = o(({ resource: e, id: t, queryOptions: r, successNotification: s, errorNotification: n, meta: a, metaData: i2, liveMode: p3, onLiveEvent: c2, liveParams: u, dataProviderName: l2, overtimeOptions: m2 }) => {
  let { resources: g2, resource: d3, identifier: y2 } = Y(e), P = fe(), C2 = $(), f2 = ie(), { mutate: R2 } = he({ v3LegacyAuthProviderCompatible: !!(f2 != null && f2.isLegacy) }), M = Re(), w = ue(), { keys: T3, preferLegacyKeys: b } = Z(), x = S(a, i2), k2 = ee(y2, l2, g2), { getOne: F } = P(k2), v = w({ resource: d3, meta: x });
  ht({ resource: y2, types: ["*"], channel: `resources/${d3 == null ? void 0 : d3.name}`, params: { ids: t ? [t] : [], id: t, meta: v, metaData: v, subscriptionType: "useOne", ...u }, enabled: typeof (r == null ? void 0 : r.enabled) < "u" ? r == null ? void 0 : r.enabled : typeof (d3 == null ? void 0 : d3.name) < "u" && typeof t < "u", liveMode: p3, onLiveEvent: c2, dataProviderName: k2, meta: { ...a, dataProviderName: l2 } });
  let V = useQuery({ queryKey: T3().data(k2).resource(y2 ?? "").action("one").id(t ?? "").params({ ...x || {} }).get(b), queryFn: (L) => F({ resource: (d3 == null ? void 0 : d3.name) ?? "", id: t, meta: { ...v, queryContext: je(L) }, metaData: { ...v, queryContext: je(L) } }), ...r, enabled: typeof (r == null ? void 0 : r.enabled) < "u" ? r == null ? void 0 : r.enabled : typeof t < "u", onSuccess: (L) => {
    var h;
    (h = r == null ? void 0 : r.onSuccess) == null || h.call(r, L);
    let B = typeof s == "function" ? s(L, { id: t, ...v }, y2) : s;
    M(B);
  }, onError: (L) => {
    var h;
    R2(L), (h = r == null ? void 0 : r.onError) == null || h.call(r, L);
    let B = typeof n == "function" ? n(L, { id: t, ...v }, y2) : n;
    M(B, { key: `${t}-${y2}-getOne-notification`, message: C2("notifications.error", { statusCode: L.statusCode }, `Error (status code: ${L.statusCode})`), description: L.message, type: "error" });
  }, meta: { ...r == null ? void 0 : r.meta, ...k("useOne", b, d3 == null ? void 0 : d3.name) } }), { elapsedTime: U } = pe({ isLoading: V.isFetching, interval: m2 == null ? void 0 : m2.interval, onInterval: m2 == null ? void 0 : m2.onInterval });
  return { ...V, overtime: { elapsedTime: U } };
}, "useOne");
var fo = o(({ resource: e, ids: t, queryOptions: r, successNotification: s, errorNotification: n, meta: a, metaData: i2, liveMode: p3, onLiveEvent: c2, liveParams: u, dataProviderName: l2, overtimeOptions: m2 }) => {
  let { resources: g2, resource: d3, identifier: y2 } = Y(e), P = fe(), C2 = $(), f2 = ie(), { mutate: R2 } = he({ v3LegacyAuthProviderCompatible: !!(f2 != null && f2.isLegacy) }), M = Re(), w = ue(), { keys: T3, preferLegacyKeys: b } = Z(), x = S(a, i2), k2 = ee(y2, l2, g2), F = (r == null ? void 0 : r.enabled) === void 0 || (r == null ? void 0 : r.enabled) === true, { getMany: v, getOne: V } = P(k2), U = w({ resource: d3, meta: x });
  ht({ resource: y2, types: ["*"], params: { ids: t, meta: U, metaData: U, subscriptionType: "useMany", ...u }, channel: `resources/${d3.name}`, enabled: F, liveMode: p3, onLiveEvent: c2, dataProviderName: k2, meta: { ...a, dataProviderName: l2 } });
  let L = useQuery({ queryKey: T3().data(k2).resource(y2).action("many").ids(...t).params({ ...x || {} }).get(b), queryFn: (h) => {
    let I2 = { ...U, queryContext: je(h) };
    return v ? v({ resource: d3 == null ? void 0 : d3.name, ids: t, meta: I2, metaData: I2 }) : lt(t.map((Q) => V({ resource: d3 == null ? void 0 : d3.name, id: Q, meta: I2, metaData: I2 })));
  }, ...r, onSuccess: (h) => {
    var Q;
    (Q = r == null ? void 0 : r.onSuccess) == null || Q.call(r, h);
    let I2 = typeof s == "function" ? s(h, t, y2) : s;
    M(I2);
  }, onError: (h) => {
    var Q;
    R2(h), (Q = r == null ? void 0 : r.onError) == null || Q.call(r, h);
    let I2 = typeof n == "function" ? n(h, t, y2) : n;
    M(I2, { key: `${t[0]}-${y2}-getMany-notification`, message: C2("notifications.error", { statusCode: h.statusCode }, `Error (status code: ${h.statusCode})`), description: h.message, type: "error" });
  }, meta: { ...r == null ? void 0 : r.meta, ...k("useMany", b, d3 == null ? void 0 : d3.name) } }), { elapsedTime: B } = pe({ isLoading: L.isFetching, interval: m2 == null ? void 0 : m2.interval, onInterval: m2 == null ? void 0 : m2.onInterval });
  return { ...L, overtime: { elapsedTime: B } };
}, "useMany");
var ks = ((s) => (s.ADD = "ADD", s.REMOVE = "REMOVE", s.DECREASE_NOTIFICATION_SECOND = "DECREASE_NOTIFICATION_SECOND", s))(ks || {});
var yo = o(({ id: e, resource: t, values: r, dataProviderName: s, successNotification: n, errorNotification: a, meta: i2, metaData: p3, mutationMode: c2, undoableTimeout: u, onCancel: l2, optimisticUpdateMap: m2, invalidates: g2, mutationOptions: d3, overtimeOptions: y2 } = {}) => {
  let { resources: P, select: C2 } = Y(), f2 = useQueryClient(), R2 = fe(), { mutationMode: M, undoableTimeout: w } = _e(), T3 = $(), b = ie(), { mutate: x } = he({ v3LegacyAuthProviderCompatible: !!(b != null && b.isLegacy) }), k2 = Ye(), { log: F } = Je(), { notificationDispatch: v } = ut(), V = Re(), U = Ae(), L = ue(), { options: { textTransformers: B } } = ge(), { keys: h, preferLegacyKeys: I2 } = Z(), Q = useMutation({ mutationFn: ({ id: D = e, values: E2 = r, resource: N = t, mutationMode: G = c2, undoableTimeout: X = u, onCancel: q = l2, meta: re = i2, metaData: z = p3, dataProviderName: H = s }) => {
    if (!D)
      throw jt;
    if (!E2)
      throw wr;
    if (!N)
      throw _t;
    let { resource: O, identifier: oe } = C2(N), J = L({ resource: O, meta: S(re, z) }), be = G ?? M, ce = X ?? w;
    return be !== "undoable" ? R2(ee(oe, H, P)).update({ resource: O.name, id: D, variables: E2, meta: J, metaData: J }) : new Promise((Ne, ne) => {
      let ye = o(() => {
        R2(ee(oe, H, P)).update({ resource: O.name, id: D, variables: E2, meta: J, metaData: J }).then((ve) => Ne(ve)).catch((ve) => ne(ve));
      }, "doMutation"), de = o(() => {
        ne({ message: "mutationCancelled" });
      }, "cancelMutation");
      q && q(de), v({ type: "ADD", payload: { id: D, resource: oe, cancelMutation: de, doMutation: ye, seconds: ce, isSilent: !!q } });
    });
  }, onMutate: async ({ resource: D = t, id: E2 = e, mutationMode: N = c2, values: G = r, dataProviderName: X = s, meta: q = i2, metaData: re = p3, optimisticUpdateMap: z = m2 ?? { list: true, many: true, detail: true } }) => {
    if (!E2)
      throw jt;
    if (!G)
      throw wr;
    if (!D)
      throw _t;
    let { identifier: H } = C2(D), { gqlMutation: O, gqlQuery: oe, ...J } = S(q, re) ?? {}, be = dt(I2)(H, ee(H, X, P), J), ce = h().data(ee(H, X, P)).resource(H), Ve = f2.getQueriesData(ce.get(I2)), Ne = N ?? M;
    return await f2.cancelQueries(ce.get(I2), void 0, { silent: true }), Ne !== "pessimistic" && (z.list && f2.setQueriesData(ce.action("list").params(J ?? {}).get(I2), (ne) => {
      if (typeof z.list == "function")
        return z.list(ne, G, E2);
      if (!ne)
        return null;
      let ye = ne.data.map((de) => {
        var ve;
        return ((ve = de.id) == null ? void 0 : ve.toString()) === (E2 == null ? void 0 : E2.toString()) ? { id: E2, ...de, ...G } : de;
      });
      return { ...ne, data: ye };
    }), z.many && f2.setQueriesData(ce.action("many").get(I2), (ne) => {
      if (typeof z.many == "function")
        return z.many(ne, G, E2);
      if (!ne)
        return null;
      let ye = ne.data.map((de) => {
        var ve;
        return ((ve = de.id) == null ? void 0 : ve.toString()) === (E2 == null ? void 0 : E2.toString()) && (de = { id: E2, ...de, ...G }), de;
      });
      return { ...ne, data: ye };
    }), z.detail && f2.setQueriesData(ce.action("one").id(E2).params(J ?? {}).get(I2), (ne) => typeof z.detail == "function" ? z.detail(ne, G, E2) : ne ? { ...ne, data: { ...ne.data, ...G } } : null)), { previousQueries: Ve, queryKey: be };
  }, onSettled: (D, E2, N, G) => {
    var O;
    let { id: X = e, resource: q = t, dataProviderName: re = s, invalidates: z = g2 ?? ["list", "many", "detail"] } = N;
    if (!X)
      throw jt;
    if (!q)
      throw _t;
    let { identifier: H } = C2(q);
    U({ resource: H, dataProviderName: ee(H, re, P), invalidates: z, id: X }), v({ type: "REMOVE", payload: { id: X, resource: H } }), (O = d3 == null ? void 0 : d3.onSettled) == null || O.call(d3, D, E2, N, G);
  }, onSuccess: (D, E2, N) => {
    var Ke, Ct;
    let { id: G = e, resource: X = t, successNotification: q = n, dataProviderName: re = s, values: z = r, meta: H = i2, metaData: O = p3 } = E2;
    if (!G)
      throw jt;
    if (!z)
      throw wr;
    if (!X)
      throw _t;
    let { resource: oe, identifier: J } = C2(X), be = B.singular(J), ce = ee(J, re, P), Ve = L({ resource: oe, meta: S(H, O) }), Ne = typeof q == "function" ? q(D, { id: G, values: z }, J) : q;
    V(Ne, { key: `${G}-${J}-notification`, description: T3("notifications.success", "Successful"), message: T3("notifications.editSuccess", { resource: T3(`${J}.${J}`, be) }, `Successfully updated ${be}`), type: "success" }), k2 == null || k2({ channel: `resources/${oe.name}`, type: "updated", payload: { ids: (Ke = D.data) != null && Ke.id ? [D.data.id] : void 0 }, date: /* @__PURE__ */ new Date(), meta: { ...Ve, dataProviderName: ce } });
    let ne;
    if (N) {
      let Ge = f2.getQueryData(N.queryKey.detail(G));
      ne = Object.keys(z || {}).reduce((Tt, xt) => {
        var bt;
        return Tt[xt] = (bt = Ge == null ? void 0 : Ge.data) == null ? void 0 : bt[xt], Tt;
      }, {});
    }
    let { fields: ye, operation: de, variables: ve, ...rt } = Ve || {};
    F == null || F.mutate({ action: "update", resource: oe.name, data: z, previousData: ne, meta: { id: G, dataProviderName: ce, ...rt } }), (Ct = d3 == null ? void 0 : d3.onSuccess) == null || Ct.call(d3, D, E2, N);
  }, onError: (D, E2, N) => {
    var H;
    let { id: G = e, resource: X = t, errorNotification: q = a, values: re = r } = E2;
    if (!G)
      throw jt;
    if (!re)
      throw wr;
    if (!X)
      throw _t;
    let { identifier: z } = C2(X);
    if (N)
      for (let O of N.previousQueries)
        f2.setQueryData(O[0], O[1]);
    if (D.message !== "mutationCancelled") {
      x == null || x(D);
      let O = B.singular(z), oe = typeof q == "function" ? q(D, { id: G, values: re }, z) : q;
      V(oe, { key: `${G}-${z}-notification`, message: T3("notifications.editError", { resource: T3(`${z}.${z}`, O), statusCode: D.statusCode }, `Error when updating ${O} (status code: ${D.statusCode})`), description: D.message, type: "error" });
    }
    (H = d3 == null ? void 0 : d3.onError) == null || H.call(d3, D, E2, N);
  }, mutationKey: h().data().mutation("update").get(I2), ...d3, meta: { ...d3 == null ? void 0 : d3.meta, ...k("useUpdate", I2) } }), { mutate: W, mutateAsync: _2, ...K } = Q, { elapsedTime: j } = pe({ isLoading: K.isLoading, interval: y2 == null ? void 0 : y2.interval, onInterval: y2 == null ? void 0 : y2.onInterval });
  return { ...K, mutate: o((D, E2) => W(D || {}, E2), "handleMutation"), mutateAsync: o((D, E2) => _2(D || {}, E2), "handleMutateAsync"), overtime: { elapsedTime: j } };
}, "useUpdate");
var _t = new Error("[useUpdate]: `resource` is not defined or not matched but is required");
var jt = new Error("[useUpdate]: `id` is not defined but is required in edit and clone actions");
var wr = new Error("[useUpdate]: `values` is not provided but is required");
var Xt = o(({ resource: e, values: t, dataProviderName: r, successNotification: s, errorNotification: n, invalidates: a, meta: i2, metaData: p3, mutationOptions: c2, overtimeOptions: u } = {}) => {
  let l2 = ie(), { mutate: m2 } = he({ v3LegacyAuthProviderCompatible: !!(l2 != null && l2.isLegacy) }), g2 = fe(), d3 = Ae(), { resources: y2, select: P } = Y(), C2 = $(), f2 = Ye(), { log: R2 } = Je(), M = Re(), w = ue(), { options: { textTransformers: T3 } } = ge(), { keys: b, preferLegacyKeys: x } = Z(), k2 = useMutation({ mutationFn: ({ resource: h = e, values: I2 = t, meta: Q = i2, metaData: W = p3, dataProviderName: _2 = r }) => {
    if (!I2)
      throw To;
    if (!h)
      throw go;
    let { resource: K, identifier: j } = P(h), te = w({ resource: K, meta: S(Q, W) });
    return g2(ee(j, _2, y2)).create({ resource: K.name, variables: I2, meta: te, metaData: te });
  }, onSuccess: (h, I2, Q) => {
    var J, be, ce;
    let { resource: W = e, successNotification: _2 = s, dataProviderName: K = r, invalidates: j = a ?? ["list", "many"], values: te = t, meta: ae = i2, metaData: D = p3 } = I2;
    if (!te)
      throw To;
    if (!W)
      throw go;
    let { resource: E2, identifier: N } = P(W), G = T3.singular(N), X = ee(N, K, y2), q = w({ resource: E2, meta: S(ae, D) }), re = typeof _2 == "function" ? _2(h, te, N) : _2;
    M(re, { key: `create-${N}-notification`, message: C2("notifications.createSuccess", { resource: C2(`${N}.${N}`, G) }, `Successfully created ${G}`), description: C2("notifications.success", "Success"), type: "success" }), d3({ resource: N, dataProviderName: X, invalidates: j }), f2 == null || f2({ channel: `resources/${E2.name}`, type: "created", payload: { ids: (J = h == null ? void 0 : h.data) != null && J.id ? [h.data.id] : void 0 }, date: /* @__PURE__ */ new Date(), meta: { ...q, dataProviderName: X } });
    let { fields: z, operation: H, variables: O, ...oe } = q || {};
    R2 == null || R2.mutate({ action: "create", resource: E2.name, data: te, meta: { dataProviderName: X, id: ((be = h == null ? void 0 : h.data) == null ? void 0 : be.id) ?? void 0, ...oe } }), (ce = c2 == null ? void 0 : c2.onSuccess) == null || ce.call(c2, h, I2, Q);
  }, onError: (h, I2, Q) => {
    var D;
    let { resource: W = e, errorNotification: _2 = n, values: K = t } = I2;
    if (!K)
      throw To;
    if (!W)
      throw go;
    m2(h);
    let { identifier: j } = P(W), te = T3.singular(j), ae = typeof _2 == "function" ? _2(h, K, j) : _2;
    M(ae, { key: `create-${j}-notification`, description: h.message, message: C2("notifications.createError", { resource: C2(`${j}.${j}`, te), statusCode: h.statusCode }, `There was an error creating ${te} (status code: ${h.statusCode})`), type: "error" }), (D = c2 == null ? void 0 : c2.onError) == null || D.call(c2, h, I2, Q);
  }, mutationKey: b().data().mutation("create").get(x), ...c2, meta: { ...c2 == null ? void 0 : c2.meta, ...k("useCreate", x) } }), { mutate: F, mutateAsync: v, ...V } = k2, { elapsedTime: U } = pe({ isLoading: V.isLoading, interval: u == null ? void 0 : u.interval, onInterval: u == null ? void 0 : u.onInterval });
  return { ...V, mutate: o((h, I2) => F(h || {}, I2), "handleMutation"), mutateAsync: o((h, I2) => v(h || {}, I2), "handleMutateAsync"), overtime: { elapsedTime: U } };
}, "useCreate");
var go = new Error("[useCreate]: `resource` is not defined or not matched but is required");
var To = new Error("[useCreate]: `values` is not provided but is required");
var xo = o(({ mutationOptions: e, overtimeOptions: t } = {}) => {
  let r = ie(), { mutate: s } = he({ v3LegacyAuthProviderCompatible: !!(r != null && r.isLegacy) }), n = fe(), { resources: a, select: i2 } = Y(), p3 = useQueryClient(), { mutationMode: c2, undoableTimeout: u } = _e(), { notificationDispatch: l2 } = ut(), m2 = $(), g2 = Ye(), { log: d3 } = Je(), y2 = Re(), P = Ae(), C2 = ue(), { options: { textTransformers: f2 } } = ge(), { keys: R2, preferLegacyKeys: M } = Z(), w = useMutation({ mutationFn: ({ id: b, mutationMode: x, undoableTimeout: k2, resource: F, onCancel: v, meta: V, metaData: U, dataProviderName: L, values: B }) => {
    let { resource: h, identifier: I2 } = i2(F), Q = C2({ resource: h, meta: S(V, U) }), W = x ?? c2, _2 = k2 ?? u;
    return W !== "undoable" ? n(ee(I2, L, a)).deleteOne({ resource: h.name, id: b, meta: Q, metaData: Q, variables: B }) : new Promise((j, te) => {
      let ae = o(() => {
        n(ee(I2, L, a)).deleteOne({ resource: h.name, id: b, meta: Q, metaData: Q, variables: B }).then((E2) => j(E2)).catch((E2) => te(E2));
      }, "doMutation"), D = o(() => {
        te({ message: "mutationCancelled" });
      }, "cancelMutation");
      v && v(D), l2({ type: "ADD", payload: { id: b, resource: I2, cancelMutation: D, doMutation: ae, seconds: _2, isSilent: !!v } });
    });
  }, onMutate: async ({ id: b, resource: x, mutationMode: k2, dataProviderName: F, meta: v, metaData: V }) => {
    let { identifier: U } = i2(x), { gqlMutation: L, gqlQuery: B, ...h } = S(v, V) ?? {}, I2 = dt(M)(U, ee(U, F, a), h), Q = R2().data(ee(U, F, a)).resource(U), W = k2 ?? c2;
    await p3.cancelQueries(Q.get(M), void 0, { silent: true });
    let _2 = p3.getQueriesData(Q.get(M));
    return W !== "pessimistic" && (p3.setQueriesData(Q.action("list").params(h ?? {}).get(M), (K) => K ? { data: K.data.filter((te) => {
      var ae;
      return ((ae = te.id) == null ? void 0 : ae.toString()) !== b.toString();
    }), total: K.total - 1 } : null), p3.setQueriesData(Q.action("many").get(M), (K) => {
      if (!K)
        return null;
      let j = K.data.filter((te) => {
        var ae;
        return ((ae = te.id) == null ? void 0 : ae.toString()) !== (b == null ? void 0 : b.toString());
      });
      return { ...K, data: j };
    })), { previousQueries: _2, queryKey: I2 };
  }, onSettled: (b, x, { id: k2, resource: F, dataProviderName: v, invalidates: V = ["list", "many"] }) => {
    let { identifier: U } = i2(F);
    P({ resource: U, dataProviderName: ee(U, v, a), invalidates: V }), l2({ type: "REMOVE", payload: { id: k2, resource: U } });
  }, onSuccess: (b, { id: x, resource: k2, successNotification: F, dataProviderName: v, meta: V, metaData: U }, L) => {
    let { resource: B, identifier: h } = i2(k2), I2 = f2.singular(h), Q = ee(h, v, a), W = C2({ resource: B, meta: S(V, U) });
    p3.removeQueries(L == null ? void 0 : L.queryKey.detail(x));
    let _2 = typeof F == "function" ? F(b, x, h) : F;
    y2(_2, { key: `${x}-${h}-notification`, description: m2("notifications.success", "Success"), message: m2("notifications.deleteSuccess", { resource: m2(`${h}.${h}`, I2) }, `Successfully deleted a ${I2}`), type: "success" }), g2 == null || g2({ channel: `resources/${B.name}`, type: "deleted", payload: { ids: [x] }, date: /* @__PURE__ */ new Date(), meta: { ...W, dataProviderName: Q } });
    let { fields: K, operation: j, variables: te, ...ae } = W || {};
    d3 == null || d3.mutate({ action: "delete", resource: B.name, meta: { id: x, dataProviderName: Q, ...ae } }), p3.removeQueries(L == null ? void 0 : L.queryKey.detail(x));
  }, onError: (b, { id: x, resource: k2, errorNotification: F }, v) => {
    let { identifier: V } = i2(k2);
    if (v)
      for (let U of v.previousQueries)
        p3.setQueryData(U[0], U[1]);
    if (b.message !== "mutationCancelled") {
      s(b);
      let U = f2.singular(V), L = typeof F == "function" ? F(b, x, V) : F;
      y2(L, { key: `${x}-${V}-notification`, message: m2("notifications.deleteError", { resource: U, statusCode: b.statusCode }, `Error (status code: ${b.statusCode})`), description: b.message, type: "error" });
    }
  }, mutationKey: R2().data().mutation("delete").get(M), ...e, meta: { ...e == null ? void 0 : e.meta, ...k("useDelete", M) } }), { elapsedTime: T3 } = pe({ isLoading: w.isLoading, interval: t == null ? void 0 : t.interval, onInterval: t == null ? void 0 : t.onInterval });
  return { ...w, overtime: { elapsedTime: T3 } };
}, "useDelete");
var Ro = o(({ resource: e, values: t, dataProviderName: r, successNotification: s, errorNotification: n, meta: a, metaData: i2, invalidates: p3, mutationOptions: c2, overtimeOptions: u } = {}) => {
  let l2 = fe(), { resources: m2, select: g2 } = Y(), d3 = $(), y2 = Ye(), P = Re(), C2 = Ae(), { log: f2 } = Je(), R2 = ue(), { options: { textTransformers: M } } = ge(), { keys: w, preferLegacyKeys: T3 } = Z(), b = useMutation({ mutationFn: ({ resource: L = e, values: B = t, meta: h = a, metaData: I2 = i2, dataProviderName: Q = r }) => {
    if (!B)
      throw ho;
    if (!L)
      throw Po;
    let { resource: W, identifier: _2 } = g2(L), K = R2({ resource: W, meta: S(h, I2) }), j = l2(ee(_2, Q, m2));
    return j.createMany ? j.createMany({ resource: W.name, variables: B, meta: K, metaData: K }) : lt(B.map((te) => j.create({ resource: W.name, variables: te, meta: K, metaData: K })));
  }, onSuccess: (L, B, h) => {
    var oe;
    let { resource: I2 = e, successNotification: Q = s, dataProviderName: W = r, invalidates: _2 = p3 ?? ["list", "many"], values: K = t, meta: j = a, metaData: te = i2 } = B;
    if (!K)
      throw ho;
    if (!I2)
      throw Po;
    let { resource: ae, identifier: D } = g2(I2), E2 = M.plural(D), N = ee(D, W, m2), G = R2({ resource: ae, meta: S(j, te) }), X = typeof Q == "function" ? Q(L, K, D) : Q;
    P(X, { key: `createMany-${D}-notification`, message: d3("notifications.createSuccess", { resource: d3(`${D}.${D}`, D) }, `Successfully created ${E2}`), description: d3("notifications.success", "Success"), type: "success" }), C2({ resource: D, dataProviderName: N, invalidates: _2 });
    let q = L == null ? void 0 : L.data.filter((J) => (J == null ? void 0 : J.id) !== void 0).map((J) => J.id);
    y2 == null || y2({ channel: `resources/${ae.name}`, type: "created", payload: { ids: q }, date: /* @__PURE__ */ new Date(), meta: { ...G, dataProviderName: N } });
    let { fields: re, operation: z, variables: H, ...O } = G || {};
    f2 == null || f2.mutate({ action: "createMany", resource: ae.name, data: K, meta: { dataProviderName: N, ids: q, ...O } }), (oe = c2 == null ? void 0 : c2.onSuccess) == null || oe.call(c2, L, B, h);
  }, onError: (L, B, h) => {
    var j;
    let { resource: I2 = e, errorNotification: Q = n, values: W = t } = B;
    if (!W)
      throw ho;
    if (!I2)
      throw Po;
    let { identifier: _2 } = g2(I2), K = typeof Q == "function" ? Q(L, W, _2) : Q;
    P(K, { key: `createMany-${_2}-notification`, description: L.message, message: d3("notifications.createError", { resource: d3(`${_2}.${_2}`, _2), statusCode: L.statusCode }, `There was an error creating ${_2} (status code: ${L.statusCode}`), type: "error" }), (j = c2 == null ? void 0 : c2.onError) == null || j.call(c2, L, B, h);
  }, mutationKey: w().data().mutation("createMany").get(T3), ...c2, meta: { ...c2 == null ? void 0 : c2.meta, ...k("useCreateMany", T3) } }), { mutate: x, mutateAsync: k2, ...F } = b, { elapsedTime: v } = pe({ isLoading: F.isLoading, interval: u == null ? void 0 : u.interval, onInterval: u == null ? void 0 : u.onInterval });
  return { ...F, mutate: o((L, B) => x(L || {}, B), "handleMutation"), mutateAsync: o((L, B) => k2(L || {}, B), "handleMutateAsync"), overtime: { elapsedTime: v } };
}, "useCreateMany");
var Po = new Error("[useCreateMany]: `resource` is not defined or not matched but is required");
var ho = new Error("[useCreateMany]: `values` is not provided but is required");
var qa = o(({ ids: e, resource: t, values: r, dataProviderName: s, successNotification: n, errorNotification: a, meta: i2, metaData: p3, mutationMode: c2, undoableTimeout: u, onCancel: l2, optimisticUpdateMap: m2, invalidates: g2, mutationOptions: d3, overtimeOptions: y2 } = {}) => {
  let { resources: P, select: C2 } = Y(), f2 = useQueryClient(), R2 = fe(), M = $(), { mutationMode: w, undoableTimeout: T3 } = _e(), b = ie(), { mutate: x } = he({ v3LegacyAuthProviderCompatible: !!(b != null && b.isLegacy) }), { notificationDispatch: k2 } = ut(), F = Ye(), v = Re(), V = Ae(), { log: U } = Je(), L = ue(), { options: { textTransformers: B } } = ge(), { keys: h, preferLegacyKeys: I2 } = Z(), Q = useMutation({ mutationFn: ({ ids: D = e, values: E2 = r, resource: N = t, onCancel: G = l2, mutationMode: X = c2, undoableTimeout: q = u, meta: re = i2, metaData: z = p3, dataProviderName: H = s }) => {
    if (!D)
      throw Yt;
    if (!E2)
      throw Ir;
    if (!N)
      throw Zt;
    let { resource: O, identifier: oe } = C2(N), J = L({ resource: O, meta: S(re, z) }), be = X ?? w, ce = q ?? T3, Ve = R2(ee(oe, H, P)), Ne = o(() => Ve.updateMany ? Ve.updateMany({ resource: O.name, ids: D, variables: E2, meta: J, metaData: J }) : lt(D.map((ye) => Ve.update({ resource: O.name, id: ye, variables: E2, meta: J, metaData: J }))), "mutationFn");
    return be !== "undoable" ? Ne() : new Promise((ye, de) => {
      let ve = o(() => {
        Ne().then((Ke) => ye(Ke)).catch((Ke) => de(Ke));
      }, "doMutation"), rt = o(() => {
        de({ message: "mutationCancelled" });
      }, "cancelMutation");
      G && G(rt), k2({ type: "ADD", payload: { id: D, resource: oe, cancelMutation: rt, doMutation: ve, seconds: ce, isSilent: !!G } });
    });
  }, onMutate: async ({ resource: D = t, ids: E2 = e, values: N = r, mutationMode: G = c2, dataProviderName: X = s, meta: q = i2, metaData: re = p3, optimisticUpdateMap: z = m2 ?? { list: true, many: true, detail: true } }) => {
    if (!E2)
      throw Yt;
    if (!N)
      throw Ir;
    if (!D)
      throw Zt;
    let { identifier: H } = C2(D), { gqlMutation: O, gqlQuery: oe, ...J } = S(q, re) ?? {}, be = dt(I2)(H, ee(H, X, P), J), ce = h().data(ee(H, X, P)).resource(H), Ve = G ?? w;
    await f2.cancelQueries(ce.get(I2), void 0, { silent: true });
    let Ne = f2.getQueriesData(ce.get(I2));
    if (Ve !== "pessimistic" && (z.list && f2.setQueriesData(ce.action("list").params(J ?? {}).get(I2), (ne) => {
      if (typeof z.list == "function")
        return z.list(ne, N, E2);
      if (!ne)
        return null;
      let ye = ne.data.map((de) => de.id !== void 0 && E2.filter((ve) => ve !== void 0).map(String).includes(de.id.toString()) ? { ...de, ...N } : de);
      return { ...ne, data: ye };
    }), z.many && f2.setQueriesData(ce.action("many").get(I2), (ne) => {
      if (typeof z.many == "function")
        return z.many(ne, N, E2);
      if (!ne)
        return null;
      let ye = ne.data.map((de) => de.id !== void 0 && E2.filter((ve) => ve !== void 0).map(String).includes(de.id.toString()) ? { ...de, ...N } : de);
      return { ...ne, data: ye };
    }), z.detail))
      for (let ne of E2)
        f2.setQueriesData(ce.action("one").id(ne).params(J ?? {}).get(I2), (ye) => {
          if (typeof z.detail == "function")
            return z.detail(ye, N, ne);
          if (!ye)
            return null;
          let de = { ...ye.data, ...N };
          return { ...ye, data: de };
        });
    return { previousQueries: Ne, queryKey: be };
  }, onSettled: (D, E2, N, G) => {
    var O;
    let { ids: X = e, resource: q = t, dataProviderName: re = s, invalidates: z = g2 } = N;
    if (!X)
      throw Yt;
    if (!q)
      throw Zt;
    let { identifier: H } = C2(q);
    V({ resource: H, invalidates: z ?? ["list", "many"], dataProviderName: ee(H, re, P) }), X.forEach((oe) => V({ resource: H, invalidates: z ?? ["detail"], dataProviderName: ee(H, re, P), id: oe })), k2({ type: "REMOVE", payload: { id: X, resource: H } }), (O = d3 == null ? void 0 : d3.onSettled) == null || O.call(d3, D, E2, N, G);
  }, onSuccess: (D, E2, N) => {
    var Ke;
    let { ids: G = e, resource: X = t, values: q = r, meta: re = i2, metaData: z = p3, dataProviderName: H = s, successNotification: O = n } = E2;
    if (!G)
      throw Yt;
    if (!q)
      throw Ir;
    if (!X)
      throw Zt;
    let { resource: oe, identifier: J } = C2(X), be = B.singular(J), ce = ee(J, H, P), Ve = L({ resource: oe, meta: S(re, z) }), Ne = typeof O == "function" ? O(D, { ids: G, values: q }, J) : O;
    v(Ne, { key: `${G}-${J}-notification`, description: M("notifications.success", "Successful"), message: M("notifications.editSuccess", { resource: M(`${J}.${J}`, J) }, `Successfully updated ${be}`), type: "success" }), F == null || F({ channel: `resources/${oe.name}`, type: "updated", payload: { ids: G.map(String) }, date: /* @__PURE__ */ new Date(), meta: { ...Ve, dataProviderName: ce } });
    let ne = [];
    N && G.forEach((Ct) => {
      let Ge = f2.getQueryData(N.queryKey.detail(Ct));
      ne.push(Object.keys(q || {}).reduce((Tt, xt) => {
        var bt;
        return Tt[xt] = (bt = Ge == null ? void 0 : Ge.data) == null ? void 0 : bt[xt], Tt;
      }, {}));
    });
    let { fields: ye, operation: de, variables: ve, ...rt } = Ve || {};
    U == null || U.mutate({ action: "updateMany", resource: oe.name, data: q, previousData: ne, meta: { ids: G, dataProviderName: ce, ...rt } }), (Ke = d3 == null ? void 0 : d3.onSuccess) == null || Ke.call(d3, D, E2, N);
  }, onError: (D, E2, N) => {
    var H;
    let { ids: G = e, resource: X = t, errorNotification: q = a, values: re = r } = E2;
    if (!G)
      throw Yt;
    if (!re)
      throw Ir;
    if (!X)
      throw Zt;
    let { identifier: z } = C2(X);
    if (N)
      for (let O of N.previousQueries)
        f2.setQueryData(O[0], O[1]);
    if (D.message !== "mutationCancelled") {
      x == null || x(D);
      let O = B.singular(z), oe = typeof q == "function" ? q(D, { ids: G, values: re }, z) : q;
      v(oe, { key: `${G}-${z}-updateMany-error-notification`, message: M("notifications.editError", { resource: O, statusCode: D.statusCode }, `Error when updating ${O} (status code: ${D.statusCode})`), description: D.message, type: "error" });
    }
    (H = d3 == null ? void 0 : d3.onError) == null || H.call(d3, D, E2, N);
  }, mutationKey: h().data().mutation("updateMany").get(I2), ...d3, meta: { ...d3 == null ? void 0 : d3.meta, ...k("useUpdateMany", I2) } }), { mutate: W, mutateAsync: _2, ...K } = Q, { elapsedTime: j } = pe({ isLoading: K.isLoading, interval: y2 == null ? void 0 : y2.interval, onInterval: y2 == null ? void 0 : y2.onInterval });
  return { ...K, mutate: o((D, E2) => W(D || {}, E2), "handleMutation"), mutateAsync: o((D, E2) => _2(D || {}, E2), "handleMutateAsync"), overtime: { elapsedTime: j } };
}, "useUpdateMany");
var Zt = new Error("[useUpdateMany]: `resource` is not defined or not matched but is required");
var Yt = new Error("[useUpdateMany]: `id` is not defined but is required in edit and clone actions");
var Ir = new Error("[useUpdateMany]: `values` is not provided but is required");
var oi = o(({ mutationOptions: e, overtimeOptions: t } = {}) => {
  let r = ie(), { mutate: s } = he({ v3LegacyAuthProviderCompatible: !!(r != null && r.isLegacy) }), { mutationMode: n, undoableTimeout: a } = _e(), i2 = fe(), { notificationDispatch: p3 } = ut(), c2 = $(), u = Ye(), l2 = Re(), m2 = Ae(), { log: g2 } = Je(), { resources: d3, select: y2 } = Y(), P = useQueryClient(), C2 = ue(), { options: { textTransformers: f2 } } = ge(), { keys: R2, preferLegacyKeys: M } = Z(), w = useMutation({ mutationFn: ({ resource: b, ids: x, mutationMode: k2, undoableTimeout: F, onCancel: v, meta: V, metaData: U, dataProviderName: L, values: B }) => {
    let { resource: h, identifier: I2 } = y2(b), Q = C2({ resource: h, meta: S(V, U) }), W = k2 ?? n, _2 = F ?? a, K = i2(ee(I2, L, d3)), j = o(() => K.deleteMany ? K.deleteMany({ resource: h.name, ids: x, meta: Q, metaData: Q, variables: B }) : lt(x.map((ae) => K.deleteOne({ resource: h.name, id: ae, meta: Q, metaData: Q, variables: B }))), "mutationFn");
    return W !== "undoable" ? j() : new Promise((ae, D) => {
      let E2 = o(() => {
        j().then((G) => ae(G)).catch((G) => D(G));
      }, "doMutation"), N = o(() => {
        D({ message: "mutationCancelled" });
      }, "cancelMutation");
      v && v(N), p3({ type: "ADD", payload: { id: x, resource: I2, cancelMutation: N, doMutation: E2, seconds: _2, isSilent: !!v } });
    });
  }, onMutate: async ({ ids: b, resource: x, mutationMode: k2, dataProviderName: F, meta: v, metaData: V }) => {
    let { identifier: U } = y2(x), { gqlMutation: L, gqlQuery: B, ...h } = S(v, V) ?? {}, I2 = dt(M)(U, ee(U, F, d3), h), Q = R2().data(ee(U, F, d3)).resource(U), W = k2 ?? n;
    await P.cancelQueries(Q.get(M), void 0, { silent: true });
    let _2 = P.getQueriesData(Q.get(M));
    if (W !== "pessimistic") {
      P.setQueriesData(Q.action("list").params(h ?? {}).get(M), (K) => K ? { data: K.data.filter((te) => te.id && !b.map(String).includes(te.id.toString())), total: K.total - 1 } : null), P.setQueriesData(Q.action("many").get(M), (K) => {
        if (!K)
          return null;
        let j = K.data.filter((te) => te.id ? !b.map(String).includes(te.id.toString()) : false);
        return { ...K, data: j };
      });
      for (let K of b)
        P.setQueriesData(Q.action("one").id(K).params(h).get(M), (j) => !j || j.data.id === K ? null : { ...j });
    }
    return { previousQueries: _2, queryKey: I2 };
  }, onSettled: (b, x, { resource: k2, ids: F, dataProviderName: v, invalidates: V = ["list", "many"] }) => {
    let { identifier: U } = y2(k2);
    m2({ resource: U, dataProviderName: ee(U, v, d3), invalidates: V }), p3({ type: "REMOVE", payload: { id: F, resource: U } });
  }, onSuccess: (b, { ids: x, resource: k2, meta: F, metaData: v, dataProviderName: V, successNotification: U }, L) => {
    let { resource: B, identifier: h } = y2(k2), I2 = ee(h, V, d3), Q = C2({ resource: B, meta: S(F, v) });
    x.forEach((ae) => P.removeQueries(L == null ? void 0 : L.queryKey.detail(ae)));
    let W = typeof U == "function" ? U(b, x, h) : U;
    l2(W, { key: `${x}-${h}-notification`, description: c2("notifications.success", "Success"), message: c2("notifications.deleteSuccess", { resource: c2(`${h}.${h}`, h) }, `Successfully deleted ${h}`), type: "success" }), u == null || u({ channel: `resources/${B.name}`, type: "deleted", payload: { ids: x }, date: /* @__PURE__ */ new Date(), meta: { ...Q, dataProviderName: I2 } });
    let { fields: _2, operation: K, variables: j, ...te } = Q || {};
    g2 == null || g2.mutate({ action: "deleteMany", resource: B.name, meta: { ids: x, dataProviderName: I2, ...te } }), x.forEach((ae) => P.removeQueries(L == null ? void 0 : L.queryKey.detail(ae)));
  }, onError: (b, { ids: x, resource: k2, errorNotification: F }, v) => {
    let { identifier: V } = y2(k2);
    if (v)
      for (let U of v.previousQueries)
        P.setQueryData(U[0], U[1]);
    if (b.message !== "mutationCancelled") {
      s(b);
      let U = f2.singular(V), L = typeof F == "function" ? F(b, x, V) : F;
      l2(L, { key: `${x}-${V}-notification`, message: c2("notifications.deleteError", { resource: U, statusCode: b.statusCode }, `Error (status code: ${b.statusCode})`), description: b.message, type: "error" });
    }
  }, mutationKey: R2().data().mutation("deleteMany").get(M), ...e, meta: { ...e == null ? void 0 : e.meta, ...k("useDeleteMany", M) } }), { elapsedTime: T3 } = pe({ isLoading: w.isLoading, interval: t == null ? void 0 : t.interval, onInterval: t == null ? void 0 : t.onInterval });
  return { ...w, overtime: { elapsedTime: T3 } };
}, "useDeleteMany");
var si = o((e) => {
  var n;
  let t = fe(), { resource: r } = Y(), { getApiUrl: s } = t(e ?? ((n = S(r == null ? void 0 : r.meta, r == null ? void 0 : r.options)) == null ? void 0 : n.dataProviderName));
  return s();
}, "useApiUrl");
var ii = o(({ url: e, method: t, config: r, queryOptions: s, successNotification: n, errorNotification: a, meta: i2, metaData: p3, dataProviderName: c2, overtimeOptions: u }) => {
  let l2 = fe(), m2 = ie(), { mutate: g2 } = he({ v3LegacyAuthProviderCompatible: !!(m2 != null && m2.isLegacy) }), d3 = $(), y2 = Re(), P = ue(), { keys: C2, preferLegacyKeys: f2 } = Z(), R2 = S(i2, p3), { custom: M } = l2(c2), w = P({ meta: R2 });
  if (M) {
    let T3 = useQuery({ queryKey: C2().data(c2).mutation("custom").params({ method: t, url: e, ...r, ...R2 || {} }).get(f2), queryFn: (x) => M({ url: e, method: t, ...r, meta: { ...w, queryContext: je(x) }, metaData: { ...w, queryContext: je(x) } }), ...s, onSuccess: (x) => {
      var F;
      (F = s == null ? void 0 : s.onSuccess) == null || F.call(s, x);
      let k2 = typeof n == "function" ? n(x, { ...r, ...w }) : n;
      y2(k2);
    }, onError: (x) => {
      var F;
      g2(x), (F = s == null ? void 0 : s.onError) == null || F.call(s, x);
      let k2 = typeof a == "function" ? a(x, { ...r, ...w }) : a;
      y2(k2, { key: `${t}-notification`, message: d3("notifications.error", { statusCode: x.statusCode }, `Error (status code: ${x.statusCode})`), description: x.message, type: "error" });
    }, meta: { ...s == null ? void 0 : s.meta, ...k("useCustom", f2) } }), { elapsedTime: b } = pe({ isLoading: T3.isFetching, interval: u == null ? void 0 : u.interval, onInterval: u == null ? void 0 : u.onInterval });
    return { ...T3, overtime: { elapsedTime: b } };
  }
  throw Error("Not implemented custom on data provider.");
}, "useCustom");
var pi = o(({ mutationOptions: e, overtimeOptions: t } = {}) => {
  let r = ie(), { mutate: s } = he({ v3LegacyAuthProviderCompatible: !!(r != null && r.isLegacy) }), n = Re(), a = fe(), i2 = $(), p3 = ue(), { keys: c2, preferLegacyKeys: u } = Z(), l2 = useMutation(({ url: g2, method: d3, values: y2, meta: P, metaData: C2, dataProviderName: f2, config: R2 }) => {
    let M = p3({ meta: S(P, C2) }), { custom: w } = a(f2);
    if (w)
      return w({ url: g2, method: d3, payload: y2, meta: M, metaData: M, headers: { ...R2 == null ? void 0 : R2.headers } });
    throw Error("Not implemented custom on data provider.");
  }, { onSuccess: (g2, { successNotification: d3, config: y2, meta: P, metaData: C2 }) => {
    let f2 = typeof d3 == "function" ? d3(g2, { ...y2, ...S(P, C2) || {} }) : d3;
    n(f2);
  }, onError: (g2, { errorNotification: d3, method: y2, config: P, meta: C2, metaData: f2 }) => {
    s(g2);
    let R2 = typeof d3 == "function" ? d3(g2, { ...P, ...S(C2, f2) || {} }) : d3;
    n(R2, { key: `${y2}-notification`, message: i2("notifications.error", { statusCode: g2.statusCode }, `Error (status code: ${g2.statusCode})`), description: g2.message, type: "error" });
  }, mutationKey: c2().data().mutation("customMutation").get(u), ...e, meta: { ...e == null ? void 0 : e.meta, ...k("useCustomMutation", u) } }), { elapsedTime: m2 } = pe({ isLoading: l2.isLoading, interval: t == null ? void 0 : t.interval, onInterval: t == null ? void 0 : t.onInterval });
  return { ...l2, overtime: { elapsedTime: m2 } };
}, "useCustomMutation");
var Qs = { default: {} };
var Jt = import_react17.default.createContext(Qs);
var Vs = o(({ children: e, dataProvider: t }) => {
  let r = Qs;
  return t && (!("default" in t) && ("getList" in t || "getOne" in t) ? r = { default: t } : r = t), import_react17.default.createElement(Jt.Provider, { value: r }, e);
}, "DataContextProvider");
var fe = o(() => {
  let e = (0, import_react16.useContext)(Jt);
  return (0, import_react16.useCallback)((r) => {
    if (r) {
      let s = e == null ? void 0 : e[r];
      if (!s)
        throw new Error(`"${r}" Data provider not found`);
      if (s && !(e != null && e.default))
        throw new Error("If you have multiple data providers, you must provide default data provider property");
      return e[r];
    }
    if (e.default)
      return e.default;
    throw new Error('There is no "default" data provider. Please pass dataProviderName.');
  }, [e]);
}, "useDataProvider");
var yi = o(({ resource: e, config: t, filters: r, hasPagination: s, pagination: n, sorters: a, queryOptions: i2, successNotification: p3, errorNotification: c2, meta: u, metaData: l2, liveMode: m2, onLiveEvent: g2, liveParams: d3, dataProviderName: y2, overtimeOptions: P }) => {
  let { resources: C2, resource: f2, identifier: R2 } = Y(e), M = fe(), w = $(), T3 = ie(), { mutate: b } = he({ v3LegacyAuthProviderCompatible: !!(T3 != null && T3.isLegacy) }), x = Re(), k2 = ue(), { keys: F, preferLegacyKeys: v } = Z(), V = ee(R2, y2, C2), U = S(u, l2), L = S(r, t == null ? void 0 : t.filters), B = S(a, t == null ? void 0 : t.sort), h = S(s, t == null ? void 0 : t.hasPagination), I2 = Wt({ pagination: n, configPagination: t == null ? void 0 : t.pagination, hasPagination: h }), Q = I2.mode === "server", W = { meta: U, metaData: U, filters: L, hasPagination: Q, pagination: I2, sorters: B, config: { ...t, sort: B } }, _2 = (i2 == null ? void 0 : i2.enabled) === void 0 || (i2 == null ? void 0 : i2.enabled) === true, K = k2({ resource: f2, meta: U }), { getList: j } = M(V);
  ht({ resource: R2, types: ["*"], params: { meta: K, metaData: K, pagination: I2, hasPagination: Q, sort: B, sorters: B, filters: L, subscriptionType: "useList", ...d3 }, channel: `resources/${f2.name}`, enabled: _2, liveMode: m2, onLiveEvent: g2, dataProviderName: V, meta: { ...K, dataProviderName: y2 } });
  let te = useInfiniteQuery({ queryKey: F().data(V).resource(R2).action("infinite").params({ ...U || {}, filters: L, hasPagination: Q, ...Q && { pagination: I2 }, ...a && { sorters: a }, ...(t == null ? void 0 : t.sort) && { sort: t == null ? void 0 : t.sort } }).get(v), queryFn: (D) => {
    let E2 = { ...I2, current: D.pageParam }, N = { ...K, queryContext: je(D) };
    return j({ resource: f2.name, pagination: E2, hasPagination: Q, filters: L, sort: B, sorters: B, meta: N, metaData: N }).then(({ data: G, total: X, ...q }) => ({ data: G, total: X, pagination: E2, ...q }));
  }, getNextPageParam: (D) => gr(D), getPreviousPageParam: (D) => Tr(D), ...i2, onSuccess: (D) => {
    var N;
    (N = i2 == null ? void 0 : i2.onSuccess) == null || N.call(i2, D);
    let E2 = typeof p3 == "function" ? p3(D, W, R2) : p3;
    x(E2);
  }, onError: (D) => {
    var N;
    b(D), (N = i2 == null ? void 0 : i2.onError) == null || N.call(i2, D);
    let E2 = typeof c2 == "function" ? c2(D, W, R2) : c2;
    x(E2, { key: `${R2}-useInfiniteList-notification`, message: w("notifications.error", { statusCode: D.statusCode }, `Error (status code: ${D.statusCode})`), description: D.message, type: "error" });
  }, meta: { ...i2 == null ? void 0 : i2.meta, ...k("useInfiniteList", v, f2 == null ? void 0 : f2.name) } }), { elapsedTime: ae } = pe({ isLoading: te.isFetching, interval: P == null ? void 0 : P.interval, onInterval: P == null ? void 0 : P.onInterval });
  return { ...te, overtime: { elapsedTime: ae } };
}, "useInfiniteList");
var mt = import_react19.default.createContext({});
var Bs = o(({ liveProvider: e, children: t }) => import_react19.default.createElement(mt.Provider, { value: { liveProvider: e } }, t), "LiveContextProvider");
var Ae = o(() => {
  let { resources: e } = Y(), t = useQueryClient(), { keys: r, preferLegacyKeys: s } = Z();
  return (0, import_react20.useCallback)(async ({ resource: a, dataProviderName: i2, invalidates: p3, id: c2, invalidationFilters: u = { type: "all", refetchType: "active" }, invalidationOptions: l2 = { cancelRefetch: false } }) => {
    if (p3 === false)
      return;
    let m2 = ee(a, i2, e), g2 = r().data(m2).resource(a ?? "");
    await Promise.all(p3.map((d3) => {
      switch (d3) {
        case "all":
          return t.invalidateQueries(r().data(m2).get(s), u, l2);
        case "list":
          return t.invalidateQueries(g2.action("list").get(s), u, l2);
        case "many":
          return t.invalidateQueries(g2.action("many").get(s), u, l2);
        case "resourceAll":
          return t.invalidateQueries(g2.get(s), u, l2);
        case "detail":
          return t.invalidateQueries(g2.action("one").id(c2 || "").get(s), u, l2);
        default:
          return;
      }
    }));
  }, []);
}, "useInvalidate");
var Ks = o((e) => {
  let t = (0, import_react24.useRef)(e);
  return isEqual_default(t.current, e) || (t.current = e), t.current;
}, "useMemoized");
var Sr = o((e, t) => {
  let r = Ks(t);
  return (0, import_react23.useMemo)(e, r);
}, "useDeepMemo");
var Rt = import_react22.default.createContext({ resources: [] });
var Hs = o(({ resources: e, children: t }) => {
  let r = Sr(() => xr(e ?? []), [e]);
  return import_react22.default.createElement(Rt.Provider, { value: { resources: r } }, t);
}, "ResourceContextProvider");
var $s = import_react25.default.createContext("new");
var zs = $s.Provider;
var se = o(() => import_react25.default.useContext($s), "useRouterType");
var Os = {};
var ft = (0, import_react27.createContext)(Os);
var _s = o(({ children: e, router: t }) => import_react27.default.createElement(ft.Provider, { value: t ?? Os }, e), "RouterContextProvider");
var Co = o(() => {
  let e = (0, import_react28.useContext)(ft);
  return import_react28.default.useMemo(() => (e == null ? void 0 : e.parse) ?? (() => () => ({})), [e == null ? void 0 : e.parse])();
}, "useParse");
var Te = o(() => {
  let e = Co();
  return import_react26.default.useMemo(() => e(), [e]);
}, "useParsed");
function Y(e) {
  let { resources: t } = (0, import_react21.useContext)(Rt), r = se(), s = Te(), n = { resourceName: e && typeof e != "string" ? e.resourceName : e, resourceNameOrRouteName: e && typeof e != "string" ? e.resourceNameOrRouteName : e, recordItemId: e && typeof e != "string" ? e.recordItemId : void 0 }, a = o((m2, g2 = true) => {
    let y2 = Ee(m2, t, r === "legacy");
    if (y2)
      return { resource: y2, identifier: y2.identifier ?? y2.name };
    if (g2) {
      let P = { name: m2, identifier: m2 }, C2 = P.identifier ?? P.name;
      return { resource: P, identifier: C2 };
    }
  }, "select"), i2 = js(), { useParams: p3 } = le(), c2 = p3();
  if (r === "legacy") {
    let m2 = n.resourceNameOrRouteName ? n.resourceNameOrRouteName : c2.resource, g2 = m2 ? i2(m2) : void 0, d3 = (n == null ? void 0 : n.recordItemId) ?? c2.id, y2 = c2.action, P = (n == null ? void 0 : n.resourceName) ?? (g2 == null ? void 0 : g2.name), C2 = (g2 == null ? void 0 : g2.identifier) ?? (g2 == null ? void 0 : g2.name);
    return { resources: t, resource: g2, resourceName: P, id: d3, action: y2, select: a, identifier: C2 };
  }
  let u, l2 = typeof e == "string" ? e : n == null ? void 0 : n.resourceNameOrRouteName;
  if (l2) {
    let m2 = Ee(l2, t);
    m2 ? u = m2 : u = { name: l2 };
  } else
    s != null && s.resource && (u = s.resource);
  return { resources: t, resource: u, resourceName: u == null ? void 0 : u.name, id: s.id, action: s.action, select: a, identifier: (u == null ? void 0 : u.identifier) ?? (u == null ? void 0 : u.name) };
}
o(Y, "useResource");
var js = o(() => {
  let { resources: e } = (0, import_react29.useContext)(Rt);
  return (0, import_react29.useCallback)((r) => {
    let s = Ee(r, e, true);
    return s || { name: r, route: r };
  }, [e]);
}, "useResourceWithRoute");
var ht = o(({ resource: e, params: t, channel: r, types: s, enabled: n = true, liveMode: a, onLiveEvent: i2, dataProviderName: p3, meta: c2 }) => {
  var f2;
  let { resource: u, identifier: l2 } = Y(e), { liveProvider: m2 } = (0, import_react18.useContext)(mt), { liveMode: g2, onLiveEvent: d3 } = (0, import_react18.useContext)(Qe), y2 = a ?? g2, P = Ae(), C2 = p3 ?? (c2 == null ? void 0 : c2.dataProviderName) ?? ((f2 = u == null ? void 0 : u.meta) == null ? void 0 : f2.dataProviderName);
  (0, import_react18.useEffect)(() => {
    let R2, M = o((w) => {
      y2 === "auto" && P({ resource: l2, dataProviderName: C2, invalidates: ["resourceAll"], invalidationFilters: { type: "active", refetchType: "active" }, invalidationOptions: { cancelRefetch: false } }), i2 == null || i2(w), d3 == null || d3(w);
    }, "callback");
    return y2 && y2 !== "off" && n && (R2 = m2 == null ? void 0 : m2.subscribe({ channel: r, params: { resource: u == null ? void 0 : u.name, ...t }, types: s, callback: M, dataProviderName: C2, meta: { ...c2, dataProviderName: C2 } })), () => {
      R2 && (m2 == null || m2.unsubscribe(R2));
    };
  }, [n]);
}, "useResourceSubscription");
var Zs = o((e) => {
  let { liveMode: t } = (0, import_react30.useContext)(Qe);
  return e ?? t;
}, "useLiveMode");
var jx = o(({ params: e, channel: t, types: r = ["*"], enabled: s = true, onLiveEvent: n, dataProviderName: a = "default", meta: i2 }) => {
  let { liveProvider: p3 } = (0, import_react31.useContext)(mt);
  (0, import_react31.useEffect)(() => {
    let c2;
    return s && (c2 = p3 == null ? void 0 : p3.subscribe({ channel: t, params: e, types: r, callback: n, dataProviderName: a, meta: { ...i2, dataProviderName: a } })), () => {
      c2 && (p3 == null || p3.unsubscribe(c2));
    };
  }, [s]);
}, "useSubscription");
var Ye = o(() => {
  let { liveProvider: e } = (0, import_react32.useContext)(mt);
  return e == null ? void 0 : e.publish;
}, "usePublish");
var vo = (0, import_react34.createContext)({ notifications: [], notificationDispatch: () => false });
var Qi = [];
var Vi = o((e, t) => {
  switch (t.type) {
    case "ADD":
      return [...e.filter((s) => !(isEqual_default(s.id, t.payload.id) && s.resource === t.payload.resource)), { ...t.payload, isRunning: true }];
    case "REMOVE":
      return e.filter((r) => !(isEqual_default(r.id, t.payload.id) && r.resource === t.payload.resource));
    case "DECREASE_NOTIFICATION_SECOND":
      return e.map((r) => isEqual_default(r.id, t.payload.id) && r.resource === t.payload.resource ? { ...r, seconds: t.payload.seconds - 1e3 } : r);
    default:
      return e;
  }
}, "undoableQueueReducer");
var Js = o(({ children: e }) => {
  let [t, r] = (0, import_react34.useReducer)(Vi, Qi), s = { notifications: t, notificationDispatch: r };
  return import_react34.default.createElement(vo.Provider, { value: s }, e, typeof window < "u" ? t.map((n) => import_react34.default.createElement(qs, { key: `${n.id}-${n.resource}-queue`, notification: n })) : null);
}, "UndoableQueueContextProvider");
var ut = o(() => {
  let { notifications: e, notificationDispatch: t } = (0, import_react33.useContext)(vo);
  return { notifications: e, notificationDispatch: t };
}, "useCancelNotification");
var qt = (0, import_react36.createContext)({});
var en = o(({ open: e, close: t, children: r }) => import_react36.default.createElement(qt.Provider, { value: { open: e, close: t } }, r), "NotificationContextProvider");
var $e = o(() => {
  let { open: e, close: t } = (0, import_react35.useContext)(qt);
  return { open: e, close: t };
}, "useNotification");
var Re = o(() => {
  let { open: e } = $e();
  return (0, import_react37.useCallback)((r, s) => {
    r !== false && (r ? e == null || e(r) : s && (e == null || e(s)));
  }, []);
}, "useHandleNotification");
var Xe = import_react39.default.createContext({});
var rn = o(({ children: e, i18nProvider: t }) => import_react39.default.createElement(Xe.Provider, { value: { i18nProvider: t } }, e), "I18nContextProvider");
var Do = o(() => {
  let { i18nProvider: e } = (0, import_react38.useContext)(Xe);
  return (0, import_react38.useCallback)((t) => e == null ? void 0 : e.changeLocale(t), []);
}, "useSetLocale");
var $ = o(() => {
  let { i18nProvider: e } = (0, import_react40.useContext)(Xe);
  return (0, import_react40.useMemo)(() => {
    function r(s, n, a) {
      return (e == null ? void 0 : e.translate(s, n, a)) ?? a ?? (typeof n == "string" && typeof a > "u" ? n : s);
    }
    return o(r, "translate"), r;
  }, [e]);
}, "useTranslate");
var Uo = o(() => {
  let { i18nProvider: e } = (0, import_react41.useContext)(Xe);
  return (0, import_react41.useCallback)(() => e == null ? void 0 : e.getLocale(), []);
}, "useGetLocale");
var BP = o(() => {
  let e = $(), t = Do(), r = Uo();
  return { translate: e, changeLocale: t, getLocale: r };
}, "useTranslation");
var JP = o(({ resourceName: e, resource: t, sorter: r, sorters: s, filters: n, maxItemCount: a, pageSize: i2 = 20, mapData: p3 = o((P) => P, "mapData"), exportOptions: c2, unparseConfig: u, meta: l2, metaData: m2, dataProviderName: g2, onError: d3, download: y2 } = {}) => {
  let [P, C2] = (0, import_react42.useState)(false), f2 = fe(), R2 = ue(), { resource: M, resources: w, identifier: T3 } = Y(S(t, e)), x = `${Pt()(T3, "plural")}-${(/* @__PURE__ */ new Date()).toLocaleString()}`, { getList: k2 } = f2(ee(T3, g2, w)), F = R2({ resource: M, meta: S(l2, m2) });
  return { isLoading: P, triggerExport: o(async () => {
    C2(true);
    let V = [], U = 1, L = true;
    for (; L; )
      try {
        let { data: Q, total: W } = await k2({ resource: (M == null ? void 0 : M.name) ?? "", filters: n, sort: S(s, r), sorters: S(s, r), pagination: { current: U, pageSize: i2, mode: "server" }, meta: F, metaData: F });
        U++, V.push(...Q), a && V.length >= a && (V = V.slice(0, a), L = false), W === V.length && (L = false);
      } catch (Q) {
        C2(false), L = false, d3 == null || d3(Q);
        return;
      }
    let B = typeof u < "u" && u !== null;
    (0, import_warn_once2.default)(B && typeof c2 < "u" && c2 !== null, `[useExport]: resource: "${T3}" 

Both \`unparseConfig\` and \`exportOptions\` are set, \`unparseConfig\` will take precedence`);
    let h = { filename: x, useKeysAsHeaders: true, useBom: true, title: "My Generated Report", quoteStrings: '"', ...c2 };
    (0, import_warn_once2.default)((c2 == null ? void 0 : c2.decimalSeparator) !== void 0, `[useExport]: resource: "${T3}" 

Use of \`decimalSeparator\` no longer supported, please use \`mapData\` instead.

See https://refine.dev/docs/api-reference/core/hooks/import-export/useExport/`), B ? u = { quotes: true, ...u } : u = { columns: h.useKeysAsHeaders ? void 0 : h.headers, delimiter: h.fieldSeparator, header: h.showLabels || h.useKeysAsHeaders, quoteChar: h.quoteStrings, quotes: true };
    let I2 = import_papaparse.default.unparse(V.map(p3), u);
    if (h.showTitle && (I2 = `${h.title}\r

${I2}`), typeof window < "u" && I2.length > 0 && (y2 ?? true)) {
      let Q = h.useTextFile ? ".txt" : ".csv", W = `text/${h.useTextFile ? "plain" : "csv"};charset=utf8;`, _2 = `${(h.filename ?? "download").replace(/ /g, "_")}${Q}`;
      eo(_2, `${h != null && h.useBom ? "\uFEFF" : ""}${I2}`, W);
    }
    return C2(false), I2;
  }, "triggerExport") };
}, "useExport");
var nh = o((e = {}) => {
  var K, j, te, ae, D;
  let t = ue(), r = Ae(), { redirect: s } = At(), { mutationMode: n } = _e(), { setWarnWhen: a } = vt(), i2 = nn(), p3 = S(e.meta, e.metaData), c2 = e.mutationMode ?? n, { id: u, setId: l2, resource: m2, identifier: g2, formAction: d3 } = qe({ resource: e.resource, id: e.id, action: e.action }), [y2, P] = import_react43.default.useState(false), C2 = d3 === "edit", f2 = d3 === "clone", R2 = d3 === "create", M = t({ resource: m2, meta: p3 }), w = (C2 || f2) && !!e.resource, T3 = typeof e.id < "u", b = ((K = e.queryOptions) == null ? void 0 : K.enabled) === false;
  (0, import_warn_once3.default)(w && !T3 && !b, ru(d3, g2, u));
  let x = Yr({ redirectFromProps: e.redirect, action: d3, redirectOptions: s }), k2 = o((E2 = C2 ? "list" : "edit", N = u, G = {}) => {
    i2({ redirect: E2, resource: m2, id: N, meta: { ...p3, ...G } });
  }, "redirect"), F = Ot({ resource: g2, id: u, queryOptions: { enabled: !R2 && u !== void 0, ...e.queryOptions }, liveMode: e.liveMode, onLiveEvent: e.onLiveEvent, liveParams: e.liveParams, meta: { ...M, ...e.queryMeta }, dataProviderName: e.dataProviderName }), v = Xt({ mutationOptions: e.createMutationOptions }), V = yo({ mutationOptions: e.updateMutationOptions }), U = C2 ? V : v, B = U.isLoading || F.isFetching, { elapsedTime: h } = pe({ isLoading: B, interval: (j = e.overtimeOptions) == null ? void 0 : j.interval, onInterval: (te = e.overtimeOptions) == null ? void 0 : te.onInterval });
  import_react43.default.useEffect(() => () => {
    var E2;
    (E2 = e.autoSave) != null && E2.invalidateOnUnmount && y2 && g2 && typeof u < "u" && r({ id: u, invalidates: e.invalidates || ["list", "many", "detail"], dataProviderName: e.dataProviderName, resource: g2 });
  }, [(ae = e.autoSave) == null ? void 0 : ae.invalidateOnUnmount, y2]);
  let I2 = o(async (E2, { isAutosave: N = false } = {}) => {
    let G = c2 === "pessimistic";
    a(false);
    let X = o((re) => k2(x, re), "onSuccessRedirect");
    return new Promise((re, z) => {
      if (!m2)
        return z(Ji);
      if (f2 && !u)
        return z(qi);
      if (!E2)
        return z(eu);
      if (N && !C2)
        return z(tu);
      !G && !N && (Cr(() => X()), re());
      let H = { values: E2, resource: g2 ?? m2.name, meta: { ...M, ...e.mutationMeta }, metaData: { ...M, ...e.mutationMeta }, dataProviderName: e.dataProviderName, invalidates: N ? [] : e.invalidates, successNotification: N ? false : e.successNotification, errorNotification: N ? false : e.errorNotification, ...C2 ? { id: u ?? "", mutationMode: c2, undoableTimeout: e.undoableTimeout, optimisticUpdateMap: e.optimisticUpdateMap } : {} }, { mutateAsync: O } = C2 ? V : v;
      O(H, { onSuccess: e.onMutationSuccess ? (oe, J, be) => {
        var ce;
        (ce = e.onMutationSuccess) == null || ce.call(e, oe, E2, be, N);
      } : void 0, onError: e.onMutationError ? (oe, J, be) => {
        var ce;
        (ce = e.onMutationError) == null || ce.call(e, oe, E2, be, N);
      } : void 0 }).then((oe) => {
        G && !N && Cr(() => {
          var J;
          return X((J = oe == null ? void 0 : oe.data) == null ? void 0 : J.id);
        }), N && P(true), re(oe);
      }).catch(z);
    });
  }, "onFinish"), Q = to((E2) => I2(E2, { isAutosave: true }), ((D = e.autoSave) == null ? void 0 : D.debounce) || 1e3, "Cancelled by debounce"), W = { elapsedTime: h }, _2 = { status: V.status, data: V.data, error: V.error };
  return { onFinish: I2, onFinishAutoSave: Q, formLoading: B, mutationResult: U, mutation: U, queryResult: F, query: F, autoSaveProps: _2, id: u, setId: l2, redirect: k2, overtime: W };
}, "useForm");
var Ji = new Error("[useForm]: `resource` is not defined or not matched but is required");
var qi = new Error("[useForm]: `id` is not defined but is required in edit and clone actions");
var eu = new Error("[useForm]: `values` is not provided but is required");
var tu = new Error("[useForm]: `autoSave` is only allowed in edit action");
var ru = o((e, t, r) => `[useForm]: action: "${e}", resource: "${t}", id: ${r}

If you don't use the \`setId\` method to set the \`id\`, you should pass the \`id\` prop to \`useForm\`. Otherwise, \`useForm\` will not be able to infer the \`id\` from the current URL with custom resource provided.

See https://refine.dev/docs/data/hooks/use-form/#id-`, "idWarningMessage");
var nn = o(() => {
  let { show: e, edit: t, list: r, create: s } = Pe();
  return (0, import_react44.useCallback)(({ redirect: a, resource: i2, id: p3, meta: c2 = {} }) => {
    if (a && i2)
      return i2.show && a === "show" && p3 ? e(i2, p3, void 0, c2) : i2.edit && a === "edit" && p3 ? t(i2, p3, void 0, c2) : i2.create && a === "create" ? s(i2, void 0, c2) : r(i2, "push", c2);
  }, []);
}, "useRedirectionAfterSubmission");
var Eo = o(() => {
  let e = (0, import_react45.useContext)(ft);
  return import_react45.default.useMemo(() => (e == null ? void 0 : e.back) ?? (() => () => {
  }), [e == null ? void 0 : e.back])();
}, "useBack");
var Dt = o(() => {
  let e = se(), { resource: t, resources: r } = Y(), s = Te();
  return import_react47.default.useCallback(({ resource: a, action: i2, meta: p3 }) => {
    var g2;
    let c2 = a || t;
    if (!c2)
      return;
    let l2 = (g2 = Se(c2, r, e === "legacy").find((d3) => d3.action === i2)) == null ? void 0 : g2.route;
    return l2 ? We(l2, c2 == null ? void 0 : c2.meta, s, p3) : void 0;
  }, [r, t, s]);
}, "useGetToPath");
var Le = o(() => {
  let e = (0, import_react46.useContext)(ft), { select: t } = Y(), r = Dt(), n = import_react46.default.useMemo(() => (e == null ? void 0 : e.go) ?? (() => () => {
  }), [e == null ? void 0 : e.go])();
  return (0, import_react46.useCallback)((i2) => {
    if (typeof i2.to != "object")
      return n({ ...i2, to: i2.to });
    let { resource: p3 } = t(i2.to.resource);
    pu(i2.to, p3);
    let c2 = r({ resource: p3, action: i2.to.action, meta: { id: i2.to.id, ...i2.to.meta } });
    return n({ ...i2, to: c2 });
  }, [t, n]);
}, "useGo");
var pu = o((e, t) => {
  if (!(e != null && e.action) || !(e != null && e.resource))
    throw new Error('[useGo]: "action" or "resource" is required.');
  if (["edit", "show", "clone"].includes(e == null ? void 0 : e.action) && !e.id)
    throw new Error(`[useGo]: [action: ${e.action}] requires an "id" for resource [resource: ${e.resource}]`);
  if (!t[e.action])
    throw new Error(`[useGo]: [action: ${e.action}] is not defined for [resource: ${e.resource}]`);
}, "handleResourceErrors");
var Pe = o(() => {
  let { resources: e } = Y(), t = se(), { useHistory: r } = le(), s = r(), n = Te(), a = Le(), i2 = Eo(), p3 = o((T3, b = "push") => {
    t === "legacy" ? s[b](T3) : a({ to: T3, type: b });
  }, "handleUrl"), c2 = o((T3, b = {}) => {
    var F;
    if (t === "legacy") {
      let v = typeof T3 == "string" ? Ee(T3, e, true) ?? { name: T3, route: T3 } : T3, V = Se(v, e, true).find((U) => U.action === "create");
      return V ? We(V.route, v == null ? void 0 : v.meta, n, b) : "";
    }
    let x = typeof T3 == "string" ? Ee(T3, e) ?? { name: T3 } : T3, k2 = (F = Se(x, e).find((v) => v.action === "create")) == null ? void 0 : F.route;
    return k2 ? a({ to: We(k2, x == null ? void 0 : x.meta, n, b), type: "path" }) : "";
  }, "createUrl"), u = o((T3, b, x = {}) => {
    var V;
    let k2 = encodeURIComponent(b);
    if (t === "legacy") {
      let U = typeof T3 == "string" ? Ee(T3, e, true) ?? { name: T3, route: T3 } : T3, L = Se(U, e, true).find((B) => B.action === "edit");
      return L ? We(L.route, U == null ? void 0 : U.meta, n, { ...x, id: k2 }) : "";
    }
    let F = typeof T3 == "string" ? Ee(T3, e) ?? { name: T3 } : T3, v = (V = Se(F, e).find((U) => U.action === "edit")) == null ? void 0 : V.route;
    return v ? a({ to: We(v, F == null ? void 0 : F.meta, n, { ...x, id: k2 }), type: "path" }) : "";
  }, "editUrl"), l2 = o((T3, b, x = {}) => {
    var V;
    let k2 = encodeURIComponent(b);
    if (t === "legacy") {
      let U = typeof T3 == "string" ? Ee(T3, e, true) ?? { name: T3, route: T3 } : T3, L = Se(U, e, true).find((B) => B.action === "clone");
      return L ? We(L.route, U == null ? void 0 : U.meta, n, { ...x, id: k2 }) : "";
    }
    let F = typeof T3 == "string" ? Ee(T3, e) ?? { name: T3 } : T3, v = (V = Se(F, e).find((U) => U.action === "clone")) == null ? void 0 : V.route;
    return v ? a({ to: We(v, F == null ? void 0 : F.meta, n, { ...x, id: k2 }), type: "path" }) : "";
  }, "cloneUrl"), m2 = o((T3, b, x = {}) => {
    var V;
    let k2 = encodeURIComponent(b);
    if (t === "legacy") {
      let U = typeof T3 == "string" ? Ee(T3, e, true) ?? { name: T3, route: T3 } : T3, L = Se(U, e, true).find((B) => B.action === "show");
      return L ? We(L.route, U == null ? void 0 : U.meta, n, { ...x, id: k2 }) : "";
    }
    let F = typeof T3 == "string" ? Ee(T3, e) ?? { name: T3 } : T3, v = (V = Se(F, e).find((U) => U.action === "show")) == null ? void 0 : V.route;
    return v ? a({ to: We(v, F == null ? void 0 : F.meta, n, { ...x, id: k2 }), type: "path" }) : "";
  }, "showUrl"), g2 = o((T3, b = {}) => {
    var F;
    if (t === "legacy") {
      let v = typeof T3 == "string" ? Ee(T3, e, true) ?? { name: T3, route: T3 } : T3, V = Se(v, e, true).find((U) => U.action === "list");
      return V ? We(V.route, v == null ? void 0 : v.meta, n, b) : "";
    }
    let x = typeof T3 == "string" ? Ee(T3, e) ?? { name: T3 } : T3, k2 = (F = Se(x, e).find((v) => v.action === "list")) == null ? void 0 : F.route;
    return k2 ? a({ to: We(k2, x == null ? void 0 : x.meta, n, b), type: "path" }) : "";
  }, "listUrl");
  return { create: o((T3, b = "push", x = {}) => {
    p3(c2(T3, x), b);
  }, "create"), createUrl: c2, edit: o((T3, b, x = "push", k2 = {}) => {
    p3(u(T3, b, k2), x);
  }, "edit"), editUrl: u, clone: o((T3, b, x = "push", k2 = {}) => {
    p3(l2(T3, b, k2), x);
  }, "clone"), cloneUrl: l2, show: o((T3, b, x = "push", k2 = {}) => {
    p3(m2(T3, b, k2), x);
  }, "show"), showUrl: m2, list: o((T3, b = "push", x = {}) => {
    p3(g2(T3, x), b);
  }, "list"), listUrl: g2, push: o((T3, ...b) => {
    t === "legacy" ? s.push(T3, ...b) : a({ to: T3, type: "push" });
  }, "push"), replace: o((T3, ...b) => {
    t === "legacy" ? s.replace(T3, ...b) : a({ to: T3, type: "replace" });
  }, "replace"), goBack: o(() => {
    t === "legacy" ? s.goBack() : i2();
  }, "goBack") };
}, "useNavigation");
var Wh = o(({ resource: e, id: t, meta: r, metaData: s, queryOptions: n, overtimeOptions: a, ...i2 } = {}) => {
  let { resource: p3, identifier: c2, id: u, setId: l2 } = qe({ id: t, resource: e }), g2 = ue()({ resource: p3, meta: S(r, s) });
  (0, import_warn_once4.default)(!!e && !u, lu(c2, u));
  let d3 = Ot({ resource: c2, id: u ?? "", queryOptions: { enabled: u !== void 0, ...n }, meta: g2, metaData: g2, ...i2 }), { elapsedTime: y2 } = pe({ isLoading: d3.isFetching, interval: a == null ? void 0 : a.interval, onInterval: a == null ? void 0 : a.onInterval });
  return { queryResult: d3, query: d3, showId: u, setShowId: l2, overtime: { elapsedTime: y2 } };
}, "useShow");
var lu = o((e, t) => `[useShow]: resource: "${e}", id: ${t} 

If you don't use the \`setShowId\` method to set the \`showId\`, you should pass the \`id\` prop to \`useShow\`. Otherwise, \`useShow\` will not be able to infer the \`id\` from the current URL. 

See https://refine.dev/docs/data/hooks/use-show/#resource`, "idWarningMessage");
var Yh = o(({ resourceName: e, resource: t, mapData: r = o((l2) => l2, "mapData"), paparseOptions: s, batchSize: n = Number.MAX_SAFE_INTEGER, onFinish: a, meta: i2, metaData: p3, onProgress: c2, dataProviderName: u } = {}) => {
  let [l2, m2] = (0, import_react48.useState)(0), [g2, d3] = (0, import_react48.useState)(0), [y2, P] = (0, import_react48.useState)(false), { resource: C2, identifier: f2 } = Y(t ?? e), R2 = ue(), M = Ro(), w = Xt(), T3 = R2({ resource: C2, meta: S(i2, p3) }), b;
  n === 1 ? b = w : b = M;
  let x = o(() => {
    d3(0), m2(0), P(false);
  }, "handleCleanup"), k2 = o((v) => {
    let V = { succeeded: v.filter((U) => U.type === "success"), errored: v.filter((U) => U.type === "error") };
    a == null || a(V), P(false);
  }, "handleFinish");
  (0, import_react48.useEffect)(() => {
    c2 == null || c2({ totalAmount: g2, processedAmount: l2 });
  }, [g2, l2]);
  let F = o(({ file: v }) => (x(), new Promise((V) => {
    P(true), import_papaparse2.default.parse(v, { complete: async ({ data: U }) => {
      let L = or(U, r);
      if (d3(L.length), n === 1) {
        let B = L.map((I2) => o(async () => ({ response: await w.mutateAsync({ resource: f2 ?? "", values: I2, successNotification: false, errorNotification: false, dataProviderName: u, meta: T3, metaData: T3 }), value: I2 }), "fn")), h = await yr(B, ({ response: I2, value: Q }) => (m2((W) => W + 1), { response: [I2.data], type: "success", request: [Q] }), (I2, Q) => ({ response: [I2], type: "error", request: [L[Q]] }));
        V(h);
      } else {
        let B = chunk_default(L, n), h = B.map((Q) => o(async () => ({ response: await M.mutateAsync({ resource: f2 ?? "", values: Q, successNotification: false, errorNotification: false, dataProviderName: u, meta: T3, metaData: T3 }), value: Q, currentBatchLength: Q.length }), "fn")), I2 = await yr(h, ({ response: Q, currentBatchLength: W, value: _2 }) => (m2((K) => K + W), { response: Q.data, type: "success", request: _2 }), (Q, W) => ({ response: [Q], type: "error", request: B[W] }));
        V(I2);
      }
    }, ...s });
  }).then((V) => (k2(V), V))), "handleChange");
  return { inputProps: { type: "file", accept: ".csv", onChange: (v) => {
    v.target.files && v.target.files.length > 0 && F({ file: v.target.files[0] });
  } }, mutationResult: b, isLoading: y2, handleChange: F };
}, "useImport");
var tR = o(({ defaultVisible: e = false } = {}) => {
  let [t, r] = (0, import_react49.useState)(e), s = (0, import_react49.useCallback)(() => r(true), [t]), n = (0, import_react49.useCallback)(() => r(false), [t]);
  return { visible: t, show: s, close: n };
}, "useModal");
var Tu = o(({ resource: e, action: t, meta: r, legacy: s }) => Dt()({ resource: e, action: t, meta: r, legacy: s }), "useToPath");
var yt = o(() => {
  let e = (0, import_react50.useContext)(ft);
  return e != null && e.Link ? e.Link : o(({ to: r, ...s }) => import_react50.default.createElement("a", { href: r, ...s }), "FallbackLink");
}, "useLink");
var gt = { useHistory: () => false, useLocation: () => false, useParams: () => ({}), Prompt: () => null, Link: () => null };
var er = import_react52.default.createContext(gt);
var cn = o(({ children: e, useHistory: t, useLocation: r, useParams: s, Prompt: n, Link: a, routes: i2 }) => import_react52.default.createElement(er.Provider, { value: { useHistory: t ?? gt.useHistory, useLocation: r ?? gt.useLocation, useParams: s ?? gt.useParams, Prompt: n ?? gt.Prompt, Link: a ?? gt.Link, routes: i2 ?? gt.routes } }, e), "LegacyRouterContextProvider");
var le = o(() => {
  let e = (0, import_react51.useContext)(er), { useHistory: t, useLocation: r, useParams: s, Prompt: n, Link: a, routes: i2 } = e ?? gt;
  return { useHistory: t, useLocation: r, useParams: s, Prompt: n, Link: a, routes: i2 };
}, "useRouterContext");
var ct = import_react54.default.createContext({ options: { buttons: { enableAccessControl: true, hideIfUnauthorized: false } } });
var dn = o(({ can: e, children: t, options: r }) => import_react54.default.createElement(ct.Provider, { value: { can: e, options: r ? { ...r, buttons: { enableAccessControl: true, hideIfUnauthorized: false, ...r.buttons } } : { buttons: { enableAccessControl: true, hideIfUnauthorized: false }, queryOptions: void 0 } } }, t), "AccessControlContextProvider");
var kt = o((e) => {
  if (!e)
    return;
  let { icon: t, list: r, edit: s, create: n, show: a, clone: i2, children: p3, meta: c2, options: u, ...l2 } = e, { icon: m2, ...g2 } = c2 ?? {}, { icon: d3, ...y2 } = u ?? {};
  return { ...l2, ...c2 ? { meta: g2 } : {}, ...u ? { options: y2 } : {} };
}, "sanitizeResource");
var Ar = o(({ action: e, resource: t, params: r, queryOptions: s }) => {
  let { can: n, options: a } = (0, import_react53.useContext)(ct), { keys: i2, preferLegacyKeys: p3 } = Z(), { queryOptions: c2 } = a || {}, u = { ...c2, ...s }, { resource: l2, ...m2 } = r ?? {}, g2 = kt(l2), d3 = useQuery({ queryKey: i2().access().resource(t).action(e).params({ params: { ...m2, resource: g2 }, enabled: u == null ? void 0 : u.enabled }).get(p3), queryFn: () => (n == null ? void 0 : n({ action: e, resource: t, params: { ...m2, resource: g2 } })) ?? Promise.resolve({ can: true }), enabled: typeof n < "u", ...u, meta: { ...u == null ? void 0 : u.meta, ...k("useCan", p3, t, ["useButtonCanAccess", "useNavigationButton"]) }, retry: false });
  return typeof n > "u" ? { data: { can: true } } : d3;
}, "useCan");
var HR = o(() => {
  let { can: e } = import_react55.default.useContext(ct);
  return { can: import_react55.default.useMemo(() => e ? o(async ({ params: s, ...n }) => {
    let a = s != null && s.resource ? kt(s.resource) : void 0;
    return e({ ...n, ...s ? { params: { ...s, resource: a } } : {} });
  }, "canWithSanitizedResource") : void 0, [e]) };
}, "useCanWithoutCache");
var qR = o((e) => {
  let [t, r] = (0, import_react56.useState)([]), [s, n] = (0, import_react56.useState)([]), [a, i2] = (0, import_react56.useState)([]), { resource: p3, sort: c2, sorters: u, filters: l2 = [], optionLabel: m2 = "title", optionValue: g2 = "id", searchField: d3 = typeof m2 == "string" ? m2 : "title", debounce: y2 = 300, successNotification: P, errorNotification: C2, defaultValueQueryOptions: f2, queryOptions: R2, fetchSize: M, pagination: w, hasPagination: T3 = false, liveMode: b, defaultValue: x = [], selectedOptionsOrder: k2 = "in-place", onLiveEvent: F, onSearch: v, liveParams: V, meta: U, metaData: L, dataProviderName: B, overtimeOptions: h } = e, I2 = (0, import_react56.useCallback)((H) => typeof m2 == "string" ? get_default(H, m2) : m2(H), [m2]), Q = (0, import_react56.useCallback)((H) => typeof g2 == "string" ? get_default(H, g2) : g2(H), [g2]), { resource: W, identifier: _2 } = Y(p3), j = ue()({ resource: W, meta: S(U, L) }), te = Array.isArray(x) ? x : [x], ae = (0, import_react56.useCallback)((H) => {
    i2(H.data.map((O) => ({ label: I2(O), value: Q(O) })));
  }, [m2, g2]), D = f2 ?? R2, E2 = fo({ resource: _2, ids: te, queryOptions: { ...D, enabled: te.length > 0 && ((D == null ? void 0 : D.enabled) ?? true), onSuccess: (H) => {
    var O;
    ae(H), (O = D == null ? void 0 : D.onSuccess) == null || O.call(D, H);
  } }, meta: j, metaData: j, liveMode: "off", dataProviderName: B }), N = (0, import_react56.useCallback)((H) => {
    n(H.data.map((O) => ({ label: I2(O), value: Q(O) })));
  }, [m2, g2]), G = zt({ resource: _2, sorters: S(u, c2), filters: l2.concat(t), pagination: { current: w == null ? void 0 : w.current, pageSize: (w == null ? void 0 : w.pageSize) ?? M, mode: w == null ? void 0 : w.mode }, hasPagination: T3, queryOptions: { ...R2, onSuccess: (H) => {
    var O;
    N(H), (O = R2 == null ? void 0 : R2.onSuccess) == null || O.call(R2, H);
  } }, successNotification: P, errorNotification: C2, meta: j, metaData: j, liveMode: b, liveParams: V, onLiveEvent: F, dataProviderName: B }), { elapsedTime: X } = pe({ isLoading: G.isFetching || E2.isFetching, interval: h == null ? void 0 : h.interval, onInterval: h == null ? void 0 : h.onInterval }), q = (0, import_react56.useMemo)(() => uniqBy_default(k2 === "in-place" ? [...s, ...a] : [...a, ...s], "value"), [s, a]), re = (0, import_react56.useRef)(v), z = (0, import_react56.useMemo)(() => debounce_default((H) => {
    if (re.current) {
      r(re.current(H));
      return;
    }
    if (!H) {
      r([]);
      return;
    }
    r([{ field: d3, operator: "contains", value: H }]);
  }, y2), [d3, y2]);
  return (0, import_react56.useEffect)(() => {
    re.current = v;
  }, [v]), { queryResult: G, defaultValueQueryResult: E2, query: G, defaultValueQuery: E2, options: q, onSearch: z, overtime: { elapsedTime: X } };
}, "useSelect");
var Tn = [];
var xn = [];
function dC({ initialCurrent: e, initialPageSize: t, hasPagination: r = true, pagination: s, initialSorter: n, permanentSorter: a = xn, defaultSetFilterBehavior: i2, initialFilter: p3, permanentFilter: c2 = Tn, filters: u, sorters: l2, syncWithLocation: m2, resource: g2, successNotification: d3, errorNotification: y2, queryOptions: P, liveMode: C2, onLiveEvent: f2, liveParams: R2, meta: M, metaData: w, dataProviderName: T3, overtimeOptions: b } = {}) {
  var Qo, Vo, No, Bo, Ko;
  let { syncWithLocation: x } = qr(), k2 = m2 ?? x, F = Zs(C2), v = se(), { useLocation: V } = le(), { search: U, pathname: L } = V(), B = ue(), h = Te(), I2 = ((u == null ? void 0 : u.mode) || "server") === "server", Q = ((l2 == null ? void 0 : l2.mode) || "server") === "server", W = r === false ? "off" : "server", _2 = ((s == null ? void 0 : s.mode) ?? W) !== "off", K = S(s == null ? void 0 : s.current, e), j = S(s == null ? void 0 : s.pageSize, t), te = S(M, w), { parsedCurrent: ae, parsedPageSize: D, parsedSorter: E2, parsedFilters: N } = br(U ?? "?"), G = S(u == null ? void 0 : u.initial, p3), X = S(u == null ? void 0 : u.permanent, c2) ?? Tn, q = S(l2 == null ? void 0 : l2.initial, n), re = S(l2 == null ? void 0 : l2.permanent, a) ?? xn, z = S(u == null ? void 0 : u.defaultBehavior, i2) ?? "merge", H, O, oe, J;
  k2 ? (H = ((Qo = h == null ? void 0 : h.params) == null ? void 0 : Qo.current) || ae || K || 1, O = ((Vo = h == null ? void 0 : h.params) == null ? void 0 : Vo.pageSize) || D || j || 10, oe = ((No = h == null ? void 0 : h.params) == null ? void 0 : No.sorters) || (E2.length ? E2 : q), J = ((Bo = h == null ? void 0 : h.params) == null ? void 0 : Bo.filters) || (N.length ? N : G)) : (H = K || 1, O = j || 10, oe = q, J = G);
  let { replace: be } = Pe(), ce = Le(), { resource: Ve, identifier: Ne } = Y(g2), ne = B({ resource: Ve, meta: te });
  import_react57.default.useEffect(() => {
    (0, import_warn_once5.default)(typeof Ne > "u", "useTable: `resource` is not defined.");
  }, [Ne]);
  let [ye, de] = (0, import_react57.useState)(Er(re, oe ?? [])), [ve, rt] = (0, import_react57.useState)(Ur(X, J ?? [])), [Ke, Ct] = (0, import_react57.useState)(H), [Ge, Tt] = (0, import_react57.useState)(O), xt = o(() => {
    if (v === "new") {
      let { sorters: Go, filters: vc, pageSize: Dc, current: Uc, ...Jn } = (h == null ? void 0 : h.params) ?? {};
      return Jn;
    }
    let { sorter: Ie, filters: ot, pageSize: $r, current: zr, ...Or } = import_qs4.default.parse(U, { ignoreQueryPrefix: true });
    return Or;
  }, "getCurrentQueryParams"), bt = o(({ pagination: { current: Ie, pageSize: ot }, sorter: $r, filters: zr }) => {
    if (v === "new")
      return ce({ type: "path", options: { keepHash: true, keepQuery: true }, query: { ..._2 ? { current: Ie, pageSize: ot } : {}, sorters: $r, filters: zr, ...xt() } }) ?? "";
    let Or = import_qs4.default.parse(U == null ? void 0 : U.substring(1)), Go = vr({ pagination: { pageSize: ot, current: Ie }, sorters: ye ?? $r, filters: zr, ...Or });
    return `${L ?? ""}?${Go ?? ""}`;
  }, "createLinkForSyncWithLocation");
  (0, import_react57.useEffect)(() => {
    U === "" && (Ct(H), Tt(O), de(Er(re, oe ?? [])), rt(Ur(X, J ?? [])));
  }, [U]), (0, import_react57.useEffect)(() => {
    if (k2) {
      let Ie = xt();
      if (v === "new")
        ce({ type: "replace", options: { keepQuery: true }, query: { ..._2 ? { pageSize: Ge, current: Ke } : {}, sorters: differenceWith_default(ye, re, isEqual_default), filters: differenceWith_default(ve, X, isEqual_default) } });
      else {
        let ot = vr({ ..._2 ? { pagination: { pageSize: Ge, current: Ke } } : {}, sorters: differenceWith_default(ye, re, isEqual_default), filters: differenceWith_default(ve, X, isEqual_default), ...Ie });
        return be == null ? void 0 : be(`${L}?${ot}`, void 0, { shallow: true });
      }
    }
  }, [k2, Ke, Ge, ye, ve]);
  let rr = zt({ resource: Ne, hasPagination: r, pagination: { current: Ke, pageSize: Ge, mode: s == null ? void 0 : s.mode }, filters: I2 ? It(X, ve) : void 0, sorters: Q ? Dr(re, ye) : void 0, queryOptions: P, successNotification: d3, errorNotification: y2, meta: ne, metaData: ne, liveMode: F, liveParams: R2, onLiveEvent: f2, dataProviderName: T3 }), _n = o((Ie) => {
    rt((ot) => It(X, Ie, ot));
  }, "setFiltersAsMerge"), jn = o((Ie) => {
    rt(It(X, Ie));
  }, "setFiltersAsReplace"), Xn = o((Ie) => {
    rt((ot) => It(X, Ie(ot)));
  }, "setFiltersWithSetter"), Zn = o((Ie, ot = z) => {
    typeof Ie == "function" ? Xn(Ie) : ot === "replace" ? jn(Ie) : _n(Ie);
  }, "setFiltersFn"), Fo = o((Ie) => {
    de(() => Dr(re, Ie));
  }, "setSortWithUnion"), { elapsedTime: Yn } = pe({ isLoading: rr.isFetching, interval: b == null ? void 0 : b.interval, onInterval: b == null ? void 0 : b.onInterval });
  return { tableQueryResult: rr, tableQuery: rr, sorters: ye, setSorters: Fo, sorter: ye, setSorter: Fo, filters: ve, setFilters: Zn, current: Ke, setCurrent: Ct, pageSize: Ge, setPageSize: Tt, pageCount: Ge ? Math.ceil((((Ko = rr.data) == null ? void 0 : Ko.total) ?? 0) / Ge) : 1, createLinkForSyncWithLocation: bt, overtime: { elapsedTime: Yn } };
}
o(dC, "useTable");
var Ut = import_react59.default.createContext({});
var hn = o(({ create: e, get: t, update: r, children: s }) => import_react59.default.createElement(Ut.Provider, { value: { create: e, get: t, update: r } }, s), "AuditLogContextProvider");
var Je = o(({ logMutationOptions: e, renameMutationOptions: t } = {}) => {
  let r = useQueryClient(), s = (0, import_react58.useContext)(Ut), { keys: n, preferLegacyKeys: a } = Z(), i2 = ie(), { resources: p3 } = (0, import_react58.useContext)(Rt), { data: c2, refetch: u, isLoading: l2 } = oo({ v3LegacyAuthProviderCompatible: !!(i2 != null && i2.isLegacy), queryOptions: { enabled: !!(s != null && s.create) } }), m2 = useMutation(async (d3) => {
    var f2, R2, M, w, T3;
    let y2 = Ee(d3.resource, p3), P = S((f2 = y2 == null ? void 0 : y2.meta) == null ? void 0 : f2.audit, (R2 = y2 == null ? void 0 : y2.options) == null ? void 0 : R2.audit, (w = (M = y2 == null ? void 0 : y2.options) == null ? void 0 : M.auditLog) == null ? void 0 : w.permissions);
    if (P && !_r(P, d3.action))
      return;
    let C2;
    return l2 && (s != null && s.create) && (C2 = await u()), await ((T3 = s.create) == null ? void 0 : T3.call(s, { ...d3, author: c2 ?? (C2 == null ? void 0 : C2.data) }));
  }, { mutationKey: n().audit().action("log").get(), ...e, meta: { ...e == null ? void 0 : e.meta, ...k("useLog", a) } }), g2 = useMutation(async (d3) => {
    var y2;
    return await ((y2 = s.update) == null ? void 0 : y2.call(s, d3));
  }, { onSuccess: (d3) => {
    d3 != null && d3.resource && r.invalidateQueries(n().audit().resource((d3 == null ? void 0 : d3.resource) ?? "").action("list").get(a));
  }, mutationKey: n().audit().action("rename").get(), ...t, meta: { ...t == null ? void 0 : t.meta, ...k("useLog", a) } });
  return { log: m2, rename: g2 };
}, "useLog");
var kC = o(({ resource: e, action: t, meta: r, author: s, metaData: n, queryOptions: a }) => {
  let { get: i2 } = (0, import_react60.useContext)(Ut), { keys: p3, preferLegacyKeys: c2 } = Z();
  return useQuery({ queryKey: p3().audit().resource(e).action("list").params(r).get(c2), queryFn: () => (i2 == null ? void 0 : i2({ resource: e, action: t, author: s, meta: r, metaData: n })) ?? Promise.resolve([]), enabled: typeof i2 < "u", ...a, retry: false, meta: { ...a == null ? void 0 : a.meta, ...k("useLogList", c2, e) } });
}, "useLogList");
var jC = o(({ meta: e = {} } = {}) => {
  let t = se(), { i18nProvider: r } = (0, import_react61.useContext)(Xe), s = Te(), n = $(), { resources: a, resource: i2, action: p3 } = Y(), { options: { textTransformers: c2 } } = ge(), u = [];
  if (!(i2 != null && i2.name))
    return { breadcrumbs: u };
  let l2 = o((m2) => {
    var d3, y2, P, C2, f2, R2;
    let g2 = typeof m2 == "string" ? Ee(m2, a, t === "legacy") ?? { name: m2 } : m2;
    if (g2) {
      let M = S((d3 = g2 == null ? void 0 : g2.meta) == null ? void 0 : d3.parent, g2 == null ? void 0 : g2.parentName);
      M && l2(M);
      let w = Se(g2, a, t === "legacy").find((x) => x.action === "list"), T3 = (y2 = w == null ? void 0 : w.resource) != null && y2.list ? w == null ? void 0 : w.route : void 0, b = T3 ? t === "legacy" ? T3 : We(T3, g2 == null ? void 0 : g2.meta, s, e) : void 0;
      u.push({ label: S((P = g2.meta) == null ? void 0 : P.label, (C2 = g2.options) == null ? void 0 : C2.label) ?? n(`${g2.name}.${g2.name}`, c2.humanize(g2.name)), href: b, icon: S((f2 = g2.meta) == null ? void 0 : f2.icon, (R2 = g2.options) == null ? void 0 : R2.icon, g2.icon) });
    }
  }, "addBreadcrumb");
  if (l2(i2), p3 && p3 !== "list") {
    let m2 = `actions.${p3}`, g2 = n(m2);
    typeof r < "u" && g2 === m2 ? ((0, import_warn_once6.default)(true, `[useBreadcrumb]: Breadcrumb missing translate key for the "${p3}" action. Please add "actions.${p3}" key to your translation file.
For more information, see https://refine.dev/docs/api-reference/core/hooks/useBreadcrumb/#i18n-support`), u.push({ label: n(`buttons.${p3}`, c2.humanize(p3)) })) : u.push({ label: n(m2, c2.humanize(p3)) });
  }
  return { breadcrumbs: u };
}, "useBreadcrumb");
var Ft = o((e, t, r = false) => {
  let s = [], n = Oe(e, t);
  for (; n; )
    s.push(n), n = Oe(n, t);
  return s.reverse(), `/${[...s, e].map((i2) => ke((r ? i2.route : void 0) ?? i2.identifier ?? i2.name)).join("/").replace(/^\//, "")}`;
}, "createResourceKey");
var vn = o((e, t = false) => {
  let r = { item: { name: "__root__" }, children: {} };
  e.forEach((n) => {
    let a = [], i2 = Oe(n, e);
    for (; i2; )
      a.push(i2), i2 = Oe(i2, e);
    a.reverse();
    let p3 = r;
    a.forEach((u) => {
      let l2 = (t ? u.route : void 0) ?? u.identifier ?? u.name;
      p3.children[l2] || (p3.children[l2] = { item: u, children: {} }), p3 = p3.children[l2];
    });
    let c2 = (t ? n.route : void 0) ?? n.identifier ?? n.name;
    p3.children[c2] || (p3.children[c2] = { item: n, children: {} });
  });
  let s = o((n) => {
    let a = [];
    return Object.keys(n.children).forEach((i2) => {
      let p3 = Ft(n.children[i2].item, e, t), c2 = { ...n.children[i2].item, key: p3, children: s(n.children[i2]) };
      a.push(c2);
    }), a;
  }, "flatten");
  return s(r);
}, "createTree");
var Dn = o((e) => e.split("?")[0].split("#")[0].replace(/(.+)(\/$)/, "$1"), "getCleanPath");
var Qu = o(({ meta: e, hideOnMissingParameter: t = true } = { hideOnMissingParameter: true }) => {
  let r = $(), s = Dt(), n = se(), { resource: a, resources: i2 } = Y(), { pathname: p3 } = Te(), { useLocation: c2 } = le(), { pathname: u } = c2(), l2 = Pt(), g2 = `/${((n === "legacy" ? Dn(u) : p3 ? Dn(p3) : void 0) ?? "").replace(/^\//, "")}`, d3 = a ? Ft(a, i2, n === "legacy") : g2 ?? "", y2 = import_react62.default.useMemo(() => {
    if (!a)
      return [];
    let f2 = Oe(a, i2), R2 = [Ft(a, i2)];
    for (; f2; )
      R2.push(Ft(f2, i2)), f2 = Oe(f2, i2);
    return R2;
  }, []), P = import_react62.default.useCallback((f2) => {
    var M, w, T3, b, x, k2;
    if ((((M = f2 == null ? void 0 : f2.meta) == null ? void 0 : M.hide) ?? ((w = f2 == null ? void 0 : f2.options) == null ? void 0 : w.hide)) || !(f2 != null && f2.list) && f2.children.length === 0)
      return;
    let R2 = f2.list ? s({ resource: f2, action: "list", legacy: n === "legacy", meta: e }) : void 0;
    if (!(t && R2 && R2.match(/(\/|^):(.+?)(\/|$){1}/)))
      return { ...f2, route: R2, icon: S((T3 = f2.meta) == null ? void 0 : T3.icon, (b = f2.options) == null ? void 0 : b.icon, f2.icon), label: S((x = f2 == null ? void 0 : f2.meta) == null ? void 0 : x.label, (k2 = f2 == null ? void 0 : f2.options) == null ? void 0 : k2.label) ?? r(`${f2.name}.${f2.name}`, l2(f2.name, "plural")) };
  }, [n, e, s, r, t]), C2 = import_react62.default.useMemo(() => {
    let f2 = vn(i2, n === "legacy"), R2 = o((M) => M.flatMap((w) => {
      let T3 = R2(w.children), b = P({ ...w, children: T3 });
      return b ? [b] : [];
    }), "prepare");
    return R2(f2);
  }, [i2, n, P]);
  return { defaultOpenKeys: y2, selectedKey: d3, menuItems: C2 };
}, "useMenu");
var ue = o(() => {
  let { params: e } = Te();
  return o(({ resource: r, meta: s } = {}) => {
    let { meta: n } = kt(r) ?? { meta: {} }, { filters: a, sorters: i2, current: p3, pageSize: c2, ...u } = e ?? {};
    return { ...n, ...u, ...s };
  }, "getMetaFn");
}, "useMeta");
var At = o(() => {
  let { options: e } = import_react63.default.useContext(Qe);
  return e;
}, "useRefineOptions");
var Un = o((e) => {
  let t = se(), { useParams: r } = le(), s = Te(), n = r(), a = t === "legacy" ? n.id : s.id;
  return e ?? a;
}, "useId");
var En = o((e) => {
  let t = se(), { useParams: r } = le(), s = Te(), n = r(), a = t === "legacy" ? n.action : s.action;
  return e ?? a;
}, "useAction");
function qe(e) {
  let { select: t, identifier: r } = Y(), s = (e == null ? void 0 : e.resource) ?? r, { identifier: n = void 0, resource: a = void 0 } = s ? t(s, true) : {}, i2 = r === n, p3 = Un(), c2 = En(e == null ? void 0 : e.action), u = import_react64.default.useMemo(() => i2 ? (e == null ? void 0 : e.id) ?? p3 : e == null ? void 0 : e.id, [i2, e == null ? void 0 : e.id, p3]), [l2, m2] = import_react64.default.useState(u);
  import_react64.default.useEffect(() => m2(u), [u]);
  let g2 = import_react64.default.useMemo(() => !i2 && !(e != null && e.action) ? "create" : c2 === "edit" || c2 === "clone" ? c2 : "create", [c2, i2, e == null ? void 0 : e.action]);
  return { id: l2, setId: m2, resource: a, action: c2, identifier: n, formAction: g2 };
}
o(qe, "useResourceParams");
function Br({ type: e }) {
  let t = $(), { textTransformers: { humanize: r } } = At(), s = `buttons.${e}`, n = r(e);
  return { label: t(s, n) };
}
o(Br, "useActionableButton");
var Kr = o((e) => {
  var u, l2, m2;
  let t = $(), r = import_react66.default.useContext(ct), s = ((u = e.accessControl) == null ? void 0 : u.enabled) ?? r.options.buttons.enableAccessControl, n = ((l2 = e.accessControl) == null ? void 0 : l2.hideIfUnauthorized) ?? r.options.buttons.hideIfUnauthorized, { data: a } = Ar({ resource: (m2 = e.resource) == null ? void 0 : m2.name, action: e.action === "clone" ? "create" : e.action, params: { id: e.id, resource: e.resource }, queryOptions: { enabled: s } }), i2 = import_react66.default.useMemo(() => a != null && a.can ? "" : a != null && a.reason ? a.reason : t("buttons.notAccessTitle", "You don't have permission to access"), [a == null ? void 0 : a.can, a == null ? void 0 : a.reason, t]), p3 = s && n && !(a != null && a.can), c2 = (a == null ? void 0 : a.can) === false;
  return { title: i2, hidden: p3, disabled: c2, canAccess: a };
}, "useButtonCanAccess");
function Qt(e) {
  var R2;
  let t = Pe(), r = se(), s = yt(), { Link: n } = le(), a = $(), i2 = Pt(), { textTransformers: { humanize: p3 } } = At(), { id: c2, resource: u, identifier: l2 } = qe({ resource: e.resource, id: e.action === "create" ? void 0 : e.id }), { canAccess: m2, title: g2, hidden: d3, disabled: y2 } = Kr({ action: e.action, accessControl: e.accessControl, id: c2, resource: u }), P = r === "legacy" ? n : s, C2 = import_react65.default.useMemo(() => {
    if (!u)
      return "";
    switch (e.action) {
      case "create":
      case "list":
        return t[`${e.action}Url`](u, e.meta);
      default:
        return c2 ? t[`${e.action}Url`](u, c2, e.meta) : "";
    }
  }, [u, c2, e.meta, t[`${e.action}Url`]]), f2 = e.action === "list" ? a(`${l2 ?? e.resource}.titles.list`, i2(((R2 = u == null ? void 0 : u.meta) == null ? void 0 : R2.label) ?? (u == null ? void 0 : u.label) ?? l2 ?? e.resource, "plural")) : a(`buttons.${e.action}`, p3(e.action));
  return { to: C2, label: f2, title: g2, disabled: y2, hidden: d3, canAccess: m2, LinkComponent: P };
}
o(Qt, "useNavigationButton");
function Bu(e) {
  let t = $(), { mutate: r, isLoading: s, variables: n } = xo(), { setWarnWhen: a } = vt(), { mutationMode: i2 } = _e(e.mutationMode), { id: p3, resource: c2, identifier: u } = qe({ resource: e.resource, id: e.id }), { title: l2, disabled: m2, hidden: g2, canAccess: d3 } = Kr({ action: "delete", accessControl: e.accessControl, id: p3, resource: c2 }), y2 = t("buttons.delete", "Delete"), P = t("buttons.delete", "Delete"), C2 = t("buttons.confirm", "Are you sure?"), f2 = t("buttons.cancel", "Cancel"), R2 = p3 === (n == null ? void 0 : n.id) && s;
  return { label: y2, title: l2, hidden: g2, disabled: m2, canAccess: d3, loading: R2, confirmOkLabel: P, cancelLabel: f2, confirmTitle: C2, onConfirm: o(() => {
    p3 && u && (a(false), r({ id: p3, resource: u, mutationMode: i2, successNotification: e.successNotification, errorNotification: e.errorNotification, meta: e.meta, metaData: e.meta, dataProviderName: e.dataProviderName, invalidates: e.invalidates }, { onSuccess: e.onSuccess }));
  }, "onConfirm") };
}
o(Bu, "useDeleteButton");
function Gu(e) {
  let t = $(), { keys: r, preferLegacyKeys: s } = Z(), n = useQueryClient(), a = Ae(), { identifier: i2, id: p3 } = qe({ resource: e.resource, id: e.id }), { resources: c2 } = Y(), u = !!n.isFetching({ queryKey: r().data(ee(i2, e.dataProviderName, c2)).resource(i2).action("one").get(s) }), l2 = o(() => {
    a({ id: p3, invalidates: ["detail"], dataProviderName: e.dataProviderName, resource: i2 });
  }, "onClick"), m2 = t("buttons.refresh", "Refresh");
  return { onClick: l2, label: m2, loading: u };
}
o(Gu, "useRefreshButton");
var Uv = o((e) => Qt({ ...e, action: "show" }), "useShowButton");
var Ev = o((e) => Qt({ ...e, action: "edit" }), "useEditButton");
var Lv = o((e) => Qt({ ...e, action: "clone" }), "useCloneButton");
var Mv = o((e) => Qt({ ...e, action: "create" }), "useCreateButton");
var wv = o((e) => Qt({ ...e, action: "list" }), "useListButton");
var Iv = o(() => Br({ type: "save" }), "useSaveButton");
var Sv = o(() => Br({ type: "export" }), "useExportButton");
var Av = o(() => Br({ type: "import" }), "useImportButton");
var $u = o(() => {
  let [e, t] = (0, import_react2.useState)(), r = $(), { push: s } = Pe(), n = Le(), a = se(), { resource: i2, action: p3 } = Y();
  return (0, import_react2.useEffect)(() => {
    i2 && p3 && t(r("pages.error.info", { action: p3, resource: i2.name }, `You may have forgotten to add the "${p3}" component to "${i2.name}" resource.`));
  }, [i2, p3]), import_react2.default.createElement(import_react2.default.Fragment, null, import_react2.default.createElement("h1", null, r("pages.error.404", void 0, "Sorry, the page you visited does not exist.")), e && import_react2.default.createElement("p", null, e), import_react2.default.createElement("button", { onClick: () => {
    a === "legacy" ? s("/") : n({ to: "/" });
  } }, r("pages.error.backHome", void 0, "Back Home")));
}, "ErrorComponent");
var Xr = o(() => {
  let [e, t] = (0, import_react67.useState)(""), [r, s] = (0, import_react67.useState)(""), n = $(), a = ie(), { mutate: i2 } = $t({ v3LegacyAuthProviderCompatible: !!(a != null && a.isLegacy) });
  return import_react67.default.createElement(import_react67.default.Fragment, null, import_react67.default.createElement("h1", null, n("pages.login.title", "Sign in your account")), import_react67.default.createElement("form", { onSubmit: (p3) => {
    p3.preventDefault(), i2({ username: e, password: r });
  } }, import_react67.default.createElement("table", null, import_react67.default.createElement("tbody", null, import_react67.default.createElement("tr", null, import_react67.default.createElement("td", null, n("pages.login.username", void 0, "username"), ":"), import_react67.default.createElement("td", null, import_react67.default.createElement("input", { type: "text", size: 20, autoCorrect: "off", spellCheck: false, autoCapitalize: "off", autoFocus: true, required: true, value: e, onChange: (p3) => t(p3.target.value) }))), import_react67.default.createElement("tr", null, import_react67.default.createElement("td", null, n("pages.login.password", void 0, "password"), ":"), import_react67.default.createElement("td", null, import_react67.default.createElement("input", { type: "password", required: true, size: 20, value: r, onChange: (p3) => s(p3.target.value) }))))), import_react67.default.createElement("br", null), import_react67.default.createElement("input", { type: "submit", value: "login" })));
}, "LoginPage");
var wn = o(({ providers: e, registerLink: t, forgotPasswordLink: r, rememberMe: s, contentProps: n, wrapperProps: a, renderContent: i2, formProps: p3, title: c2 = void 0, hideForm: u }) => {
  let l2 = se(), m2 = yt(), { Link: g2 } = le(), d3 = l2 === "legacy" ? g2 : m2, [y2, P] = (0, import_react69.useState)(""), [C2, f2] = (0, import_react69.useState)(""), [R2, M] = (0, import_react69.useState)(false), w = $(), T3 = ie(), { mutate: b } = $t({ v3LegacyAuthProviderCompatible: !!(T3 != null && T3.isLegacy) }), x = o((v, V) => import_react69.default.createElement(d3, { to: v }, V), "renderLink"), k2 = o(() => e ? e.map((v) => import_react69.default.createElement("div", { key: v.name, style: { display: "flex", alignItems: "center", justifyContent: "center", marginBottom: "1rem" } }, import_react69.default.createElement("button", { onClick: () => b({ providerName: v.name }), style: { display: "flex", alignItems: "center" } }, v == null ? void 0 : v.icon, v.label ?? import_react69.default.createElement("label", null, v.label)))) : null, "renderProviders"), F = import_react69.default.createElement("div", { ...n }, import_react69.default.createElement("h1", { style: { textAlign: "center" } }, w("pages.login.title", "Sign in to your account")), k2(), !u && import_react69.default.createElement(import_react69.default.Fragment, null, import_react69.default.createElement("hr", null), import_react69.default.createElement("form", { onSubmit: (v) => {
    v.preventDefault(), b({ email: y2, password: C2, remember: R2 });
  }, ...p3 }, import_react69.default.createElement("div", { style: { display: "flex", flexDirection: "column", padding: 25 } }, import_react69.default.createElement("label", { htmlFor: "email-input" }, w("pages.login.fields.email", "Email")), import_react69.default.createElement("input", { id: "email-input", name: "email", type: "text", size: 20, autoCorrect: "off", spellCheck: false, autoCapitalize: "off", required: true, value: y2, onChange: (v) => P(v.target.value) }), import_react69.default.createElement("label", { htmlFor: "password-input" }, w("pages.login.fields.password", "Password")), import_react69.default.createElement("input", { id: "password-input", type: "password", name: "password", required: true, size: 20, value: C2, onChange: (v) => f2(v.target.value) }), s ?? import_react69.default.createElement(import_react69.default.Fragment, null, import_react69.default.createElement("label", { htmlFor: "remember-me-input" }, w("pages.login.buttons.rememberMe", "Remember me"), import_react69.default.createElement("input", { id: "remember-me-input", name: "remember", type: "checkbox", size: 20, checked: R2, value: R2.toString(), onChange: () => {
    M(!R2);
  } }))), import_react69.default.createElement("br", null), r ?? x("/forgot-password", w("pages.login.buttons.forgotPassword", "Forgot password?")), import_react69.default.createElement("input", { type: "submit", value: w("pages.login.signin", "Sign in") }), t ?? import_react69.default.createElement("span", null, w("pages.login.buttons.noAccount", "Don’t have an account?"), " ", x("/register", w("pages.login.register", "Sign up")))))), t !== false && u && import_react69.default.createElement("div", { style: { textAlign: "center" } }, w("pages.login.buttons.noAccount", "Don’t have an account?"), " ", x("/register", w("pages.login.register", "Sign up"))));
  return import_react69.default.createElement("div", { ...a }, i2 ? i2(F, c2) : F);
}, "LoginPage");
var Sn = o(({ providers: e, loginLink: t, wrapperProps: r, contentProps: s, renderContent: n, formProps: a, title: i2 = void 0, hideForm: p3 }) => {
  let c2 = se(), u = yt(), { Link: l2 } = le(), m2 = c2 === "legacy" ? l2 : u, [g2, d3] = (0, import_react70.useState)(""), [y2, P] = (0, import_react70.useState)(""), C2 = $(), f2 = ie(), { mutate: R2, isLoading: M } = io({ v3LegacyAuthProviderCompatible: !!(f2 != null && f2.isLegacy) }), w = o((x, k2) => import_react70.default.createElement(m2, { to: x }, k2), "renderLink"), T3 = o(() => e ? e.map((x) => import_react70.default.createElement("div", { key: x.name, style: { display: "flex", alignItems: "center", justifyContent: "center", marginBottom: "1rem" } }, import_react70.default.createElement("button", { onClick: () => R2({ providerName: x.name }), style: { display: "flex", alignItems: "center" } }, x == null ? void 0 : x.icon, x.label ?? import_react70.default.createElement("label", null, x.label)))) : null, "renderProviders"), b = import_react70.default.createElement("div", { ...s }, import_react70.default.createElement("h1", { style: { textAlign: "center" } }, C2("pages.register.title", "Sign up for your account")), T3(), !p3 && import_react70.default.createElement(import_react70.default.Fragment, null, import_react70.default.createElement("hr", null), import_react70.default.createElement("form", { onSubmit: (x) => {
    x.preventDefault(), R2({ email: g2, password: y2 });
  }, ...a }, import_react70.default.createElement("div", { style: { display: "flex", flexDirection: "column", padding: 25 } }, import_react70.default.createElement("label", { htmlFor: "email-input" }, C2("pages.register.fields.email", "Email")), import_react70.default.createElement("input", { id: "email-input", name: "email", type: "email", size: 20, autoCorrect: "off", spellCheck: false, autoCapitalize: "off", required: true, value: g2, onChange: (x) => d3(x.target.value) }), import_react70.default.createElement("label", { htmlFor: "password-input" }, C2("pages.register.fields.password", "Password")), import_react70.default.createElement("input", { id: "password-input", name: "password", type: "password", required: true, size: 20, value: y2, onChange: (x) => P(x.target.value) }), import_react70.default.createElement("input", { type: "submit", value: C2("pages.register.buttons.submit", "Sign up"), disabled: M }), t ?? import_react70.default.createElement(import_react70.default.Fragment, null, import_react70.default.createElement("span", null, C2("pages.login.buttons.haveAccount", "Have an account?"), " ", w("/login", C2("pages.login.signin", "Sign in"))))))), t !== false && p3 && import_react70.default.createElement("div", { style: { textAlign: "center" } }, C2("pages.login.buttons.haveAccount", "Have an account?"), " ", w("/login", C2("pages.login.signin", "Sign in"))));
  return import_react70.default.createElement("div", { ...r }, n ? n(b, i2) : b);
}, "RegisterPage");
var An = o(({ loginLink: e, wrapperProps: t, contentProps: r, renderContent: s, formProps: n, title: a = void 0 }) => {
  let i2 = $(), p3 = se(), c2 = yt(), { Link: u } = le(), l2 = p3 === "legacy" ? u : c2, [m2, g2] = (0, import_react71.useState)(""), { mutate: d3, isLoading: y2 } = co(), P = o((f2, R2) => import_react71.default.createElement(l2, { to: f2 }, R2), "renderLink"), C2 = import_react71.default.createElement("div", { ...r }, import_react71.default.createElement("h1", { style: { textAlign: "center" } }, i2("pages.forgotPassword.title", "Forgot your password?")), import_react71.default.createElement("hr", null), import_react71.default.createElement("form", { onSubmit: (f2) => {
    f2.preventDefault(), d3({ email: m2 });
  }, ...n }, import_react71.default.createElement("div", { style: { display: "flex", flexDirection: "column", padding: 25 } }, import_react71.default.createElement("label", { htmlFor: "email-input" }, i2("pages.forgotPassword.fields.email", "Email")), import_react71.default.createElement("input", { id: "email-input", name: "email", type: "mail", autoCorrect: "off", spellCheck: false, autoCapitalize: "off", required: true, value: m2, onChange: (f2) => g2(f2.target.value) }), import_react71.default.createElement("input", { type: "submit", disabled: y2, value: i2("pages.forgotPassword.buttons.submit", "Send reset instructions") }), import_react71.default.createElement("br", null), e ?? import_react71.default.createElement("span", null, i2("pages.register.buttons.haveAccount", "Have an account? "), " ", P("/login", i2("pages.login.signin", "Sign in"))))));
  return import_react71.default.createElement("div", { ...t }, s ? s(C2, a) : C2);
}, "ForgotPasswordPage");
var Fn = o(({ wrapperProps: e, contentProps: t, renderContent: r, formProps: s, title: n = void 0 }) => {
  let a = $(), i2 = ie(), { mutate: p3, isLoading: c2 } = lo({ v3LegacyAuthProviderCompatible: !!(i2 != null && i2.isLegacy) }), [u, l2] = (0, import_react72.useState)(""), [m2, g2] = (0, import_react72.useState)(""), d3 = import_react72.default.createElement("div", { ...t }, import_react72.default.createElement("h1", { style: { textAlign: "center" } }, a("pages.updatePassword.title", "Update Password")), import_react72.default.createElement("hr", null), import_react72.default.createElement("form", { onSubmit: (y2) => {
    y2.preventDefault(), p3({ password: u, confirmPassword: m2 });
  }, ...s }, import_react72.default.createElement("div", { style: { display: "flex", flexDirection: "column", padding: 25 } }, import_react72.default.createElement("label", { htmlFor: "password-input" }, a("pages.updatePassword.fields.password", "New Password")), import_react72.default.createElement("input", { id: "password-input", name: "password", type: "password", required: true, size: 20, value: u, onChange: (y2) => l2(y2.target.value) }), import_react72.default.createElement("label", { htmlFor: "confirm-password-input" }, a("pages.updatePassword.fields.confirmPassword", "Confirm New Password")), import_react72.default.createElement("input", { id: "confirm-password-input", name: "confirmPassword", type: "password", required: true, size: 20, value: m2, onChange: (y2) => g2(y2.target.value) }), import_react72.default.createElement("input", { type: "submit", disabled: c2, value: a("pages.updatePassword.buttons.submit", "Update") }))));
  return import_react72.default.createElement("div", { ...e }, r ? r(d3, n) : d3);
}, "UpdatePasswordPage");
var Ou = o((e) => {
  let { type: t } = e;
  return import_react68.default.createElement(import_react68.default.Fragment, null, o(() => {
    switch (t) {
      case "register":
        return import_react68.default.createElement(Sn, { ...e });
      case "forgotPassword":
        return import_react68.default.createElement(An, { ...e });
      case "updatePassword":
        return import_react68.default.createElement(Fn, { ...e });
      default:
        return import_react68.default.createElement(wn, { ...e });
    }
  }, "renderView")());
}, "AuthPage");
var So = o(() => import_react73.default.createElement(import_react73.default.Fragment, null, import_react73.default.createElement("h1", null, "Welcome on board"), import_react73.default.createElement("p", null, "Your configuration is completed."), import_react73.default.createElement("p", null, "Now you can get started by adding your resources to the", " ", import_react73.default.createElement("code", null, "`resources`"), " property of ", import_react73.default.createElement("code", null, "`<Refine>`")), import_react73.default.createElement("div", { style: { display: "flex", gap: 8 } }, import_react73.default.createElement("a", { href: "https://refine.dev", target: "_blank", rel: "noreferrer" }, import_react73.default.createElement("button", null, "Documentation")), import_react73.default.createElement("a", { href: "https://refine.dev/examples", target: "_blank", rel: "noreferrer" }, import_react73.default.createElement("button", null, "Examples")), import_react73.default.createElement("a", { href: "https://discord.gg/refine", target: "_blank", rel: "noreferrer" }, import_react73.default.createElement("button", null, "Community")))), "ReadyPage");
var ju = [{ title: "Documentation", description: "Learn about the technical details of using Refine in your projects.", link: "https://refine.dev/docs", iconUrl: "https://refine.ams3.cdn.digitaloceanspaces.com/welcome-page/book.svg" }, { title: "Tutorial", description: "Learn how to use Refine by building a fully-functioning CRUD app, from scratch to full launch.", link: "https://refine.dev/tutorial", iconUrl: "https://refine.ams3.cdn.digitaloceanspaces.com/welcome-page/hat.svg" }, { title: "Templates", description: "Explore a range of pre-built templates, perfect everything from admin panels to dashboards and CRMs.", link: "https://refine.dev/templates", iconUrl: "https://refine.ams3.cdn.digitaloceanspaces.com/welcome-page/application.svg" }, { title: "Community", description: "Join our Discord community and keep up with the latest news.", link: "https://discord.gg/refine", iconUrl: "https://refine.ams3.cdn.digitaloceanspaces.com/welcome-page/discord.svg" }];
var Qn = o(() => {
  let e = Pr("(max-width: 1010px)"), t = Pr("(max-width: 650px)"), r = o(() => t ? "1, 280px" : e ? "2, 280px" : "4, 1fr", "getGridTemplateColumns"), s = o(() => t ? "32px" : e ? "40px" : "48px", "getHeaderFontSize"), n = o(() => t ? "16px" : e ? "20px" : "24px", "getSubHeaderFontSize");
  return import_react75.default.createElement("div", { style: { position: "fixed", zIndex: 10, inset: 0, overflow: "auto", width: "100dvw", height: "100dvh" } }, import_react75.default.createElement("div", { style: { overflow: "hidden", position: "relative", backgroundSize: "cover", backgroundRepeat: "no-repeat", background: t ? "url(https://refine.ams3.cdn.digitaloceanspaces.com/website/static/assets/landing-noise.webp), radial-gradient(88.89% 50% at 50% 100%, rgba(38, 217, 127, 0.10) 0%, rgba(38, 217, 127, 0.00) 100%), radial-gradient(88.89% 50% at 50% 0%, rgba(71, 235, 235, 0.15) 0%, rgba(71, 235, 235, 0.00) 100%), #1D1E30" : e ? "url(https://refine.ams3.cdn.digitaloceanspaces.com/website/static/assets/landing-noise.webp), radial-gradient(66.67% 50% at 50% 100%, rgba(38, 217, 127, 0.10) 0%, rgba(38, 217, 127, 0.00) 100%), radial-gradient(66.67% 50% at 50% 0%, rgba(71, 235, 235, 0.15) 0%, rgba(71, 235, 235, 0.00) 100%), #1D1E30" : "url(https://refine.ams3.cdn.digitaloceanspaces.com/website/static/assets/landing-noise.webp), radial-gradient(35.56% 50% at 50% 100%, rgba(38, 217, 127, 0.12) 0%, rgba(38, 217, 127, 0) 100%), radial-gradient(35.56% 50% at 50% 0%, rgba(71, 235, 235, 0.18) 0%, rgba(71, 235, 235, 0) 100%), #1D1E30", minHeight: "100%", minWidth: "100%", fontFamily: "Arial", color: "#FFFFFF" } }, import_react75.default.createElement("div", { style: { zIndex: 2, position: "absolute", width: t ? "400px" : "800px", height: "552px", opacity: "0.5", background: "url(https://refine.ams3.cdn.digitaloceanspaces.com/assets/welcome-page-hexagon.png)", backgroundRepeat: "no-repeat", backgroundSize: "contain", top: "0", left: "50%", transform: "translateX(-50%)" } }), import_react75.default.createElement("div", { style: { height: t ? "40px" : "80px" } }), import_react75.default.createElement("div", { style: { display: "flex", justifyContent: "center" } }, import_react75.default.createElement("div", { style: { backgroundRepeat: "no-repeat", backgroundSize: t ? "112px 58px" : "224px 116px", backgroundImage: "url(https://refine.ams3.cdn.digitaloceanspaces.com/assets/refine-logo.svg)", width: t ? 112 : 224, height: t ? 58 : 116 } })), import_react75.default.createElement("div", { style: { height: t ? "120px" : e ? "200px" : "30vh", minHeight: t ? "120px" : "200px" } }), import_react75.default.createElement("div", { style: { display: "flex", flexDirection: "column", gap: "16px", textAlign: "center" } }, import_react75.default.createElement("h1", { style: { fontSize: s(), fontWeight: 700, margin: "0px" } }, "Welcome Aboard!"), import_react75.default.createElement("h4", { style: { fontSize: n(), fontWeight: 400, margin: "0px" } }, "Your configuration is completed.")), import_react75.default.createElement("div", { style: { height: "64px" } }), import_react75.default.createElement("div", { style: { display: "grid", gridTemplateColumns: `repeat(${r()})`, justifyContent: "center", gap: "48px", paddingRight: "16px", paddingLeft: "16px", paddingBottom: "32px", maxWidth: "976px", margin: "auto" } }, ju.map((a) => import_react75.default.createElement(Xu, { key: `welcome-page-${a.title}`, card: a })))));
}, "ConfigSuccessPage");
var Xu = o(({ card: e }) => {
  let { title: t, description: r, iconUrl: s, link: n } = e, [a, i2] = (0, import_react75.useState)(false);
  return import_react75.default.createElement("div", { style: { display: "flex", flexDirection: "column", gap: "16px" } }, import_react75.default.createElement("div", { style: { display: "flex", alignItems: "center" } }, import_react75.default.createElement("a", { onPointerEnter: () => i2(true), onPointerLeave: () => i2(false), style: { display: "flex", alignItems: "center", color: "#fff", textDecoration: "none" }, href: n }, import_react75.default.createElement("div", { style: { width: "16px", height: "16px", backgroundPosition: "center", backgroundSize: "contain", backgroundRepeat: "no-repeat", backgroundImage: `url(${s})` } }), import_react75.default.createElement("span", { style: { fontSize: "16px", fontWeight: 700, marginLeft: "13px", marginRight: "14px" } }, t), import_react75.default.createElement("svg", { style: { transition: "transform 0.5s ease-in-out, opacity 0.2s ease-in-out", ...a && { transform: "translateX(4px)", opacity: 1 } }, width: "12", height: "8", fill: "none", opacity: "0.5", xmlns: "http://www.w3.org/2000/svg" }, import_react75.default.createElement("path", { d: "M7.293.293a1 1 0 0 1 1.414 0l3 3a1 1 0 0 1 0 1.414l-3 3a1 1 0 0 1-1.414-1.414L8.586 5H1a1 1 0 0 1 0-2h7.586L7.293 1.707a1 1 0 0 1 0-1.414Z", fill: "#fff" })))), import_react75.default.createElement("span", { style: { fontSize: "12px", opacity: 0.5, lineHeight: "16px" } }, r));
}, "Card");
var Vn = o(() => import_react76.default.createElement("div", { style: { position: "fixed", zIndex: 11, inset: 0, overflow: "auto", width: "100dvw", height: "100dvh" } }, import_react76.default.createElement("div", { style: { width: "100%", height: "100%", display: "flex", justifyContent: "center", alignItems: "center", padding: "24px", background: "#14141FBF", backdropFilter: "blur(3px)" } }, import_react76.default.createElement("div", { style: { maxWidth: "640px", width: "100%", background: "#1D1E30", borderRadius: "16px", border: "1px solid #303450", boxShadow: "0px 0px 120px -24px #000000" } }, import_react76.default.createElement("div", { style: { padding: "16px 20px", borderBottom: "1px solid #303450", display: "flex", alignItems: "center", gap: "8px", position: "relative" } }, import_react76.default.createElement(Yu, { style: { position: "absolute", left: 0, top: 0 } }), import_react76.default.createElement("div", { style: { lineHeight: "24px", fontSize: "16px", color: "#FFFFFF", display: "flex", alignItems: "center", gap: "16px" } }, import_react76.default.createElement(Ju, null), import_react76.default.createElement("span", { style: { fontWeight: 400 } }, "Configuration Error"))), import_react76.default.createElement("div", { style: { padding: "20px", color: "#A3ADC2", lineHeight: "20px", fontSize: "14px", display: "flex", flexDirection: "column", gap: "20px" } }, import_react76.default.createElement("p", { style: { margin: 0, padding: 0, lineHeight: "28px", fontSize: "16px" } }, import_react76.default.createElement("code", { style: { display: "inline-block", background: "#30345080", padding: "0 4px", lineHeight: "24px", fontSize: "16px", borderRadius: "4px", color: "#FFFFFF" } }, "<Refine />"), " ", "is not initialized. Please make sure you have it mounted in your app and placed your components inside it."), import_react76.default.createElement("div", null, import_react76.default.createElement(Zu, null)))))), "ConfigErrorPage");
var Zu = o(() => import_react76.default.createElement("pre", { style: { display: "block", overflowX: "auto", borderRadius: "8px", fontSize: "14px", lineHeight: "24px", backgroundColor: "#14141F", color: "#E5ECF2", padding: "16px", margin: "0", maxHeight: "400px", overflow: "auto" } }, import_react76.default.createElement("span", { style: { color: "#FF7B72" } }, "import"), " ", "{", " Refine, WelcomePage", " ", "}", " ", import_react76.default.createElement("span", { style: { color: "#FF7B72" } }, "from"), " ", import_react76.default.createElement("span", { style: { color: "#A5D6FF" } }, '"@refinedev/core"'), ";", `
`, `
`, import_react76.default.createElement("span", { style: { color: "#FF7B72" } }, "export"), " ", import_react76.default.createElement("span", { style: { color: "#FF7B72" } }, "default"), " ", import_react76.default.createElement("span", null, import_react76.default.createElement("span", { style: { color: "#FF7B72" } }, "function"), " ", import_react76.default.createElement("span", { style: { color: "#FFA657" } }, "App"), "(", import_react76.default.createElement("span", { style: { color: "rgb(222, 147, 95)" } }), ")", " "), "{", `
`, "  ", import_react76.default.createElement("span", { style: { color: "#FF7B72" } }, "return"), " (", `
`, "    ", import_react76.default.createElement("span", null, import_react76.default.createElement("span", { style: { color: "#79C0FF" } }, "<", import_react76.default.createElement("span", { style: { color: "#79C0FF" } }, "Refine"), `
`, "      ", import_react76.default.createElement("span", { style: { color: "#E5ECF2", opacity: 0.6 } }, "// ", import_react76.default.createElement("span", null, "...")), `
`, "    ", ">"), `
`, "      ", import_react76.default.createElement("span", { style: { opacity: 0.6 } }, "{", "/* ... */", "}"), `
`, "      ", import_react76.default.createElement("span", { style: { color: "#79C0FF" } }, "<", import_react76.default.createElement("span", { style: { color: "#79C0FF" } }, "WelcomePage"), " />"), `
`, "      ", import_react76.default.createElement("span", { style: { opacity: 0.6 } }, "{", "/* ... */", "}"), `
`, "    ", import_react76.default.createElement("span", { style: { color: "#79C0FF" } }, "</", import_react76.default.createElement("span", { style: { color: "#79C0FF" } }, "Refine"), ">")), `
`, "  ", ");", `
`, "}"), "ExampleImplementation");
var Yu = o((e) => import_react76.default.createElement("svg", { xmlns: "http://www.w3.org/2000/svg", width: 204, height: 56, viewBox: "0 0 204 56", fill: "none", ...e }, import_react76.default.createElement("path", { fill: "url(#welcome-page-error-gradient-a)", d: "M12 0H0v12L12 0Z" }), import_react76.default.createElement("path", { fill: "url(#welcome-page-error-gradient-b)", d: "M28 0h-8L0 20v8L28 0Z" }), import_react76.default.createElement("path", { fill: "url(#welcome-page-error-gradient-c)", d: "M36 0h8L0 44v-8L36 0Z" }), import_react76.default.createElement("path", { fill: "url(#welcome-page-error-gradient-d)", d: "M60 0h-8L0 52v4h4L60 0Z" }), import_react76.default.createElement("path", { fill: "url(#welcome-page-error-gradient-e)", d: "M68 0h8L20 56h-8L68 0Z" }), import_react76.default.createElement("path", { fill: "url(#welcome-page-error-gradient-f)", d: "M92 0h-8L28 56h8L92 0Z" }), import_react76.default.createElement("path", { fill: "url(#welcome-page-error-gradient-g)", d: "M100 0h8L52 56h-8l56-56Z" }), import_react76.default.createElement("path", { fill: "url(#welcome-page-error-gradient-h)", d: "M124 0h-8L60 56h8l56-56Z" }), import_react76.default.createElement("path", { fill: "url(#welcome-page-error-gradient-i)", d: "M140 0h-8L76 56h8l56-56Z" }), import_react76.default.createElement("path", { fill: "url(#welcome-page-error-gradient-j)", d: "M132 0h8L84 56h-8l56-56Z" }), import_react76.default.createElement("path", { fill: "url(#welcome-page-error-gradient-k)", d: "M156 0h-8L92 56h8l56-56Z" }), import_react76.default.createElement("path", { fill: "url(#welcome-page-error-gradient-l)", d: "M164 0h8l-56 56h-8l56-56Z" }), import_react76.default.createElement("path", { fill: "url(#welcome-page-error-gradient-m)", d: "M188 0h-8l-56 56h8l56-56Z" }), import_react76.default.createElement("path", { fill: "url(#welcome-page-error-gradient-n)", d: "M204 0h-8l-56 56h8l56-56Z" }), import_react76.default.createElement("defs", null, import_react76.default.createElement("radialGradient", { id: "welcome-page-error-gradient-a", cx: 0, cy: 0, r: 1, gradientTransform: "scale(124)", gradientUnits: "userSpaceOnUse" }, import_react76.default.createElement("stop", { stopColor: "#FF4C4D", stopOpacity: 0.1 }), import_react76.default.createElement("stop", { offset: 1, stopColor: "#FF4C4D", stopOpacity: 0 })), import_react76.default.createElement("radialGradient", { id: "welcome-page-error-gradient-b", cx: 0, cy: 0, r: 1, gradientTransform: "scale(124)", gradientUnits: "userSpaceOnUse" }, import_react76.default.createElement("stop", { stopColor: "#FF4C4D", stopOpacity: 0.1 }), import_react76.default.createElement("stop", { offset: 1, stopColor: "#FF4C4D", stopOpacity: 0 })), import_react76.default.createElement("radialGradient", { id: "welcome-page-error-gradient-c", cx: 0, cy: 0, r: 1, gradientTransform: "scale(124)", gradientUnits: "userSpaceOnUse" }, import_react76.default.createElement("stop", { stopColor: "#FF4C4D", stopOpacity: 0.1 }), import_react76.default.createElement("stop", { offset: 1, stopColor: "#FF4C4D", stopOpacity: 0 })), import_react76.default.createElement("radialGradient", { id: "welcome-page-error-gradient-d", cx: 0, cy: 0, r: 1, gradientTransform: "scale(124)", gradientUnits: "userSpaceOnUse" }, import_react76.default.createElement("stop", { stopColor: "#FF4C4D", stopOpacity: 0.1 }), import_react76.default.createElement("stop", { offset: 1, stopColor: "#FF4C4D", stopOpacity: 0 })), import_react76.default.createElement("radialGradient", { id: "welcome-page-error-gradient-e", cx: 0, cy: 0, r: 1, gradientTransform: "scale(124)", gradientUnits: "userSpaceOnUse" }, import_react76.default.createElement("stop", { stopColor: "#FF4C4D", stopOpacity: 0.1 }), import_react76.default.createElement("stop", { offset: 1, stopColor: "#FF4C4D", stopOpacity: 0 })), import_react76.default.createElement("radialGradient", { id: "welcome-page-error-gradient-f", cx: 0, cy: 0, r: 1, gradientTransform: "scale(124)", gradientUnits: "userSpaceOnUse" }, import_react76.default.createElement("stop", { stopColor: "#FF4C4D", stopOpacity: 0.1 }), import_react76.default.createElement("stop", { offset: 1, stopColor: "#FF4C4D", stopOpacity: 0 })), import_react76.default.createElement("radialGradient", { id: "welcome-page-error-gradient-g", cx: 0, cy: 0, r: 1, gradientTransform: "scale(124)", gradientUnits: "userSpaceOnUse" }, import_react76.default.createElement("stop", { stopColor: "#FF4C4D", stopOpacity: 0.1 }), import_react76.default.createElement("stop", { offset: 1, stopColor: "#FF4C4D", stopOpacity: 0 })), import_react76.default.createElement("radialGradient", { id: "welcome-page-error-gradient-h", cx: 0, cy: 0, r: 1, gradientTransform: "scale(124)", gradientUnits: "userSpaceOnUse" }, import_react76.default.createElement("stop", { stopColor: "#FF4C4D", stopOpacity: 0.1 }), import_react76.default.createElement("stop", { offset: 1, stopColor: "#FF4C4D", stopOpacity: 0 })), import_react76.default.createElement("radialGradient", { id: "welcome-page-error-gradient-i", cx: 0, cy: 0, r: 1, gradientTransform: "scale(124)", gradientUnits: "userSpaceOnUse" }, import_react76.default.createElement("stop", { stopColor: "#FF4C4D", stopOpacity: 0.1 }), import_react76.default.createElement("stop", { offset: 1, stopColor: "#FF4C4D", stopOpacity: 0 })), import_react76.default.createElement("radialGradient", { id: "welcome-page-error-gradient-j", cx: 0, cy: 0, r: 1, gradientTransform: "scale(124)", gradientUnits: "userSpaceOnUse" }, import_react76.default.createElement("stop", { stopColor: "#FF4C4D", stopOpacity: 0.1 }), import_react76.default.createElement("stop", { offset: 1, stopColor: "#FF4C4D", stopOpacity: 0 })), import_react76.default.createElement("radialGradient", { id: "welcome-page-error-gradient-k", cx: 0, cy: 0, r: 1, gradientTransform: "scale(124)", gradientUnits: "userSpaceOnUse" }, import_react76.default.createElement("stop", { stopColor: "#FF4C4D", stopOpacity: 0.1 }), import_react76.default.createElement("stop", { offset: 1, stopColor: "#FF4C4D", stopOpacity: 0 })), import_react76.default.createElement("radialGradient", { id: "welcome-page-error-gradient-l", cx: 0, cy: 0, r: 1, gradientTransform: "scale(124)", gradientUnits: "userSpaceOnUse" }, import_react76.default.createElement("stop", { stopColor: "#FF4C4D", stopOpacity: 0.1 }), import_react76.default.createElement("stop", { offset: 1, stopColor: "#FF4C4D", stopOpacity: 0 })), import_react76.default.createElement("radialGradient", { id: "welcome-page-error-gradient-m", cx: 0, cy: 0, r: 1, gradientTransform: "scale(124)", gradientUnits: "userSpaceOnUse" }, import_react76.default.createElement("stop", { stopColor: "#FF4C4D", stopOpacity: 0.1 }), import_react76.default.createElement("stop", { offset: 1, stopColor: "#FF4C4D", stopOpacity: 0 })), import_react76.default.createElement("radialGradient", { id: "welcome-page-error-gradient-n", cx: 0, cy: 0, r: 1, gradientTransform: "scale(124)", gradientUnits: "userSpaceOnUse" }, import_react76.default.createElement("stop", { stopColor: "#FF4C4D", stopOpacity: 0.1 }), import_react76.default.createElement("stop", { offset: 1, stopColor: "#FF4C4D", stopOpacity: 0 })))), "ErrorGradient");
var Ju = o((e) => import_react76.default.createElement("svg", { xmlns: "http://www.w3.org/2000/svg", width: 16, height: 16, viewBox: "0 0 16 16", fill: "none", ...e }, import_react76.default.createElement("path", { fill: "#FF4C4D", fillRule: "evenodd", d: "M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16Z", clipRule: "evenodd" }), import_react76.default.createElement("path", { fill: "#fff", fillRule: "evenodd", d: "M7 8a1 1 0 1 0 2 0V5a1 1 0 1 0-2 0v3Zm0 3a1 1 0 1 1 2 0 1 1 0 0 1-2 0Z", clipRule: "evenodd" })), "ErrorIcon");
var qu = o(() => {
  let { __initialized: e } = ge();
  return import_react74.default.createElement(import_react74.default.Fragment, null, import_react74.default.createElement(Qn, null), !e && import_react74.default.createElement(Vn, null));
}, "WelcomePage");
var ec = "4.54.0";
var Nn = o(() => {
  var R2;
  let e = mo(), t = (0, import_react79.useContext)(Ut), { liveProvider: r } = (0, import_react79.useContext)(mt), s = (0, import_react79.useContext)(er), n = (0, import_react79.useContext)(Jt), { i18nProvider: a } = (0, import_react79.useContext)(Xe), i2 = (0, import_react79.useContext)(qt), p3 = (0, import_react79.useContext)(ct), { resources: c2 } = Y(), u = ge(), l2 = !!t.create || !!t.get || !!t.update, m2 = !!(r != null && r.publish) || !!(r != null && r.subscribe) || !!(r != null && r.unsubscribe), g2 = !!s.useHistory || !!s.Link || !!s.Prompt || !!s.useLocation || !!s.useParams, d3 = !!n, y2 = !!(a != null && a.changeLocale) || !!(a != null && a.getLocale) || !!(a != null && a.translate), P = !!i2.close || !!i2.open, C2 = !!p3.can, f2 = (R2 = u == null ? void 0 : u.options) == null ? void 0 : R2.projectId;
  return { providers: { auth: e, auditLog: l2, live: m2, router: g2, data: d3, i18n: y2, notification: P, accessControl: C2 }, version: ec, resourceCount: c2.length, projectId: f2 };
}, "useTelemetryData");
var tc = o((e) => {
  try {
    let t = JSON.stringify(e || {});
    return typeof btoa < "u" ? btoa(t) : Buffer.from(t).toString("base64");
  } catch {
    return;
  }
}, "encode");
var rc = o((e) => {
  let t = new Image();
  t.src = e;
}, "throughImage");
var oc = o((e) => {
  fetch(e);
}, "throughFetch");
var sc = o((e) => {
  typeof Image < "u" ? rc(e) : typeof fetch < "u" && oc(e);
}, "transport");
var Kn = o(() => {
  let e = Nn(), t = import_react78.default.useRef(false);
  return import_react78.default.useEffect(() => {
    if (t.current)
      return;
    let r = tc(e);
    r && (sc(`https://telemetry.refine.dev/telemetry?payload=${r}`), t.current = true);
  }, []), null;
}, "Telemetry");
var Gn = o((e) => {
  let t = ["go", "parse", "back", "Link"], r = Object.keys(e).filter((n) => !t.includes(n));
  return r.length > 0 ? (console.warn(`Unsupported properties are found in \`routerProvider\` prop. You provided \`${r.join(", ")}\`. Supported properties are \`${t.join(", ")}\`. You may wanted to use \`legacyRouterProvider\` prop instead.`), true) : false;
}, "checkRouterPropMisuse");
var Wn = o((e) => {
  let t = import_react80.default.useRef(false);
  import_react80.default.useEffect(() => {
    t.current === false && e && Gn(e) && (t.current = true);
  }, [e]);
}, "useRouterMisuseWarning");
var ic = o(({ legacyAuthProvider: e, authProvider: t, dataProvider: r, legacyRouterProvider: s, routerProvider: n, notificationProvider: a, accessControlProvider: i2, auditLogProvider: p3, resources: c2, DashboardPage: u, ReadyPage: l2, LoginPage: m2, catchAll: g2, children: d3, liveProvider: y2, i18nProvider: P, Title: C2, Layout: f2, Sider: R2, Header: M, Footer: w, OffLayoutArea: T3, onLiveEvent: b, options: x }) => {
  let { optionsWithDefaults: k2, disableTelemetryWithDefault: F, reactQueryWithDefaults: v } = Zr({ options: x }), V = Sr(() => {
    var h;
    return v.clientConfig instanceof QueryClient ? v.clientConfig : new QueryClient({ ...v.clientConfig, defaultOptions: { ...v.clientConfig.defaultOptions, queries: { refetchOnWindowFocus: false, keepPreviousData: true, ...(h = v.clientConfig.defaultOptions) == null ? void 0 : h.queries } } });
  }, [v.clientConfig]);
  C(V);
  let L = import_react77.default.useMemo(() => typeof a == "function" ? a : () => a, [a])();
  if (Wn(n), s && !n && (c2 ?? []).length === 0)
    return l2 ? import_react77.default.createElement(l2, null) : import_react77.default.createElement(So, null);
  let { RouterComponent: B = import_react77.default.Fragment } = n ? {} : s ?? {};
  return import_react77.default.createElement(QueryClientProvider, { client: V }, import_react77.default.createElement(en, { ...L }, import_react77.default.createElement(Wo, { ...e ?? {}, isProvided: !!e }, import_react77.default.createElement(zo, { ...t ?? {}, isProvided: !!t }, import_react77.default.createElement(Vs, { dataProvider: r }, import_react77.default.createElement(Bs, { liveProvider: y2 }, import_react77.default.createElement(zs, { value: s && !n ? "legacy" : "new" }, import_react77.default.createElement(_s, { router: n }, import_react77.default.createElement(cn, { ...s }, import_react77.default.createElement(Hs, { resources: c2 ?? [] }, import_react77.default.createElement(rn, { i18nProvider: P }, import_react77.default.createElement(dn, { ...i2 ?? {} }, import_react77.default.createElement(hn, { ...p3 ?? {} }, import_react77.default.createElement(Js, null, import_react77.default.createElement(rs, { mutationMode: k2.mutationMode, warnWhenUnsavedChanges: k2.warnWhenUnsavedChanges, syncWithLocation: k2.syncWithLocation, Title: C2, undoableTimeout: k2.undoableTimeout, catchAll: g2, DashboardPage: u, LoginPage: m2, Layout: f2, Sider: R2, Footer: w, Header: M, OffLayoutArea: T3, hasDashboard: !!u, liveMode: k2.liveMode, onLiveEvent: b, options: k2 }, import_react77.default.createElement(is, null, import_react77.default.createElement(B, null, d3, !F && import_react77.default.createElement(Kn, null), import_react77.default.createElement(Ao, null))))))))))))))))));
}, "Refine");
var qs = o(({ notification: e }) => {
  let t = $(), { notificationDispatch: r } = ut(), { open: s } = $e(), [n, a] = (0, import_react81.useState)(), i2 = o(() => {
    if (e.isRunning === true && (e.seconds === 0 && e.doMutation(), e.isSilent || s == null || s({ key: `${e.id}-${e.resource}-notification`, type: "progress", message: t("notifications.undoable", { seconds: Bt(e.seconds) }, `You have ${Bt(e.seconds)} seconds to undo`), cancelMutation: e.cancelMutation, undoableTimeout: Bt(e.seconds) }), e.seconds > 0)) {
      n && clearTimeout(n);
      let p3 = setTimeout(() => {
        r({ type: "DECREASE_NOTIFICATION_SECOND", payload: { id: e.id, seconds: e.seconds, resource: e.resource } });
      }, 1e3);
      a(p3);
    }
  }, "cancelNotification");
  return (0, import_react81.useEffect)(() => {
    i2();
  }, [e]), null;
}, "UndoableQueue");
var dc = o(({ children: e, Layout: t, Sider: r, Header: s, Title: n, Footer: a, OffLayoutArea: i2 }) => {
  let { Layout: p3, Footer: c2, Header: u, Sider: l2, Title: m2, OffLayoutArea: g2 } = ge();
  return import_react82.default.createElement(t ?? p3, { Sider: r ?? l2, Header: s ?? u, Footer: a ?? c2, Title: n ?? m2, OffLayoutArea: i2 ?? g2 }, e, import_react82.default.createElement(lc, null));
}, "LayoutWrapper");
var lc = o(() => {
  let { Prompt: e } = le(), t = $(), { warnWhen: r, setWarnWhen: s } = vt(), n = o((a) => (a.preventDefault(), a.returnValue = t("warnWhenUnsavedChanges", "Are you sure you want to leave? You have unsaved changes."), a.returnValue), "warnWhenListener");
  return (0, import_react82.useEffect)(() => (r && window.addEventListener("beforeunload", n), window.removeEventListener("beforeunload", n)), [r]), import_react82.default.createElement(e, { when: r, message: t("warnWhenUnsavedChanges", "Are you sure you want to leave? You have unsaved changes."), setWarnWhen: s });
}, "UnsavedPrompt");
function mc({ redirectOnFail: e = true, appendCurrentPathToQuery: t = true, children: r, fallback: s, loading: n }) {
  var T3;
  let a = ie(), i2 = se(), p3 = !!(a != null && a.isProvided), c2 = !!(a != null && a.isLegacy), u = i2 === "legacy", l2 = Te(), m2 = Le(), { useLocation: g2 } = le(), d3 = g2(), { isFetching: y2, isSuccess: P, data: { authenticated: C2, redirectTo: f2 } = {} } = Mr({ v3LegacyAuthProviderCompatible: c2 }), R2 = p3 ? c2 ? P : C2 : true;
  if (!p3)
    return import_react83.default.createElement(import_react83.default.Fragment, null, r ?? null);
  if (y2)
    return import_react83.default.createElement(import_react83.default.Fragment, null, n ?? null);
  if (R2)
    return import_react83.default.createElement(import_react83.default.Fragment, null, r ?? null);
  if (typeof s < "u")
    return import_react83.default.createElement(import_react83.default.Fragment, null, s ?? null);
  let M = c2 ? typeof e == "string" ? e : "/login" : typeof e == "string" ? e : f2, w = `${u ? d3 == null ? void 0 : d3.pathname : l2.pathname}`.replace(/(\?.*|#.*)$/, "");
  if (M) {
    if (u) {
      let x = t ? `?to=${encodeURIComponent(w)}` : "";
      return import_react83.default.createElement(yc, { to: `${M}${x}` });
    }
    let b = (T3 = l2.params) != null && T3.to ? l2.params.to : m2({ to: w, options: { keepQuery: true }, type: "path" });
    return import_react83.default.createElement(fc, { config: { to: M, query: t && (b ?? "").length > 1 ? { to: b } : void 0, type: "replace" } });
  }
  return null;
}
o(mc, "Authenticated");
var fc = o(({ config: e }) => {
  let t = Le();
  return import_react83.default.useEffect(() => {
    t(e);
  }, [t, e]), null;
}, "Redirect");
var yc = o(({ to: e }) => {
  let { replace: t } = Pe();
  return import_react83.default.useEffect(() => {
    t(e);
  }, [t, e]), null;
}, "RedirectLegacy");
var Ao = o(() => {
  let { useLocation: e } = le(), { checkAuth: t } = xe(), r = e();
  return (0, import_react84.useEffect)(() => {
    t == null || t().catch(() => false);
  }, [r == null ? void 0 : r.pathname]), null;
}, "RouteChangeHandler");
var xc = o(({ resource: e, action: t, params: r, fallback: s, onUnauthorized: n, children: a, queryOptions: i2, ...p3 }) => {
  let { id: c2, resource: u, action: l2 = "" } = qe({ resource: e, id: r == null ? void 0 : r.id }), m2 = t ?? l2, g2 = r ?? { id: c2, resource: u }, { data: d3 } = Ar({ resource: u == null ? void 0 : u.name, action: m2, params: g2, queryOptions: i2 });
  return (0, import_react85.useEffect)(() => {
    n && (d3 == null ? void 0 : d3.can) === false && n({ resource: u == null ? void 0 : u.name, action: m2, reason: d3 == null ? void 0 : d3.reason, params: g2 });
  }, [d3 == null ? void 0 : d3.can]), d3 != null && d3.can ? import_react85.default.isValidElement(a) ? import_react85.default.cloneElement(a, p3) : import_react85.default.createElement(import_react85.default.Fragment, null, a) : (d3 == null ? void 0 : d3.can) === false ? import_react85.default.createElement(import_react85.default.Fragment, null, s ?? null) : null;
}, "CanAccess");
var zn = [`
    .bg-top-announcement {
        border-bottom: 1px solid rgba(71, 235, 235, 0.15);
        background: radial-gradient(
                218.19% 111.8% at 0% 0%,
                rgba(71, 235, 235, 0.1) 0%,
                rgba(71, 235, 235, 0.2) 100%
            ),
            #14141f;
    }
    `, `
    .top-announcement-mask {
        mask-image: url(https://refine.ams3.cdn.digitaloceanspaces.com/website/static/assets/hexagon.svg);
        -webkit-mask-image: url(https://refine.ams3.cdn.digitaloceanspaces.com/website/static/assets/hexagon.svg);
        mask-repeat: repeat;
        -webkit-mask-repeat: repeat;
        background: rgba(71, 235, 235, 0.25);
    }
    `, `
    .banner {
        display: flex;
        @media (max-width: 1000px) {
            display: none;
        }
    }`, `
    .gh-link, .gh-link:hover, .gh-link:active, .gh-link:visited, .gh-link:focus {
        text-decoration: none;
        z-index: 9;
    }
    `, `
    @keyframes top-announcement-glow {
        0% {
            opacity: 1;
        }

        100% {
            opacity: 0;
        }
    }
    `];
var hc = "If you find Refine useful, you can contribute to its growth by giving it a star on GitHub";
var Rc = o(({ containerStyle: e }) => ((0, import_react86.useEffect)(() => {
  let t = document.createElement("style");
  document.head.appendChild(t), zn.forEach((r) => {
    var s;
    return (s = t.sheet) == null ? void 0 : s.insertRule(r, t.sheet.cssRules.length);
  });
}, []), import_react86.default.createElement("div", { className: "banner bg-top-announcement", style: { width: "100%", height: "48px" } }, import_react86.default.createElement("div", { style: { position: "relative", display: "flex", justifyContent: "center", alignItems: "center", paddingLeft: "200px", width: "100%", maxWidth: "100vw", height: "100%", borderBottom: "1px solid #47ebeb26", ...e } }, import_react86.default.createElement("div", { className: "top-announcement-mask", style: { position: "absolute", left: 0, top: 0, width: "100%", height: "100%", borderBottom: "1px solid #47ebeb26" } }, import_react86.default.createElement("div", { style: { position: "relative", width: "960px", height: "100%", display: "flex", justifyContent: "space-between", margin: "0 auto" } }, import_react86.default.createElement("div", { style: { width: "calc(50% - 300px)", height: "100%", position: "relative" } }, import_react86.default.createElement(Hr, { style: { animationDelay: "1.5s", position: "absolute", top: "2px", right: "220px" }, id: "1" }), import_react86.default.createElement(Hr, { style: { animationDelay: "1s", position: "absolute", top: "8px", right: "100px", transform: "rotate(180deg)" }, id: "2" }), import_react86.default.createElement(On, { style: { position: "absolute", right: "10px" }, id: "3" })), import_react86.default.createElement("div", { style: { width: "calc(50% - 300px)", height: "100%", position: "relative" } }, import_react86.default.createElement(Hr, { style: { animationDelay: "2s", position: "absolute", top: "6px", right: "180px", transform: "rotate(180deg)" }, id: "4" }), import_react86.default.createElement(Hr, { style: { animationDelay: "0.5s", transitionDelay: "1.3s", position: "absolute", top: "2px", right: "40px" }, id: "5" }), import_react86.default.createElement(On, { style: { position: "absolute", right: "-70px" }, id: "6" })))), import_react86.default.createElement(Cc, { text: hc })))), "GitHubBanner");
var Cc = o(({ text: e }) => import_react86.default.createElement("a", { className: "gh-link", href: "https://s.refine.dev/github-support", target: "_blank", rel: "noreferrer", style: { position: "absolute", height: "100%", padding: "0 60px", display: "flex", flexWrap: "nowrap", whiteSpace: "nowrap", justifyContent: "center", alignItems: "center", backgroundImage: "linear-gradient(90deg, rgba(31, 63, 72, 0.00) 0%, #1F3F48 10%, #1F3F48 90%, rgba(31, 63, 72, 0.00) 100%)" } }, import_react86.default.createElement("div", { style: { color: "#fff", display: "flex", flexDirection: "row", gap: "8px" } }, import_react86.default.createElement("span", { style: { display: "flex", flexDirection: "row", justifyContent: "center", alignItems: "center" } }, "⭐️"), import_react86.default.createElement("span", { className: "text", style: { fontSize: "16px", lineHeight: "24px" } }, e), import_react86.default.createElement("span", { style: { display: "flex", flexDirection: "row", justifyContent: "center", alignItems: "center" } }, "⭐️"))), "Text");
var Hr = o(({ style: e, ...t }) => import_react86.default.createElement("svg", { xmlns: "http://www.w3.org/2000/svg", width: 80, height: 40, fill: "none", style: { opacity: 1, animation: "top-announcement-glow 1s ease-in-out infinite alternate", ...e } }, import_react86.default.createElement("circle", { cx: 40, r: 40, fill: `url(#${t.id}-a)`, fillOpacity: 0.5 }), import_react86.default.createElement("defs", null, import_react86.default.createElement("radialGradient", { id: `${t.id}-a`, cx: 0, cy: 0, r: 1, gradientTransform: "matrix(0 40 -40 0 40 0)", gradientUnits: "userSpaceOnUse" }, import_react86.default.createElement("stop", { stopColor: "#47EBEB" }), import_react86.default.createElement("stop", { offset: 1, stopColor: "#47EBEB", stopOpacity: 0 })))), "GlowSmall");
var On = o(({ style: e, ...t }) => import_react86.default.createElement("svg", { xmlns: "http://www.w3.org/2000/svg", width: 120, height: 48, fill: "none", ...t, style: { opacity: 1, animation: "top-announcement-glow 1s ease-in-out infinite alternate", ...e } }, import_react86.default.createElement("circle", { cx: 60, cy: 24, r: 60, fill: `url(#${t.id}-a)`, fillOpacity: 0.5 }), import_react86.default.createElement("defs", null, import_react86.default.createElement("radialGradient", { id: `${t.id}-a`, cx: 0, cy: 0, r: 1, gradientTransform: "matrix(0 60 -60 0 60 24)", gradientUnits: "userSpaceOnUse" }, import_react86.default.createElement("stop", { stopColor: "#47EBEB" }), import_react86.default.createElement("stop", { offset: 1, stopColor: "#47EBEB", stopOpacity: 0 })))), "GlowBig");
var bc = o(({ status: e, elements: { success: t = import_react87.default.createElement(Wr, { translationKey: "autoSave.success", defaultMessage: "saved" }), error: r = import_react87.default.createElement(Wr, { translationKey: "autoSave.error", defaultMessage: "auto save failure" }), loading: s = import_react87.default.createElement(Wr, { translationKey: "autoSave.loading", defaultMessage: "saving..." }), idle: n = import_react87.default.createElement(Wr, { translationKey: "autoSave.idle", defaultMessage: "waiting for changes" }) } = {} }) => {
  switch (e) {
    case "success":
      return import_react87.default.createElement(import_react87.default.Fragment, null, t);
    case "error":
      return import_react87.default.createElement(import_react87.default.Fragment, null, r);
    case "loading":
      return import_react87.default.createElement(import_react87.default.Fragment, null, s);
    default:
      return import_react87.default.createElement(import_react87.default.Fragment, null, n);
  }
}, "AutoSaveIndicator");
var Wr = o(({ translationKey: e, defaultMessage: t }) => {
  let r = $();
  return import_react87.default.createElement("span", null, r(e, t));
}, "Message");

export {
  differenceWith_default,
  unionWith_default,
  require_lib,
  isEqual_default,
  get_default,
  hasPath_default,
  or,
  sr,
  _o,
  Mt,
  nt,
  S,
  jo,
  qo,
  fr,
  es,
  ee,
  gr,
  Tr,
  xr,
  ie,
  ns,
  _e,
  vt,
  qr,
  da,
  ge,
  Pt,
  Rr,
  ps,
  br,
  ga,
  vr,
  It,
  Dr,
  Ur,
  Er,
  Ta,
  xa,
  Pa,
  Z,
  ha,
  oo,
  Lr,
  $t,
  io,
  co,
  lo,
  Mr,
  Ia,
  he,
  Sa,
  mo,
  pe,
  zt,
  Ot,
  fo,
  ks,
  yo,
  Xt,
  xo,
  Ro,
  qa,
  oi,
  si,
  ii,
  pi,
  fe,
  yi,
  Ae,
  Rt,
  se,
  Co,
  Te,
  Y,
  js,
  ht,
  Zs,
  jx,
  Ye,
  ut,
  $e,
  Re,
  Xe,
  Do,
  $,
  Uo,
  BP,
  JP,
  nh,
  nn,
  Eo,
  Dt,
  Le,
  Pe,
  Wh,
  Yh,
  tR,
  Tu,
  yt,
  le,
  ct,
  Ar,
  HR,
  qR,
  dC,
  Je,
  kC,
  jC,
  Qu,
  ue,
  At,
  qe,
  Bu,
  Gu,
  Uv,
  Ev,
  Lv,
  Mv,
  wv,
  Iv,
  Sv,
  Av,
  $u,
  Xr,
  Ou,
  So,
  qu,
  ic,
  qs,
  dc,
  mc,
  Ao,
  xc,
  Rc,
  bc
};
/*! Bundled license information:

use-sync-external-store/cjs/use-sync-external-store-shim.development.js:
  (**
   * @license React
   * use-sync-external-store-shim.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

papaparse/papaparse.min.js:
  (* @license
  Papa Parse
  v5.4.1
  https://github.com/mholt/PapaParse
  License: MIT
  *)
*/
//# sourceMappingURL=chunk-KNJ3NH6K.js.map
