#!/usr/bin/env node
var Po=Object.create;var je=Object.defineProperty;var xo=Object.getOwnPropertyDescriptor;var Io=Object.getOwnPropertyNames;var Eo=Object.getPrototypeOf,Co=Object.prototype.hasOwnProperty;var To=(e,t)=>{for(var r in t)je(e,r,{get:t[r],enumerable:!0})},ko=(e,t,r,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let n of Io(t))!Co.call(e,n)&&n!==r&&je(e,n,{get:()=>t[n],enumerable:!(o=xo(t,n))||o.enumerable});return e};var i=(e,t,r)=>(r=e!=null?Po(Eo(e)):{},ko(t||!e||!e.__esModule?je(r,"default",{value:e,enumerable:!0}):r,e));var ho=require("commander"),vo=i(require("figlet"));var F=i(require("chalk")),ve=i(require("center-align"));var lt=i(require("ora")),Ro=async(e,t)=>{let r=(0,lt.default)({color:"cyan",text:t}).start(),o=await e();return r.stop(),o},N=Ro;var oe=i(require("execa")),$=require("fs-extra"),pt=i(require("globby")),$e=i(require("path")),mt=i(require("preferred-pm")),_=()=>{if(!(0,$.existsSync)("package.json"))throw new Error("./package.json not found");return JSON.parse((0,$.readFileSync)("package.json","utf8"))},M=()=>{let e=_();return Object.keys(e.dependencies||{})},dt=()=>{let e=_();return(e==null?void 0:e.dependencies)||{}},ut=()=>{let e=_();return Object.keys(e.devDependencies||{})},bo=()=>[...M(),...M()],fe=()=>{let e=_();return(e==null?void 0:e.scripts)||{}},z=async()=>{var e;try{let t=await(0,oe.default)("npm",["ls","--depth=0","--json"],{reject:!1}),r=((e=JSON.parse(t.stdout))==null?void 0:e.dependencies)||{},o=Object.keys(r).filter(s=>s.startsWith("@refinedev")||s.startsWith("@pankod/refine-")),n=[];for(let s of o){let a=r[s].version;n.push({name:s,version:a})}return n}catch{return Promise.resolve(null)}},ne=async()=>{let e=["ably","airtable","antd","appwrite","chakra-ui","codemod","core","devtools","devtools-internal","devtools-server","devtools-shared","devtools-ui","graphql","hasura","inferencer","kbar","mantine","medusa","mui","nestjs-query","nestjsx-crud","nextjs-router","react-hook-form","react-router-v6","react-table","remix-router","shared","simple-rest","strapi","strapi-v4","supabase"];try{let t=await(0,pt.default)("node_modules/@refinedev/*",{onlyDirectories:!0}),r=e.flatMap(n=>{try{let s=require.resolve($e.default.join("@refinedev",n,"package.json"));return[$e.default.dirname(s)]}catch{return[]}}),o=[];return await Promise.all([...r,...t].map(async n=>{if(await(0,$.pathExists)(`${n}/package.json`)){let a=await(0,$.readJSON)(`${n}/package.json`);o.push({name:a.name,version:a.version,path:n})}})),o}catch{return[]}},ft=async e=>await(0,$.pathExists)(`${e}/refine.config.js`),j={npm:{add:["install","--save"],addDev:["install","--save-dev"],outdatedJson:["outdated","--json"],install:["install"]},yarn:{add:["add"],addDev:["add","-D"],outdatedJson:["outdated","--json"],install:["install"]},pnpm:{add:["add"],addDev:["add","-D"],outdatedJson:["outdated","--format","json"],install:["install"]},bun:{add:["add"],addDev:["add","--dev"],outdatedJson:["outdated","--format","json"],install:["install"]}},R=async()=>{let e=await N(()=>(0,mt.default)(process.cwd()),"Getting package manager...");if(!e)throw new Error("Package manager not found.");return e},X=async(e,t="all",r="All `Refine` packages updated  \u{1F389}")=>{let o=await R();try{let n=t==="all"?j[o.name].install:j[o.name].add,s=(0,oe.default)(o.name,[...n,...e],{stdio:"inherit"});s.on("message",a=>{console.log(a)}),s.on("error",a=>{console.log(a)}),s.on("exit",a=>{if(a===0){console.log(r);return}console.log(`Application exited with code ${a}`)})}catch(n){throw new Error(n)}},_e=async e=>{let t=await R();try{let r=j[t.name].add,o=oe.default.sync(t.name,[...r,...e],{stdio:"inherit"});if(o.failed||o.exitCode!==0)throw new Error(o.stderr);return o}catch(r){throw new Error(r)}},Fe=e=>{let t=e.lastIndexOf("@");return t<=0?{name:e,version:null}:{name:e.slice(0,t),version:e.slice(t+1)}},gt=()=>{var t;let e=_();return(t=e==null?void 0:e.refine)==null?void 0:t.projectId},ge=async()=>(await ne()).some(t=>t.name==="@refinedev/devtools"),No=e=>{let t=M();return e.filter(r=>!t.includes(r))},ht=async e=>{console.log("\u{1F331} Checking dependencies...");let t=No(e);t.length>0?(console.log(`\u{1F331} Installing ${t.join(", ")}`),await _e(t),console.log("\u{1F389} Installation complete...")):console.log("\u{1F389} All required packages are already installed")},vt=e=>{let t=bo(),r=e.filter(o=>t.includes(o));return r.length>0?(console.log(`\u{1F6A8} This feature doesn't support ${r.join(", ")} package.`),!0):!1},yt=async e=>{let t="npm",{stdout:r,timedOut:o}=await(0,oe.default)(t,["view",e,"versions","--json"],{reject:!1,timeout:25e3});o&&(console.log("\u274C Timed out while checking for updates."),process.exit(1));let n=[];try{n=JSON.parse(r),(!n||"error"in n)&&(console.log("\u274C Something went wrong while checking for updates."),process.exit(1))}catch{console.log("\u274C Something went wrong while checking for updates."),process.exit(1)}return n},wt=async e=>{let t=await z();return t?t.some(r=>r.name===e):!1};var Et=i(require("cli-table3")),ie=i(require("chalk"));var Pt=e=>e.charAt(0).toUpperCase()+e.slice(1),xt=e=>e.replace(/[\u001b\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g,"");var se={name:"name",current:"current",wanted:"wanted",latest:"latest",changelog:"changelog"},Ue=[se.name,se.current,se.wanted,se.latest,se.changelog],he=(e=[])=>{var x;let t=Object.keys((e==null?void 0:e[0])||{});if(!e||!t.length)return{table:"",width:0};let r=process.stdout.columns||80,o=Math.max(...e.map(d=>d.name.length))+2,n=7+2,s=6,a=Math.min(35,r-o-n*3-s),c={name:o,current:n,wanted:n,latest:n,changelog:a},f=new Et.default({head:Ue,wordWrap:!1,wrapOnWordBoundary:!0,colWidths:Ue.map(d=>c[d]),style:{head:["blue"]}}),p=(d,l)=>{if(d.length>l){let m=l-3,g=d.slice(0,Math.floor(m/2)),y=d.slice(-Math.ceil(m/2));return`${g}...${y}`}return d};e.forEach(d=>{f.push(Ue.map(l=>{let m=d[l];if(!m)return m;if(l==="latest"||l==="wanted"){let g=It(d.current),y=It(m),P=So(g,y),A=ie.default[P.major](y.major),I=ie.default[P.minor](y.minor),L=ie.default[P.patch](y.patch);return`${A}.${I}.${L}`}return l==="changelog"?ie.default.blueBright.underline(m):m}))});let u=f.toString(),v=xt(((x=u.split(`
`))==null?void 0:x[0])||"").length;return{table:u,width:v}},It=e=>{let t=e.split(".");return{major:t[0],minor:t[1],patch:t[2]}},So=(e,t)=>e.major.trim()!==t.major.trim()?{major:"red",minor:"red",patch:"red"}:e.minor.trim()!==t.minor.trim()?{major:"white",minor:"yellow",patch:"yellow"}:e.patch.trim()!==t.patch.trim()?{major:"white",minor:"white",patch:"green"}:{major:"white",minor:"white",patch:"white"};var ye=async e=>{let t=e==null?void 0:e.data,r=Object.keys((t==null?void 0:t[0])||{});if(!t||!r.length)return;let{table:o,width:n}=he(t);console.log(),console.log((0,ve.default)("Update Available",n)),console.log(),console.log(`- ${F.default.yellow(F.default.bold("Current"))}: The version of the package that is currently installed`),console.log(`- ${F.default.yellow(F.default.bold("Wanted"))}: The maximum version of the package that satisfies the semver range specified in \`package.json\``),console.log(`- ${F.default.yellow(F.default.bold("Latest"))}: The latest version of the package available on npm`),console.log(o),console.log((0,ve.default)(`To update ${F.default.bold("`Refine`")} packages with wanted version`,n)),console.log((0,ve.default)(` Run the following command: ${F.default.yellowBright(await Do())}`,n)),console.log()},Do=async()=>{let e="npx @refinedev/cli update",t=M(),r=Object.keys(fe()),o=t.includes("@refinedev/cli"),n=r.includes("refine");if(!o&&!n)return e;let s=await R();return n?`${s.name} run refine update`:o?"npx refine update":e};var Ct=i(require("execa"));var Tt=i(require("semver-diff")),kt=require("semver"),Ao=e=>e.command("check-updates").description("Check all installed `Refine` packages are up to date").action(Oo),Oo=async()=>{let e=await N(ae,"Checking for updates...");if(!e.length){console.log("All `Refine` packages are up to date \u{1F389}\n");return}await ye({data:e})},ae=async()=>await jo(),jo=async()=>{let e=await $o();if(!e)return[];let t=[];return Object.keys(e).forEach(o=>{let n=e[o];o.includes("@refinedev")&&t.push({...n,name:o,changelog:o.replace(/@refinedev\//,"https://c.refine.dev/")})}),t.filter(o=>!!(0,Tt.default)(o.current,o.latest))},$o=async()=>{let e="npm",{stdout:t,timedOut:r}=await(0,Ct.default)(e,j[e].outdatedJson,{reject:!1,timeout:25e3});if(r)throw new Error("Timed out while checking for updates.");return t?JSON.parse(t):null},Rt=(e,t)=>{let o=dt()[e];return o?o==="latest"?"latest":o==="*"?"*":[">","<",">=","<=","||"].some(n=>o.includes(n))?o:o!=null&&o.includes("x")?`${o}`:o!=null&&o.startsWith("~")?`~${t}`:o!=null&&o.startsWith("^")?`^${t}`:t:`^${t}`},bt=async(e,t)=>{let r=await yt(e);return(0,kt.maxSatisfying)(r,`^${t}`)??t},Nt=Ao;var w=(c=>(c.REACT_SCRIPT="react-scripts",c.REMIX="remix",c.NEXTJS="nextjs",c.VITE="vite",c.CRACO="craco",c.PARCEL="parcel",c.UNKNOWN="unknown",c))(w||{});var Ve=(n=>(n.ANTD="antd",n.MUI="mui",n.MANTINE="mantine",n.CHAKRA="chakra-ui",n))(Ve||{});var St=(o=>(o.NPM="npm",o.YARN="yarn",o.PNPM="pnpm",o))(St||{});var h=e=>{if(e)return e;let t=M(),r=ut();return t.includes("@craco/craco")||r.includes("@craco/craco")?"craco":t.includes("react-scripts")||r.includes("react-scripts")?"react-scripts":t.includes("next")||r.includes("next")?"nextjs":t.includes("@remix-run/react")||r.includes("@remix-run/react")?"remix":t.includes("vite")||r.includes("vite")?"vite":t.includes("parcel")||r.includes("parcel")?"parcel":"unknown"},Dt=()=>{let e=M();if(e.includes("@refinedev/antd"))return"antd";if(e.includes("@refinedev/mui"))return"mui";if(e.includes("@refinedev/chakra-ui"))return"chakra-ui";if(e.includes("@refinedev/mantine"))return"mantine"},At=e=>{switch(e){case"react-scripts":return"REACT_APP_REFINE_DEVTOOLS_PORT";case"nextjs":return"NEXT_PUBLIC_REFINE_DEVTOOLS_PORT";case"vite":return"VITE_REFINE_DEVTOOLS_PORT";default:return"REFINE_DEVTOOLS_PORT"}};var Ot=i(require("camelcase")),ce=e=>{switch(e){case"nextjs":return{path:"src/components",alias:"../src/components"};case"remix":return{path:"app/components",alias:"~/components"}}return{path:"src/pages",alias:"pages"}},jt=e=>{switch(e){case"nextjs":return{path:"src/providers",alias:"../src/providers"};case"remix":return{path:"app/providers",alias:"~/providers"}}return{path:"src/providers",alias:"providers"}},we=e=>{switch(e){case"remix":return"./app";default:return"./src"}},$t=e=>(0,Ot.default)(e,{preserveConsecutiveUppercase:!0,pascalCase:!0});var W=i(require("handlebars")),O=require("fs-extra");var _o=(e,t)=>{let r=(0,O.readFileSync)(e);return W.default.registerHelper("ifIn",(n,s,a)=>n.includes(s)?a.fn(W.default):a.inverse(W.default)),W.default.registerHelper("formatInferencerComponent",n=>{if(n)switch(n){case"chakra-ui":return"ChakraUI";default:return n.charAt(0).toUpperCase()+n.slice(1)}}),W.default.registerHelper("capitalize",n=>{if(n)return n.charAt(0).toUpperCase()+n.slice(1)}),W.default.registerHelper("getComponentNameByResource",n=>{if(n)return $t(n)}),W.default.compile(r.toString())(t)},Be=(e,t)=>{(0,O.readdirSync)(e,{recursive:!0}).forEach(o=>{if(typeof o!="string"||!o.endsWith(".hbs"))return;let n=`${e}/${o}`,s=`${e}/${o.replace(".hbs","")}`;(0,O.createFileSync)(s),(0,O.writeFileSync)(s,_o(n,t)),(0,O.unlinkSync)(n)})};var _t=i(require("execa")),C=require("fs-extra"),Ft=i(require("inquirer")),Y=require("path"),Ut=require("pluralize"),Pe=i(require("temp")),le=["list","create","edit","show"],K=async(e,t)=>{var s;let r=(e==null?void 0:e.path)||ce(h()).path,o=e.actions||le.join(",");if(!t.length){let{name:a,selectedActions:c}=await Ft.default.prompt([{type:"input",name:"name",message:"Resource Name (users, products, orders etc.)",validate:f=>f?!0:"Resource Name is required"},{type:"checkbox",name:"selectedActions",message:"Select Actions",choices:le,default:(s=e==null?void 0:e.actions)==null?void 0:s.split(",")}]);t=[a],o=c.join(",")}let n=!1;t.forEach(a=>{let c=o?o.split(","):void 0,f=(0,Ut.plural)(a).toLowerCase(),p=(0,Y.join)(process.cwd(),r,f);if((0,C.pathExistsSync)(p)){console.error(`\u274C Resource (${(0,Y.join)(r,f)}) already exist!`);return}n=!0;let u=Pt(a),v=Dt(),d=h()==="nextjs",l=`${Le()}/../templates/resource/components`,m=Fo();(0,C.copySync)(l,m);let g={resourceName:a,resource:u,actions:c||le,uiFramework:v,isNextJs:d};Be(m,g),c&&le.forEach(L=>{c.includes(L)||(0,C.unlinkSync)(`${m}/${L}.tsx`)}),(0,C.mkdirSync)(r,{recursive:!0});let y=`${r}/${f}`,P={};(0,C.pathExistsSync)(y)&&(P={overwrite:!0}),(0,C.moveSync)(m,y,P),Pe.default.cleanupSync(),d&&Uo(u,f,c||le);let A=require.resolve(".bin/jscodeshift"),{stderr:I}=_t.default.sync(A,["./","--extensions=ts,tsx,js,jsx","--parser=tsx",`--transform=${Le()}/../src/transformers/resource.ts`,"--ignore-pattern=.cache","--ignore-pattern=node_modules","--ignore-pattern=build","--ignore-pattern=.next","--ignore-pattern=dist",`--__actions=${g.actions}`,`--__pathAlias=${ce(h()).alias}`,`--__resourceFolderName=${f}`,`--__resource=${u}`,`--__resourceName=${a}`]);I&&console.log(I),console.log(`\u{1F389} Resource (${y}) generated successfully!`)}),n&&Vo()},Le=()=>__dirname,Fo=()=>(Pe.default.track(),Pe.default.mkdirSync("resource")),Uo=(e,t,r)=>{let o=(0,Y.join)(process.cwd(),"src/app/",t),n={list:"/",create:"/create",edit:"/edit/[id]",show:"/show/[id]"};r.forEach(a=>{let c=n[a],f=(0,Y.join)(o,c);(0,C.mkdirSync)(f,{recursive:!0});let p=`${Le()}/../templates/resource/pages/next/${c}/page.tsx.hbs`,u=(0,Y.join)(f,"page.tsx.hbs");(0,C.copySync)(p,u)}),Be(o,{resource:e,resourceFolderName:t})},Vo=async()=>{console.log(),await N(()=>wt("@refinedev/inferencer"),"Checking if '@refinedev/inferencer' package is installed...")||(console.log("\u{1F4E6} Installing '@refinedev/inferencer' package..."),await X(["@refinedev/inferencer@latest"],"add","\u2705 '@refinedev/inferencer' package installed successfully!"))};var Bo=e=>{let t=h(),{path:r}=ce(t);return e.command("create-resource").allowExcessArguments(!0).description('Create a new resource files (deprecated, please use "add resource" command)').option("-a, --actions [actions]","Only generate the specified actions. (ex: list,create,edit,show)","list,create,edit,show").option("-p, --path [path]","Path to generate the resource files",r).action(Lo)},Lo=async(e,t)=>{K(e,t.args)},Vt=Bo;var Xt=require("commander");var zt=i(require("conf")),qt=i(require("chalk"));var Bt=i(require("dotenv")),Lt={};Bt.config({processEnv:Lt});var Mo={development:/dev/i,production:/prod/i,test:/test|tst/i,"continuous-integration":/ci/i,"user-acceptance-testing":/uat/i,"system-integration-testing":/sit/i},Wo=()=>{let e=process.env.NODE_ENV;if(!e)return"development";let t="custom";for(let[r,o]of Object.entries(Mo))if(o.test(e)){t=r;break}return t},xe=e=>process.env[e]||Lt[e],S={NODE_ENV:Wo(),REFINE_NO_TELEMETRY:xe("REFINE_NO_TELEMETRY")||"false",UPDATE_NOTIFIER_IS_DISABLED:xe("UPDATE_NOTIFIER_IS_DISABLED")||"false",UPDATE_NOTIFIER_CACHE_TTL:xe("UPDATE_NOTIFIER_CACHE_TTL")||1e3*60*60*24,REFINE_DEVTOOLS_PORT:xe("REFINE_DEVTOOLS_PORT")};var Mt=e=>typeof btoa<"u"?btoa(e):Buffer.from(e).toString("base64");var zo="refine-update-notifier",U=new zt.default({projectName:zo,defaults:{key:"",lastUpdated:0,packages:[]}}),G=async()=>{if(Yo())return;let e=await Jo();if(e!==null){if(e){Wt();return}qo(),Wt()}},qo=async()=>{let e=U.get("packages");e!=null&&e.length&&(await ye({data:e}),console.log(`
`))},Jo=async()=>{let e=await Xo(),t=Ho();return e===null?null:!!(t||!e)},Wt=async()=>{try{let e=await ae();return U.set("packages",e),U.set("lastUpdated",Date.now()),U.set("key",await Jt()),e}catch{return U.set("packages",[]),U.set("lastUpdated",Date.now()),U.set("key",""),null}},Ho=()=>{let e=U.get("lastUpdated");if(!e)return!0;let r=Date.now()-e,o=Number(S.UPDATE_NOTIFIER_CACHE_TTL);return r>=o},Xo=async()=>{let e=U.get("key"),t=await Jt();return t===null?null:e===t},Jt=async()=>{let e=await z();if(!e)return console.error(qt.default.red("Something went wrong when trying to get installed `Refine` packages.")),null;let t=e.map(o=>`${o.name}@${o.version}`);return Mt(t.toString())},Yo=()=>S.UPDATE_NOTIFIER_IS_DISABLED.toLocaleLowerCase()==="true";var T={["react-scripts"]:{getDev:e=>["start",...e],getStart:e=>["start",...e],getBuild:e=>["build",...e],getBin:()=>require.resolve(".bin/react-scripts")},["vite"]:{getDev:e=>["dev",...e],getStart:e=>["preview",...e],getBuild:e=>["build",...e],getBin:()=>require.resolve(".bin/vite")},["nextjs"]:{getDev:e=>["dev",...e],getStart:e=>["start",...e],getBuild:e=>["build",...e],getBin:()=>require.resolve(".bin/next")},["remix"]:{getDev:e=>["dev",...e],getStart:e=>(e==null?void 0:e.length)?e:(console.log(),console.warn("\u{1F6A8} Remix requires a path to the entry file. Please provide it as an argument to `refine start` command in package.json scripts"),console.warn("Refine will use `./build/index.js` as default"),console.warn("Example: `refine start ./build/index.js`"),console.log(),["./build/index.js"]),getBuild:e=>["build",...e],getBin:e=>{let t=e==="start"?"remix-serve":"remix";return require.resolve(`.bin/${t}`)}},["craco"]:{getDev:e=>["start",...e],getStart:e=>["start",...e],getBuild:e=>["build",...e],getBin:()=>require.resolve(".bin/craco")},["parcel"]:{getDev:e=>["start",...e],getStart:e=>["start",...e],getBuild:e=>["build",...e],getBin:()=>require.resolve(".bin/parcel")},["unknown"]:{getDev:e=>[...e],getStart:e=>[...e],getBuild:e=>[...e],getBin:()=>"unknown"}};var Ht=i(require("execa")),V=async(e,t,r={})=>{var n,s;if(e==="unknown"){let a=Object.values(w).filter(c=>c!=="unknown").join(", ");console.error(`We couldn't find executable for your project. Supported executables are ${a}.
Please use your own script directly. If you think this is an issue, please report it at: https://github.com/refinedev/refine/issues`);return}let o=(0,Ht.default)(e,t,{stdio:"pipe",windowsHide:!1,env:{FORCE_COLOR:"true",REFINE_NO_TELEMETRY:S.REFINE_NO_TELEMETRY,...r,...process.env}});return(n=o.stdout)==null||n.pipe(process.stdout),(s=o.stderr)==null||s.pipe(process.stderr),await o};var Z=e=>{let t=h(),r=[];switch(e){case"dev":r=T[t].getDev([""]);break;case"start":r=T[t].getStart([""]);break;case"build":r=T[t].getBuild([""]);break}return t==="remix"&&e==="start"&&(t="remix-serve"),`It runs: \`${t} ${r.join(" ")}\`. Also accepts all the arguments \`${t}\` accepts.`},Q=()=>`Platform to run command on. 
ex: ${Object.values(w).join(", ")}`;var Ko=e=>e.command("start").description(Z("start")).allowUnknownOption(!0).addOption(new Xt.Option("-p, --platform <platform>",Q()).choices(Object.values(w).filter(t=>t!=="unknown"))).argument("[args...]").action(Go),Go=async(e,{platform:t})=>{let r=h(t),o=T[r].getBin("start"),n=T[r].getStart(e);await G(),V(o,n)},Me=Ko;var He=require("commander");var Zt=require("@refinedev/devtools-server");var Yt=i(require("execa"));var Ie=require("prettier"),We=async e=>{try{let t=await(0,Ie.resolveConfig)(process.cwd());return(0,Ie.format)(e,{...t??{},parser:"typescript"})}catch{return e}};var Kt=async()=>{let e=require.resolve(".bin/jscodeshift"),{stderr:t}=Yt.default.sync(e,["./","--extensions=ts,tsx,js,jsx","--parser=tsx",`--transform=${__dirname}/../src/transformers/add-devtools-component.ts`,"--ignore-pattern=.cache","--ignore-pattern=node_modules","--ignore-pattern=build","--ignore-pattern=.next","--ignore-pattern=dist"]);t&&console.log(t)};var Gt=()=>{let t=_().scripts||{};return{dev:((t==null?void 0:t.dev)||"").match(/refine dev(\s|$|;){1}/)!==null}};var Qt=i(require("boxen")),er=i(require("cardinal")),qe=i(require("chalk")),tr=require("commander"),rr=i(require("dedent")),Ee=i(require("semver")),Zo=["start","init"],Qo="start",or="4.42.0",en=e=>e.command("devtools").description("Start or install Refine Devtools server; it starts on port 5001.").addArgument(new tr.Argument("[command]","devtools related commands").choices(Zo).default(Qo)).addHelpText("after",`
Commands:
    start     Start Refine Devtools server
    init      Install Refine Devtools client and adds it to your project
`).action(tn),tn=async e=>{switch(e){case"start":Je();return;case"init":rn();return}},rn=async()=>{var n;let e=await ze();if(await N(ge,"Checking if devtools is installed...")){console.log("\u{1F389} Refine Devtools is already installed");return}if(e&&await nr({pkg:e}))return;console.log("\u{1F331} Installing Refine Devtools...");let r=["@refinedev/devtools@latest"];if((!e||Ee.default.lt(e.version,or))&&(r.push("@refinedev/core@latest"),console.log("\u{1F331} Refine core package is being updated for devtools...")),await _e(r),console.log(""),console.log(""),console.log("\u{1F331} Adding devtools component to your project...."),await Kt(),console.log("\u2705 Refine Devtools package and components added to your project"),r.includes("@refinedev/core@latest")){let s=await ze();console.log(`\u2705 Refine core package updated from ${(e==null?void 0:e.version)??"unknown"} to ${(s==null?void 0:s.version)??"unknown"}`),console.log(`   Changelog: ${qe.default.underline.blueBright(`https://c.refine.dev/core#${(e==null?void 0:e.version.replaceAll(".",""))??""}`)}`)}console.log("");let{dev:o}=Gt();if(o){console.log(`\u{1F64C} You're good to go. "npm run dev" will automatically starts the devtools server.`),console.log('\u{1F449} You can also start the devtools server manually by running "refine devtools start"');return}if(!o){let s=(n=_().scripts)==null?void 0:n.dev;console.log('\u{1F6A8} Your have modified the "dev" script in your package.json. Because of that, "npm run dev" will not start the devtools server automatically.'),console.log('\u{1F449} You can append "refine devtools" to "dev" script'),console.log('\u{1F449} You can start the devtools server manually by running "refine devtools"'),console.log(""),console.log((0,Qt.default)(er.default.highlight((0,rr.default)(`
                {
                    "scripts": {
                        "dev": "${s} & refine devtools",
                        "refine": "refine"
                    }
                }  
        `)),{padding:1,title:"package.json",dimBorder:!0,borderColor:"blueBright",borderStyle:"round"}))}},Je=async({exitOnError:e=!0}={})=>{let t=await ze();if(t){if(await nr({pkg:t}))return;if(Ee.default.lt(t.version,or)){console.log(`\u{1F6A8} You're using an old version of Refine(${t.version}). Refine version should be @4.42.0 or higher to use devtools.`);let r=await R();console.log(`\u{1F449} You can update @refinedev/core package by running "${r.name} run refine update"`);return}}(0,Zt.server)({onError:()=>{e&&process.exit(1)}}).catch(r=>{})},ze=async()=>{let e=await ne(),t=e==null?void 0:e.find(r=>r.name==="@refinedev/core"||r.name==="@pankod/refine-core");if(t)return t},nr=async({pkg:e})=>e.name==="@pankod/refine-core"||Ee.default.lt(e.version,"4.0.0")?(console.log(`\u{1F6A8} You're using an old version of Refine(${e.version}). Refine version should be @4.42.0 or higher to use devtools.`),console.log("You can follow migration guide to update Refine."),console.log(qe.default.blue("https://refine.dev/docs/migration-guide/3x-to-4x/")),!0):!1,sr=en;var on=e=>e.command("dev").description(Z("dev")).allowUnknownOption(!0).addOption(new He.Option("-p, --platform <platform>",Q()).choices(Object.values(w).filter(t=>t!=="unknown"))).addOption(new He.Option("-d, --devtools <devtools>","Start Refine Devtools server").default("true","true if devtools is installed")).argument("[args...]").action(nn),nn=async(e,{platform:t,...r})=>{let o=h(t),n=T[o].getBin("dev"),s=T[o].getDev(e);await G();let a=At(o),c=await ge(),f=r.devtools==="false"?!1:c;f&&Je({exitOnError:!1});let p=f&&S.REFINE_DEVTOOLS_PORT?{[a]:S.REFINE_DEVTOOLS_PORT}:void 0;V(n,s,p)},Xe=on;var ir=require("commander");var sn=e=>e.command("build").description(Z("build")).allowUnknownOption(!0).addOption(new ir.Option("-p, --platform <platform>",Q()).choices(Object.values(w).filter(t=>t!=="unknown"))).argument("[args...]").action(an),an=async(e,{platform:t})=>{let r=h(t),o=T[r].getBin("build"),n=T[r].getBuild(e);await G();try{await V(o,n)}catch{process.exit(1)}},Ye=sn;var Ke=i(require("chalk"));var cn=e=>e.command("run").description("Runs a defined package script. If no `command` is provided, it will list the available scripts").allowUnknownOption(!0).argument("[command] [args...]").action(ln),ln=async e=>{let[t,...r]=e,o=fe();if(!t){console.log(`Available via ${Ke.default.blue("`refine run`")}:
`);for(let[a,c]of Object.entries(o))console.log(`  ${a}`),console.log(`    ${Ke.default.dim(c)}`),console.log();return}if(!Object.keys(o).includes(t)){let a=`${process.cwd()}/node_modules/.bin/${t}`;V(a,r);return}let s=await R();V(s.name,["run",t,...r])},Ge=cn;var tt=i(require("path")),q=i(require("chalk")),pe=i(require("inquirer")),Sr=i(require("inquirer-autocomplete-prompt")),B=require("fs-extra");var Qe=i(require("path"));var ur=i(require("path"));var Ze={};To(Ze,{PackageManagerTypes:()=>St,ProjectTypes:()=>w,UIFrameworks:()=>Ve,appendAfterImports:()=>pr,getFileContent:()=>Ce,getImports:()=>ee,getNameChangeInImport:()=>cr});var pn=/import(?:\s+(type))?\s*(?:([^\s\{\},]+)\s*(?:,\s*)?)?(\{[^}]+\})?\s*(?:\*\s*as\s+([^\s\{\}]+)\s*)?from\s*['"]([^'"]+)['"];?/g,mn=/((?:\w|\s|_)*)( as )((?:\w|\s|_)*)( |,)?/g,ee=e=>{let t=e.matchAll(pn),r=[];for(let o of t){let[n,s,a,c,f,p]=o;r.push({isType:s==="type",statement:n,importPath:p,...a&&{defaultImport:a},...c&&{namedImports:c},...f&&{namespaceImport:f}})}return r==null?void 0:r.filter(Boolean)},cr=e=>{let t=e.matchAll(mn),r=[];for(let o of t){let[n,s,a,c,f]=o;r.push({statement:n,fromName:s.trim(),toName:c.trim(),afterCharacter:f})}return r},dn=(e,t)=>{var s;let r=e.substring(0,e.indexOf(t.statement)),o=ee(r).pop();return o?r.substring(r.indexOf(o==null?void 0:o.statement)+((s=o==null?void 0:o.statement)==null?void 0:s.length)):r},un=(e,t)=>!!(t?dn(e,t):"").trim(),ar=["react","@refinedev/core","@refinedev/"],lr=e=>{var d;let t=e,r=ee(e),o=r.filter(l=>!l.isType),n=r.filter(l=>l.isType),s=[],a=[];n.forEach(l=>{t=t.replace(`${l.statement}
`,"")}),o.forEach(l=>{un(t,l)?s.push(l):a.push(l)});let c=t.indexOf((d=a==null?void 0:a[0])==null?void 0:d.statement);a.forEach(l=>{t=t.replace(l.statement,"")});let f=a.reduce((l,m)=>{let{importPath:g}=m;return l[g]?l[g].push(m):l[g]=[m],l},{}),v=[...Object.entries(f).map(([l,m])=>{let g=m.find(I=>I.defaultImport),y=m.find(I=>I.namespaceImport),P=m.filter(I=>I.namedImports).map(I=>(I.namedImports??"").replace(/{|}/g,"").trim().split(",").map(Oe=>Oe.trim()).filter(Boolean).join(", ")).join(", "),A="";return y&&(A+=`${y.statement}
`),(g||P)&&(g&&P?A+=`import ${g.defaultImport}, { ${P} } from "${m[0].importPath}";
`:g?A+=`import ${g.defaultImport} from "${m[0].importPath}";
`:A+=`import { ${P} } from "${m[0].importPath}";
`),[l,A]})].sort(([l],[m])=>{let g=ar.findIndex(P=>l.includes(P)),y=ar.findIndex(P=>m.includes(P));return g===y?l.localeCompare(m):g===-1?1:y===-1?-1:g-y}).map(([,l])=>l).join(""),x=[...n.map(l=>l.statement),""].join(`
`);return t=t.substring(0,c)+v+x+t.substring(c),t};var pr=(e,t)=>{let r=ee(e),o=r[r.length-1],n=o?e.indexOf(o.statement):e.length-1;return`${e.slice(0,n+(o==null?void 0:o.statement.length))}
${t}
${e.slice(n+(o==null?void 0:o.statement.length))}`};var mr=require("fs-extra"),dr=require("path");function Ce(e){if(this!=null&&this.absolutePackageDir)try{return(0,mr.readFileSync)((0,dr.join)(this.absolutePackageDir,e)).toString()}catch{return}}var fr=require("module"),fn=fr.prototype.require,gr=(e,t)=>{fr.prototype.require=function(...r){return r[0]==="@refinedev/cli"?{...Ze,getFileContent:o=>Ce.call({absolutePackageDir:t?e:ur.default.join(process.cwd(),e)},o)}:fn.apply(this,r)}};var et=async(e,t)=>{try{return gr(e,t),require(Qe.default.join(t?e:Qe.default.join(process.cwd(),e),"refine.config.js"))}catch{return}};var Ir=i(require("dedent"));var k={SUCCESS:"SUCCESS",UNKNOWN_ERROR:"UNKNOWN_ERROR",SOURCE_PATH_NOT_FOUND:"SOURCE_PATH_NOT_FOUND",TARGET_PATH_NOT_FOUND:"TARGET_PATH_NOT_FOUND",SOURCE_PATH_NOT_A_FILE:"SOURCE_PATH_NOT_A_FILE",TARGET_ALREADY_EXISTS:"TARGET_ALREADY_EXISTS"};var E=i(require("chalk"));var hr=i(require("chalk")),vr=i(require("cardinal")),yr=i(require("boxen")),gn=e=>{let t=/^(?:\/\/\s?title:\s?)(.*?)\n/g,[r,o]=t.exec(e)??[];if(o){let n=o.trim(),s=e.replace(r||"","");return{title:n,code:s}}return{code:e}},wr=e=>{let{title:t,code:r}=gn(e),o="";try{o=vr.default.highlight(r,{jsx:!0})}catch{o=r}return(0,yr.default)(o,{padding:1,margin:0,borderStyle:"round",borderColor:"gray",titleAlignment:"left",title:t?hr.default.bold(t):void 0})};var Pr=require("marked"),xr=i(require("marked-terminal")),Te=e=>(0,Pr.marked)(e,{renderer:new xr.default({code:wr})});var Er=({label:e,files:t,message:r="**`Warning:`** You should use the component where you want to use it."})=>{let o=t.filter(([,p])=>Object.values(k).filter(u=>u!==k.SUCCESS).includes(p)),n="success";switch(o.length){case 0:n="success";break;case t.length:n="error";break;default:n="warning";break}let s=p=>{let u=p==null?void 0:p.replace(process.cwd(),"");return u!=null&&u.startsWith("/")?u.slice(1):u!=null&&u.startsWith("./")?u.slice(2):u},a=()=>{switch(n){case"success":console.log(E.default.blueBright(`Successfully swizzled ${E.default.bold(e)}`));return;case"warning":console.log(E.default.yellowBright(`Swizzle completed with errors for ${E.default.bold(e)}`));return;case"error":console.log(E.default.redBright(`Swizzle failed for ${E.default.bold(e)}`));return;default:return}},c=()=>{let p=[];p.push(E.default.dim(`File${t.length>1?"s":""} created:`)),p.push(t.map(([u,v])=>v===k.SUCCESS?E.default.cyanBright.dim(` - ${s(u)}`):v===k.TARGET_ALREADY_EXISTS?E.default.cyanBright.dim(` - ${E.default.yellowBright.bold("[FILE_ALREADY_EXISTS] ")}${s(u)}`):v===k.SOURCE_PATH_NOT_A_FILE?E.default.cyanBright.dim(` - ${E.default.yellowBright.bold("[SOURCE NOT FOUND] ")}${s(u)}`):E.default.cyanBright.dim(` - ${E.default.yellowBright.bold(`[${v}]`)}${s(u)}`)).join(`
`)),console.log(p.join(`
`))},f=()=>{r&&n!=="error"&&console.log(Te((0,Ir.default)(`
${r}`)))};console.log(""),a(),c(),console.log(""),f()};var Cr=e=>{let t=/(\/\/|\/\*)(\s?)swizzle-remove-start([\s\S]*?)(\/\/|\/\*)(\s?)swizzle-remove-end(\s*)(\*\/)?/g;return e.replace(t,"")};var Dr=i(require("boxen"));var Tr=()=>{let e;try{e=h()}catch{e=void 0}return we(e)};var kr=i(require("inquirer")),Rr=i(require("chalk"));var br=async e=>{await hn(e)?await X(e):await vn(e)},hn=async e=>{let t=`This component requires following packages to be installed:
`.concat(e.map(o=>` - ${o}`).join(`
`)).concat(`
Do you want to install them?`),{installRequiredPackages:r}=await kr.default.prompt([{type:"confirm",name:"installRequiredPackages",default:!0,message:t}]);return r},vn=async e=>{let t=await R(),r=j[t.name].add.join(" "),o=e.join(" "),n=`${t.name} ${r} ${o}`;console.log(`
You can install them manually by running this command:`),console.log(Rr.default.bold.blueBright(n))};var yn=e=>e.command("swizzle").description(`Export a component or a function from ${q.default.bold("Refine")} packages to customize it in your project`).action(wn),Nr=e=>(t,r="")=>e.filter(n=>{var s;return n.label.toLowerCase().includes(r.toLowerCase())||((s=n.group)==null?void 0:s.toLowerCase().includes(r.toLowerCase()))}).flatMap((n,s,a)=>{var p;return[...(n==null?void 0:n.group)&&((p=a[s-1])==null?void 0:p.group)!==n.group&&n.group?[new pe.default.Separator(q.default.bold(n.group))]:[],{name:` ${n.label}`,value:n!=null&&n.value?n.value:n}]}),wn=async e=>{var u,v,x;pe.default.registerPrompt("autocomplete",Sr.default);let t=await ne(),r=[];if(await Promise.all(t.map(async d=>{let l=await ft(d.path),m=r.findIndex(g=>g.name===d.name)===-1;l&&m&&r.push(d)})),r.length===0){console.log("No Refine packages found with swizzle configuration.");return}console.log(`${(0,Dr.default)(`Found ${q.default.blueBright(r.length)} installed ${q.default.blueBright.bold("Refine")} packages with swizzle configuration.`,{padding:1,textAlignment:"center",dimBorder:!0,borderColor:"blueBright",borderStyle:"round"})}
`);let o=await Promise.all(r.map(async d=>{let l=await et(d.path,!0)??await et(d.path,!1)??{swizzle:{items:[]}};return{...d,config:l}})),{selectedPackage:n}=await pe.default.prompt([{type:"autocomplete",pageSize:10,name:"selectedPackage",message:"Which package do you want to swizzle?",emptyText:"No packages found.",source:Nr(o.sort((d,l)=>{var m,g;return(((m=d.config)==null?void 0:m.group)??"").localeCompare(((g=l.config)==null?void 0:g.group)??"")}).map(d=>{var l,m;return{label:((l=d.config)==null?void 0:l.name)??d.name,value:d,group:(m=d.config)==null?void 0:m.group}}))}]),{swizzle:{items:s,transform:a}}=n.config,c;if(s.length===0){console.log(`No swizzle items found for ${q.default.bold(((u=n.config)==null?void 0:u.name)??n.name)}`);return}if(s.length===1?c=s[0]:s.length>1&&(c=(await pe.default.prompt([{type:"list",pageSize:10,name:"selectedComponent",message:"Which component do you want to swizzle?",emptyText:"No components found.",choices:Nr(s.sort((l,m)=>l.group.localeCompare(m.group)))({},"")}])).selectedComponent),!c){console.log(`No swizzle items selected for ${q.default.bold(((v=n.config)==null?void 0:v.name)??n.name)}`);return}let f=Tr(),p=await Promise.all(c.files.map(async d=>{var l;try{let m=d.src?tt.default.join(n.path,d.src):void 0,g=d.dest?tt.default.join(process.cwd(),f,d.dest):void 0;if(!m)return console.log("No src path found for file",d),["",k.SOURCE_PATH_NOT_FOUND];if(!g)return console.log("No destination path found for file",d),["",k.TARGET_PATH_NOT_FOUND];if(!await(0,B.pathExists)(m))return[g,k.SOURCE_PATH_NOT_A_FILE];let P=await(0,B.readFile)(m,"utf-8");if(await(0,B.pathExists)(g))return[g,k.TARGET_ALREADY_EXISTS];await(0,B.ensureFile)(g);let I=Cr(P),L=((l=d.transform)==null?void 0:l.call(d,I))??I,Oe=(a==null?void 0:a(L,m,g))??L,yo=lr(Oe),wo=await We(yo);return await(0,B.writeFile)(g,wo),[g,k.SUCCESS]}catch{return["",k.UNKNOWN_ERROR]}}));p.length>0&&(Er({files:p,label:c.label,message:c.message}),(x=c==null?void 0:c.requiredPackages)!=null&&x.length&&await br(c.requiredPackages))},Ar=yn;var Fr=i(require("inquirer")),Ur=i(require("center-align")),Vr=require("commander"),Br=i(require("@npmcli/package-json"));var te=i(require("inquirer")),rt=i(require("semver-diff")),ke=i(require("chalk"));var Or=e=>{let t=e.filter((o,n)=>e.indexOf(o)!==n),r=new Set(t);return Array.from(r)};var jr=async e=>{let t=xn(e);if(!t){console.log("All `Refine` packages are up to date. \u{1F389}");return}let r=In(t),o=await te.default.prompt([{type:"checkbox",name:"packages",message:"Choose packages to update",pageSize:r.pageSize,choices:r.choices,validate:Pn}]);if(o.packages.length>0){let n={};return o.packages.forEach(s=>{let{name:a,version:c}=Fe(s);n[a]=c??"latest"}),n}return null},Pn=e=>{let r=e.map(n=>Fe(n)).map(n=>n.name),o=Or(r);return o.length>0?`You can't update the same package more than once. Please choice one.
 Duplicates: ${o.join(", ")}`:!0},xn=e=>{if(e.length===0)return null;let t={patch:[],minor:[],major:[]};return e.forEach(r=>{let o=r.current,n=(0,rt.default)(o,r.wanted),s=(0,rt.default)(o,r.latest);if(n===s&&s){t[s].push({name:r.name,from:o,to:r.latest});return}n&&t[n].push({name:r.name,from:o,to:r.wanted}),s&&t[s].push({name:r.name,from:o,to:r.latest})}),t},In=e=>{let t=0,r=0;[e.patch,e.minor,e.major].forEach(p=>{p.forEach(u=>{u.name.length>t&&(t=u.name.length),u.from.length>r&&(r=u.from.length)})}),t+=2;let o=[],n="Package".padEnd(t),s="From".padEnd(r),c=`
   ${n} ${s}${"To".padStart(r)}`;o.push(new te.default.Separator(c)),e.patch.length>0&&(o.push(new te.default.Separator(ke.default.reset.bold.blue(`
Patch Updates`))),e.patch.forEach(p=>{o.push({name:`${p.name.padEnd(t)} ${p.from.padStart(r)} -> ^${p.to}`,value:`${p.name}@^${p.to}`})})),e.minor.length>0&&(o.push(new te.default.Separator(ke.default.reset.bold.blue(`
Minor Updates`))),e.minor.forEach(p=>{o.push({name:`${p.name.padEnd(t)} ${p.from.padStart(r)} -> ^${p.to}`,value:`${p.name}@^${p.to}`})})),e.major.length>0&&(o.push(new te.default.Separator(ke.default.reset.bold.blue(`
Major Updates`))),e.major.forEach(p=>{o.push({name:`${p.name.padEnd(t)} ${p.from.padStart(r)} -> ^${p.to}`,value:`${p.name}@^${p.to}`})}));let f=o.length+6;return{choices:o,pageSize:f}};var J=i(require("chalk"));var En=e=>e.command("update").description("Interactively select and update all `Refine` packages to selected version. To skip the interactive mode, use the `--all` option.").addOption(new Vr.Option("-t, --tag [tag]","Select version to update to.").choices(["next","latest"]).default("wanted","Version ranges in the `package.json` will be installed")).option("-a, --all","Update all `Refine` packages to the selected `tag`. If `tag` is not provided, version ranges in the `package.json` will be installed. This option skips the interactive mode.",!1).option("-d, --dry-run","Get outdated packages installation command without automatic updating. If `tag` is not provided, version ranges in the `package.json` will be used.",!1).action(Cn),Cn=async e=>{let{tag:t,dryRun:r,all:o}=e,n=await N(ae,"Checking for updates...");if(!(n!=null&&n.length)){console.log("All `Refine` packages are up to date \u{1F389}");return}let s=null;if(o){let p=await ot(t,n);if(!p)return;if(r){$r(p);return}_r(p);return}let{table:a,width:c}=he(n)??"";console.log((0,Ur.default)("Available Updates",c)),console.log(a),console.log(`- ${J.default.yellow(J.default.bold("Current"))}: The version of the package that is currently installed`),console.log(`- ${J.default.yellow(J.default.bold("Wanted"))}: The maximum version of the package that satisfies the semver range specified in \`package.json\``),console.log(`- ${J.default.yellow(J.default.bold("Latest"))}: The latest version of the package available on npm`),console.log();let{installationType:f}=await Fr.default.prompt([{type:"list",name:"installationType",message:"Do you want to update all Refine packages for minor and patch versions?",choices:[{name:'Update all packages to latest "minor" version without any breaking changes.',value:"minor"},{name:"Update all packages to the latest version that satisfies the semver(`wanted`) range specified in `package.json`",value:"wanted"},{name:'Use interactive mode. Choose this option for "major" version updates.',value:"interactive"}]}]);f==="interactive"&&(s=await jr(n)),f==="wanted"&&(s=await ot("wanted",n)),f==="minor"&&(s=await ot("minor",n)),s&&(r?$r(s):_r(s))},ot=async(e,t)=>{if(e==="wanted"&&t.every(n=>n.current===n.wanted))return console.log(),console.log("\u2705 All `Refine` packages are already at the wanted version"),null;console.log();let r={};for(let o of t){let n=o.latest;e==="minor"&&(n=`^${await N(()=>bt(o.name,o.wanted),`Checking for the latest minor version of ${o.name}`)}`),e==="wanted"&&(n=Rt(o.name,o.wanted)),e==="latest"&&(n=`^${o.latest}`),e==="next"&&(n="next"),r[o.name]=n}return r},$r=async e=>{let t=await R(),r=j[t.name].add,o="";for(let[n,s]of Object.entries(e))o+=`${n}@${s} `;console.log(),console.log(`${t.name} ${r.join(" ")} ${o}`)},_r=async e=>{console.log("Updating `Refine` packages...");let t=await Br.default.load(process.cwd());t.update({dependencies:{...t.content.dependencies??{},...e??{}}}),await t.save(),X([],"all")},Lr=En;var Mr=i(require("envinfo")),Wr=i(require("ora")),Tn=e=>e.command("whoami").description("View the details of the development environment").action(kn),kn=async()=>{let e=(0,Wr.default)("Loading environment details...").start(),t=await Mr.default.run({System:["OS","CPU"],Binaries:["Node","Yarn","npm"],Browsers:["Chrome","Firefox","Safari"]},{showNotFound:!0,markdown:!0}),o=(await z()||[]).map(n=>` - ${n.name}: ${n.version}`).join(`
`);e.stop(),console.log(t),console.log("## Refine Packages:"),console.log(o)},zr=Tn;var de=i(require("chalk")),ue=i(require("inquirer"));var Kr=i(require("inquirer"));var qr=i(require("execa")),Re=async e=>{let{incompatiblePackages:t,integrationName:r,requiredPackages:o,transformerFileName:n}=e;if(vt(t))return;await ht(o),console.log(`\u{1F680} Setting up ${r}...`);let s=require.resolve(".bin/jscodeshift"),{stderr:a}=qr.default.sync(s,["./","--extensions=ts,tsx,js,jsx","--parser=tsx",`--transform=${__dirname}/../src/transformers/integrations/${n}.ts`,"--ignore-pattern=.cache","--ignore-pattern=node_modules","--ignore-pattern=build","--ignore-pattern=.next","--ignore-pattern=dist"]);a&&console.log(a),console.log(`\u{1F389} ${r} setup completed!`)};var be=i(require("chalk")),Ne=e=>{let{id:t,title:r,description:o,disabled:n}=e;return n?{value:t,name:`${be.default.gray(r)}`,disabled:be.default.redBright(n)}:{value:t,name:`${be.default.blueBright(r)} - ${o}`}};var Jr="ant-design",Rn="Ant Design",bn=["@remix-run/react","next"],Nn=["antd","@refinedev/antd"],Sn="ant-design",Hr={id:Jr,getChoice:e=>{let t="Ant Design",r="Setup Ant Design with Refine",o;return["nextjs","remix"].includes(e)&&(o="Automatic setup only available Vite for now. See the documentation for manual installation: https://refine.dev/docs/ui-integrations/ant-design/introduction/#installation"),Ne({id:Jr,title:t,description:r,disabled:o})},runTransformer:async()=>await Re({incompatiblePackages:bn,integrationName:Rn,requiredPackages:Nn,transformerFileName:Sn})};var Xr="react-router",Dn="React Router",An=["@remix-run/react","next"],On=["react-router-dom","@refinedev/react-router-v6"],jn="react-router",Yr={id:Xr,getChoice:e=>{let t="React Router",r="Setup routing with React Router",o;return e==="nextjs"&&(o="Can't be used with Next.js. https://nextjs.org/docs/app/building-your-application/routing"),e==="remix"&&(o="Can't be used with Remix. https://remix.run/docs/en/main/discussion/routes"),Ne({id:Xr,title:t,description:r,disabled:o})},runTransformer:async()=>await Re({incompatiblePackages:An,integrationName:Dn,requiredPackages:On,transformerFileName:jn})};var H=[Hr,Yr];var nt=()=>{let e=h(),t=H.map(r=>r.getChoice(e));return t.every(r=>r.disabled)?[{value:"none",name:"No integration available for this project type."},...t]:t},Gr=async()=>await Kr.default.prompt([{type:"list",name:"id",message:"Which integration do you want to add?",choices:nt(),default:"none"}]);var Zr=i(require("chalk")),Qr=i(require("inquirer"));var b=require("fs-extra"),D=require("path");var re=[{id:"auth",title:"Auth provider",description:"Manage user authentication and authorization",fileName:"auth-provider.tsx",templateFileName:"demo-auth-provider.tsx.template"},{id:"live",title:"Live provider",description:"Enable real-time updates and synchronization",fileName:"live-provider.tsx",templateFileName:"demo-live-provider.tsx.template"},{id:"data",title:"Data provider",description:"Communicate with your API",fileName:"data-provider.tsx",templateFileName:"demo-data-provider.tsx.template"},{id:"access-control",title:"Access Control",description:"Manage user permissions & roles",fileName:"access-control-provider.tsx",templateFileName:"demo-access-control-provider.tsx.template"},{id:"notification",title:"Notification provider",description:"Display in-app alerts and messages",fileName:"notification-provider.tsx",templateFileName:"demo-notification-provider.tsx.template"},{id:"i18n",title:"I18n provider",description:"Support multiple languages and locales",fileName:"i18n-provider.tsx",templateFileName:"demo-i18n-provider.tsx.template"},{id:"audit-log",title:"Audit Log provider",description:"Display audit logs for your resources",fileName:"audit-log-provider.tsx",templateFileName:"demo-audit-log-provider.tsx.template"}];var $n=`${__dirname}/../templates/provider`,st=`${__dirname}/../templates/assets`,me=(e,t)=>{e.forEach(r=>{let{fileName:o,templateFileName:n}=_n(r),s=we(h()),a=t??it(),c=(0,D.join)(a,o),f=(0,D.join)(process.cwd(),a,o),p=(0,D.join)(process.cwd(),s);if((0,b.pathExistsSync)(f)){console.error(`\u274C Provider (${c}) already exist!`);return}(0,b.mkdirSync)(a,{recursive:!0}),(0,b.copySync)(`${$n}/${n}`,f),console.log(`\u{1F389} Provider (${c}) created successfully!`);let u=[],v=[];if((0,b.pathExistsSync)(`${st}/${r}`))try{(0,b.readdirSync)(`${st}/${r}`,{recursive:!0,withFileTypes:!0}).forEach(x=>{if(!x.isDirectory()){let d=(0,D.join)(x.path,x.name),l=(0,D.join)(p,(0,D.relative)((0,D.join)(st,r),x.path),x.name),m=(0,D.join)(s,(0,D.relative)(p,l));if((0,b.existsSync)(l))v.push(m);else try{(0,b.copySync)(d,l),u.push(m)}catch{v.push(m)}}})}catch{}u.length&&console.log(`\u{1F389} Created additional assets: ${u.join(", ")}`),v.length&&console.error(`\u274C Failed to create assets: ${v.join(", ")}`)})},_n=e=>{let t=re.find(r=>r.id===e);if(!t)throw new Error(`Invalid provider: ${e}`);return t},it=()=>{let e=h(),{path:t}=jt(e);return t};var at=()=>re.map(e=>{let{id:t,title:r,description:o}=e;return{value:t,name:`${Zr.default.blueBright(r)} - ${o}`}}),eo=async()=>await Qr.default.prompt([{type:"checkbox",name:"providers",message:"Which providers do you want to add?",choices:at()},{type:"input",name:"providersPath",message:"Where do you want to generate the providers?",default:it()}]);var to=(e,t)=>t.map(r=>({...r,name:` . ${r.name}`,value:{group:e,component:r.value}})),ro=async()=>await ue.default.prompt([{type:"list",name:"component",message:"What do you want to add?",choices:[new ue.default.Separator(de.default.bold("Provider")),...to("provider",at()),new ue.default.Separator(de.default.bold("Integration")),...to("integration",nt()),new ue.default.Separator(de.default.bold("Resource")),{name:de.default.blueBright(" .  Add new resource"),value:{group:"resource",component:"resource"}}],pageSize:25}]);var Se=require("commander");var Fn=async e=>{let t=e;t||(t=(await Gr()).id);let r=H.find(o=>o.id===t);r&&await r.runTransformer()},oo=new Se.Command("integration").addArgument(new Se.Argument("[name]","Name of the integration").choices(H.map(e=>e.id))).action(Fn);var De=require("commander");var Un=async(e,t)=>{if(!e.length){let{providers:r,providersPath:o}=await eo();return me(r,o)}me(e,t.path)},no=new De.Command("provider").addArgument(new De.Argument("[providers...]","Create provider(s)").choices(re.map(e=>e.id)).default([])).option("-p, --path [path]","Path to generate providers").action(Un);var Ae=require("commander");var Vn=async(e,t,r)=>{K({actions:t==null?void 0:t.actions,path:r.optsWithGlobals().path},e)},so=new Ae.Command("resource").addArgument(new Ae.Argument("[resources...]","Create new resource(s)")).option("-p, --path [path]","Path to generated resource files").option("-a, --actions [actions]","Only generate the specified resource actions. (ex: list,create,edit,show)","list,create,edit,show").action(Vn);var Bn=e=>e.command("add").description("Add new resources, providers, or integrations").allowExcessArguments(!1).action(Ln).addCommand(so).addCommand(no).addCommand(oo),Ln=async()=>{let{component:e}=await ro();if(e.group==="provider"&&me([e.component]),e.group==="integration"){let t=H.find(r=>r.id===e.component);await(t==null?void 0:t.runTransformer())}e.group==="resource"&&await K({},[])},io=Bn;var ao=i(require("envinfo")),co=i(require("os")),Mn=()=>{let e=co.default.type();return{Darwin:"macOS",Linux:"Linux",Windows_NT:"Windows"}[e]},lo=async()=>{let[e,t]=await ao.default.helpers.getOSInfo();return{name:Mn(),version:t}};var po=i(require("node-fetch")),Wn=async()=>{let e=await lo();return{nodeEnv:S.NODE_ENV,nodeVersion:process.version,os:e.name,osVersion:e.version,command:process.argv[2],packages:await z()||[],projectFramework:h(),projectId:gt()}},mo=async()=>{if(S.REFINE_NO_TELEMETRY!=="true")try{let e=await Wn();await(0,po.default)("https://telemetry.refine.dev/cli",{method:"POST",body:JSON.stringify(e),headers:{"Content-Type":"application/json"}})}catch{}};var uo=i(require("gray-matter")),fo=i(require("boxen"));var zn="https://raw.githubusercontent.com/refinedev/refine/master/packages/cli/ANNOUNCEMENTS.md",ct="---announcement",qn=e=>e.split(ct).slice(1).map(r=>`${ct}${r}`),Jn=e=>{let t=e.replace(ct,"---"),r=(0,uo.default)(t),o=(r.content.length===0?t.replace(/---/g,""):r.content.replace(/---/g,"")).trim();return{...r.data,content:o}},Hn=async()=>{try{let e=await fetch(zn).then(r=>r.text()).catch(()=>"");return qn(e).map(r=>Jn(r))}catch{return[]}},go=async()=>{let t=(await Hn()).filter(o=>!o.hidden);if(t.length===0)return;let r=t.map(o=>{let n=t.length>1?"\u2014 ":"",s=Te(o.content);return`${n}${s}`}).join("").trim();console.log((0,fo.default)(r,{padding:1,margin:0,borderStyle:"round",borderColor:"blueBright",titleAlignment:"left"}))};var Xn="1.0.0",Yn=()=>{let e=new ho.Command;e.version(`@refinedev/cli@${Xn}`,"-v, --version","Output the current version.").description(vo.default.textSync("refine",{font:"Isometric1",horizontalLayout:"full",verticalLayout:"full",whitespaceBreak:!0})).usage("<command> [options]").helpOption("-h, --help","Output usage information."),Ar(e),Vt(e),Lr(e),Xe(e),Ye(e),Me(e),Ge(e),Nt(e),zr(e),sr(e),io(e),e.hook("preAction",async t=>{t.args.includes("dev")&&await go()}),e.hook("postAction",t=>{let r=t.args[0];["run"].includes(r)||mo()}),e.parse(process.argv),process.argv.slice(2).length||e.outputHelp()};Yn();
//# sourceMappingURL=cli.cjs.map