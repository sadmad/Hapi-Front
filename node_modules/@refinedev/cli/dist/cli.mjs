#!/usr/bin/env node
var wr=Object.defineProperty;var y=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(t,r)=>(typeof require<"u"?require:t)[r]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw new Error('Dynamic require of "'+e+'" is not supported')});var Pr=(e,t)=>{for(var r in t)wr(e,r,{get:t[r],enumerable:!0})};import{Command as ls}from"commander";import ps from"figlet";import _ from"chalk";import Ee from"center-align";import xr from"ora";var Ir=async(e,t)=>{let r=xr({color:"cyan",text:t}).start(),o=await e();return r.stop(),o},R=Ir;import ne from"execa";import{existsSync as Er,pathExists as He,readFileSync as Cr,readJSON as Tr}from"fs-extra";import kr from"globby";import Je from"path";import Rr from"preferred-pm";var D=()=>{if(!Er("package.json"))throw new Error("./package.json not found");return JSON.parse(Cr("package.json","utf8"))},$=()=>{let e=D();return Object.keys(e.dependencies||{})},Xe=()=>{let e=D();return(e==null?void 0:e.dependencies)||{}},Ye=()=>{let e=D();return Object.keys(e.devDependencies||{})},br=()=>[...$(),...$()],se=()=>{let e=D();return(e==null?void 0:e.scripts)||{}},F=async()=>{var e;try{let t=await ne("npm",["ls","--depth=0","--json"],{reject:!1}),r=((e=JSON.parse(t.stdout))==null?void 0:e.dependencies)||{},o=Object.keys(r).filter(s=>s.startsWith("@refinedev")||s.startsWith("@pankod/refine-")),n=[];for(let s of o){let i=r[s].version;n.push({name:s,version:i})}return n}catch{return Promise.resolve(null)}},K=async()=>{let e=["ably","airtable","antd","appwrite","chakra-ui","codemod","core","devtools","devtools-internal","devtools-server","devtools-shared","devtools-ui","graphql","hasura","inferencer","kbar","mantine","medusa","mui","nestjs-query","nestjsx-crud","nextjs-router","react-hook-form","react-router-v6","react-table","remix-router","shared","simple-rest","strapi","strapi-v4","supabase"];try{let t=await kr("node_modules/@refinedev/*",{onlyDirectories:!0}),r=e.flatMap(n=>{try{let s=y.resolve(Je.join("@refinedev",n,"package.json"));return[Je.dirname(s)]}catch{return[]}}),o=[];return await Promise.all([...r,...t].map(async n=>{if(await He(`${n}/package.json`)){let i=await Tr(`${n}/package.json`);o.push({name:i.name,version:i.version,path:n})}})),o}catch{return[]}},Ke=async e=>await He(`${e}/refine.config.js`),S={npm:{add:["install","--save"],addDev:["install","--save-dev"],outdatedJson:["outdated","--json"],install:["install"]},yarn:{add:["add"],addDev:["add","-D"],outdatedJson:["outdated","--json"],install:["install"]},pnpm:{add:["add"],addDev:["add","-D"],outdatedJson:["outdated","--format","json"],install:["install"]},bun:{add:["add"],addDev:["add","--dev"],outdatedJson:["outdated","--format","json"],install:["install"]}},k=async()=>{let e=await R(()=>Rr(process.cwd()),"Getting package manager...");if(!e)throw new Error("Package manager not found.");return e},L=async(e,t="all",r="All `Refine` packages updated  \u{1F389}")=>{let o=await k();try{let n=t==="all"?S[o.name].install:S[o.name].add,s=ne(o.name,[...n,...e],{stdio:"inherit"});s.on("message",i=>{console.log(i)}),s.on("error",i=>{console.log(i)}),s.on("exit",i=>{if(i===0){console.log(r);return}console.log(`Application exited with code ${i}`)})}catch(n){throw new Error(n)}},Pe=async e=>{let t=await k();try{let r=S[t.name].add,o=ne.sync(t.name,[...r,...e],{stdio:"inherit"});if(o.failed||o.exitCode!==0)throw new Error(o.stderr);return o}catch(r){throw new Error(r)}},xe=e=>{let t=e.lastIndexOf("@");return t<=0?{name:e,version:null}:{name:e.slice(0,t),version:e.slice(t+1)}},Ge=()=>{var t;let e=D();return(t=e==null?void 0:e.refine)==null?void 0:t.projectId},ie=async()=>(await K()).some(t=>t.name==="@refinedev/devtools"),Nr=e=>{let t=$();return e.filter(r=>!t.includes(r))},Ze=async e=>{console.log("\u{1F331} Checking dependencies...");let t=Nr(e);t.length>0?(console.log(`\u{1F331} Installing ${t.join(", ")}`),await Pe(t),console.log("\u{1F389} Installation complete...")):console.log("\u{1F389} All required packages are already installed")},Qe=e=>{let t=br(),r=e.filter(o=>t.includes(o));return r.length>0?(console.log(`\u{1F6A8} This feature doesn't support ${r.join(", ")} package.`),!0):!1},et=async e=>{let t="npm",{stdout:r,timedOut:o}=await ne(t,["view",e,"versions","--json"],{reject:!1,timeout:25e3});o&&(console.log("\u274C Timed out while checking for updates."),process.exit(1));let n=[];try{n=JSON.parse(r),(!n||"error"in n)&&(console.log("\u274C Something went wrong while checking for updates."),process.exit(1))}catch{console.log("\u274C Something went wrong while checking for updates."),process.exit(1)}return n},tt=async e=>{let t=await F();return t?t.some(r=>r.name===e):!1};import Sr from"cli-table3";import ae from"chalk";var rt=e=>e.charAt(0).toUpperCase()+e.slice(1),ot=e=>e.replace(/[\u001b\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g,"");var G={name:"name",current:"current",wanted:"wanted",latest:"latest",changelog:"changelog"},Ie=[G.name,G.current,G.wanted,G.latest,G.changelog],ce=(e=[])=>{var x;let t=Object.keys((e==null?void 0:e[0])||{});if(!e||!t.length)return{table:"",width:0};let r=process.stdout.columns||80,o=Math.max(...e.map(m=>m.name.length))+2,n=7+2,s=6,i=Math.min(35,r-o-n*3-s),a={name:o,current:n,wanted:n,latest:n,changelog:i},u=new Sr({head:Ie,wordWrap:!1,wrapOnWordBoundary:!0,colWidths:Ie.map(m=>a[m]),style:{head:["blue"]}}),l=(m,c)=>{if(m.length>c){let p=c-3,f=m.slice(0,Math.floor(p/2)),v=m.slice(-Math.ceil(p/2));return`${f}...${v}`}return m};e.forEach(m=>{u.push(Ie.map(c=>{let p=m[c];if(!p)return p;if(c==="latest"||c==="wanted"){let f=nt(m.current),v=nt(p),P=Dr(f,v),N=ae[P.major](v.major),I=ae[P.minor](v.minor),j=ae[P.patch](v.patch);return`${N}.${I}.${j}`}return c==="changelog"?ae.blueBright.underline(p):p}))});let d=u.toString(),h=ot(((x=d.split(`
`))==null?void 0:x[0])||"").length;return{table:d,width:h}},nt=e=>{let t=e.split(".");return{major:t[0],minor:t[1],patch:t[2]}},Dr=(e,t)=>e.major.trim()!==t.major.trim()?{major:"red",minor:"red",patch:"red"}:e.minor.trim()!==t.minor.trim()?{major:"white",minor:"yellow",patch:"yellow"}:e.patch.trim()!==t.patch.trim()?{major:"white",minor:"white",patch:"green"}:{major:"white",minor:"white",patch:"white"};var le=async e=>{let t=e==null?void 0:e.data,r=Object.keys((t==null?void 0:t[0])||{});if(!t||!r.length)return;let{table:o,width:n}=ce(t);console.log(),console.log(Ee("Update Available",n)),console.log(),console.log(`- ${_.yellow(_.bold("Current"))}: The version of the package that is currently installed`),console.log(`- ${_.yellow(_.bold("Wanted"))}: The maximum version of the package that satisfies the semver range specified in \`package.json\``),console.log(`- ${_.yellow(_.bold("Latest"))}: The latest version of the package available on npm`),console.log(o),console.log(Ee(`To update ${_.bold("`Refine`")} packages with wanted version`,n)),console.log(Ee(` Run the following command: ${_.yellowBright(await Ar())}`,n)),console.log()},Ar=async()=>{let e="npx @refinedev/cli update",t=$(),r=Object.keys(se()),o=t.includes("@refinedev/cli"),n=r.includes("refine");if(!o&&!n)return e;let s=await k();return n?`${s.name} run refine update`:o?"npx refine update":e};import Or from"execa";import jr from"semver-diff";import{maxSatisfying as $r}from"semver";var _r=e=>e.command("check-updates").description("Check all installed `Refine` packages are up to date").action(Fr),Fr=async()=>{let e=await R(Z,"Checking for updates...");if(!e.length){console.log("All `Refine` packages are up to date \u{1F389}\n");return}await le({data:e})},Z=async()=>await Ur(),Ur=async()=>{let e=await Vr();if(!e)return[];let t=[];return Object.keys(e).forEach(o=>{let n=e[o];o.includes("@refinedev")&&t.push({...n,name:o,changelog:o.replace(/@refinedev\//,"https://c.refine.dev/")})}),t.filter(o=>!!jr(o.current,o.latest))},Vr=async()=>{let e="npm",{stdout:t,timedOut:r}=await Or(e,S[e].outdatedJson,{reject:!1,timeout:25e3});if(r)throw new Error("Timed out while checking for updates.");return t?JSON.parse(t):null},st=(e,t)=>{let o=Xe()[e];return o?o==="latest"?"latest":o==="*"?"*":[">","<",">=","<=","||"].some(n=>o.includes(n))?o:o!=null&&o.includes("x")?`${o}`:o!=null&&o.startsWith("~")?`~${t}`:o!=null&&o.startsWith("^")?`^${t}`:t:`^${t}`},it=async(e,t)=>{let r=await et(e);return $r(r,`^${t}`)??t},at=_r;var w=(a=>(a.REACT_SCRIPT="react-scripts",a.REMIX="remix",a.NEXTJS="nextjs",a.VITE="vite",a.CRACO="craco",a.PARCEL="parcel",a.UNKNOWN="unknown",a))(w||{});var Ce=(n=>(n.ANTD="antd",n.MUI="mui",n.MANTINE="mantine",n.CHAKRA="chakra-ui",n))(Ce||{});var ct=(o=>(o.NPM="npm",o.YARN="yarn",o.PNPM="pnpm",o))(ct||{});var g=e=>{if(e)return e;let t=$(),r=Ye();return t.includes("@craco/craco")||r.includes("@craco/craco")?"craco":t.includes("react-scripts")||r.includes("react-scripts")?"react-scripts":t.includes("next")||r.includes("next")?"nextjs":t.includes("@remix-run/react")||r.includes("@remix-run/react")?"remix":t.includes("vite")||r.includes("vite")?"vite":t.includes("parcel")||r.includes("parcel")?"parcel":"unknown"},lt=()=>{let e=$();if(e.includes("@refinedev/antd"))return"antd";if(e.includes("@refinedev/mui"))return"mui";if(e.includes("@refinedev/chakra-ui"))return"chakra-ui";if(e.includes("@refinedev/mantine"))return"mantine"},pt=e=>{switch(e){case"react-scripts":return"REACT_APP_REFINE_DEVTOOLS_PORT";case"nextjs":return"NEXT_PUBLIC_REFINE_DEVTOOLS_PORT";case"vite":return"VITE_REFINE_DEVTOOLS_PORT";default:return"REFINE_DEVTOOLS_PORT"}};import Br from"camelcase";var Q=e=>{switch(e){case"nextjs":return{path:"src/components",alias:"../src/components"};case"remix":return{path:"app/components",alias:"~/components"}}return{path:"src/pages",alias:"pages"}},mt=e=>{switch(e){case"nextjs":return{path:"src/providers",alias:"../src/providers"};case"remix":return{path:"app/providers",alias:"~/providers"}}return{path:"src/providers",alias:"providers"}},pe=e=>{switch(e){case"remix":return"./app";default:return"./src"}},dt=e=>Br(e,{preserveConsecutiveUppercase:!0,pascalCase:!0});import U from"handlebars";import{readFileSync as Lr,readdirSync as Mr,createFileSync as Wr,writeFileSync as zr,unlinkSync as qr}from"fs-extra";var Jr=(e,t)=>{let r=Lr(e);return U.registerHelper("ifIn",(n,s,i)=>n.includes(s)?i.fn(U):i.inverse(U)),U.registerHelper("formatInferencerComponent",n=>{if(n)switch(n){case"chakra-ui":return"ChakraUI";default:return n.charAt(0).toUpperCase()+n.slice(1)}}),U.registerHelper("capitalize",n=>{if(n)return n.charAt(0).toUpperCase()+n.slice(1)}),U.registerHelper("getComponentNameByResource",n=>{if(n)return dt(n)}),U.compile(r.toString())(t)},Te=(e,t)=>{Mr(e,{recursive:!0}).forEach(o=>{if(typeof o!="string"||!o.endsWith(".hbs"))return;let n=`${e}/${o}`,s=`${e}/${o.replace(".hbs","")}`;Wr(s),zr(s,Jr(n,t)),qr(n)})};import Hr from"execa";import{copySync as ft,mkdirSync as gt,moveSync as Xr,pathExistsSync as ut,unlinkSync as Yr}from"fs-extra";import Kr from"inquirer";import{join as te}from"path";import{plural as Gr}from"pluralize";import ke from"temp";var ee=["list","create","edit","show"],M=async(e,t)=>{var s;let r=(e==null?void 0:e.path)||Q(g()).path,o=e.actions||ee.join(",");if(!t.length){let{name:i,selectedActions:a}=await Kr.prompt([{type:"input",name:"name",message:"Resource Name (users, products, orders etc.)",validate:u=>u?!0:"Resource Name is required"},{type:"checkbox",name:"selectedActions",message:"Select Actions",choices:ee,default:(s=e==null?void 0:e.actions)==null?void 0:s.split(",")}]);t=[i],o=a.join(",")}let n=!1;t.forEach(i=>{let a=o?o.split(","):void 0,u=Gr(i).toLowerCase(),l=te(process.cwd(),r,u);if(ut(l)){console.error(`\u274C Resource (${te(r,u)}) already exist!`);return}n=!0;let d=rt(i),h=lt(),m=g()==="nextjs",c=`${Re()}/../templates/resource/components`,p=Zr();ft(c,p);let f={resourceName:i,resource:d,actions:a||ee,uiFramework:h,isNextJs:m};Te(p,f),a&&ee.forEach(j=>{a.includes(j)||Yr(`${p}/${j}.tsx`)}),gt(r,{recursive:!0});let v=`${r}/${u}`,P={};ut(v)&&(P={overwrite:!0}),Xr(p,v,P),ke.cleanupSync(),m&&Qr(d,u,a||ee);let N=y.resolve(".bin/jscodeshift"),{stderr:I}=Hr.sync(N,["./","--extensions=ts,tsx,js,jsx","--parser=tsx",`--transform=${Re()}/../src/transformers/resource.ts`,"--ignore-pattern=.cache","--ignore-pattern=node_modules","--ignore-pattern=build","--ignore-pattern=.next","--ignore-pattern=dist",`--__actions=${f.actions}`,`--__pathAlias=${Q(g()).alias}`,`--__resourceFolderName=${u}`,`--__resource=${d}`,`--__resourceName=${i}`]);I&&console.log(I),console.log(`\u{1F389} Resource (${v}) generated successfully!`)}),n&&eo()},Re=()=>__dirname,Zr=()=>(ke.track(),ke.mkdirSync("resource")),Qr=(e,t,r)=>{let o=te(process.cwd(),"src/app/",t),n={list:"/",create:"/create",edit:"/edit/[id]",show:"/show/[id]"};r.forEach(i=>{let a=n[i],u=te(o,a);gt(u,{recursive:!0});let l=`${Re()}/../templates/resource/pages/next/${a}/page.tsx.hbs`,d=te(u,"page.tsx.hbs");ft(l,d)}),Te(o,{resource:e,resourceFolderName:t})},eo=async()=>{console.log(),await R(()=>tt("@refinedev/inferencer"),"Checking if '@refinedev/inferencer' package is installed...")||(console.log("\u{1F4E6} Installing '@refinedev/inferencer' package..."),await L(["@refinedev/inferencer@latest"],"add","\u2705 '@refinedev/inferencer' package installed successfully!"))};var to=e=>{let t=g(),{path:r}=Q(t);return e.command("create-resource").allowExcessArguments(!0).description('Create a new resource files (deprecated, please use "add resource" command)').option("-a, --actions [actions]","Only generate the specified actions. (ex: list,create,edit,show)","list,create,edit,show").option("-p, --path [path]","Path to generate the resource files",r).action(ro)},ro=async(e,t)=>{M(e,t.args)},ht=to;import{Option as go}from"commander";import so from"conf";import io from"chalk";import*as vt from"dotenv";var yt={};vt.config({processEnv:yt});var oo={development:/dev/i,production:/prod/i,test:/test|tst/i,"continuous-integration":/ci/i,"user-acceptance-testing":/uat/i,"system-integration-testing":/sit/i},no=()=>{let e=process.env.NODE_ENV;if(!e)return"development";let t="custom";for(let[r,o]of Object.entries(oo))if(o.test(e)){t=r;break}return t},me=e=>process.env[e]||yt[e],b={NODE_ENV:no(),REFINE_NO_TELEMETRY:me("REFINE_NO_TELEMETRY")||"false",UPDATE_NOTIFIER_IS_DISABLED:me("UPDATE_NOTIFIER_IS_DISABLED")||"false",UPDATE_NOTIFIER_CACHE_TTL:me("UPDATE_NOTIFIER_CACHE_TTL")||1e3*60*60*24,REFINE_DEVTOOLS_PORT:me("REFINE_DEVTOOLS_PORT")};var wt=e=>typeof btoa<"u"?btoa(e):Buffer.from(e).toString("base64");var ao="refine-update-notifier",A=new so({projectName:ao,defaults:{key:"",lastUpdated:0,packages:[]}}),W=async()=>{if(uo())return;let e=await lo();if(e!==null){if(e){Pt();return}co(),Pt()}},co=async()=>{let e=A.get("packages");e!=null&&e.length&&(await le({data:e}),console.log(`
`))},lo=async()=>{let e=await mo(),t=po();return e===null?null:!!(t||!e)},Pt=async()=>{try{let e=await Z();return A.set("packages",e),A.set("lastUpdated",Date.now()),A.set("key",await xt()),e}catch{return A.set("packages",[]),A.set("lastUpdated",Date.now()),A.set("key",""),null}},po=()=>{let e=A.get("lastUpdated");if(!e)return!0;let r=Date.now()-e,o=Number(b.UPDATE_NOTIFIER_CACHE_TTL);return r>=o},mo=async()=>{let e=A.get("key"),t=await xt();return t===null?null:e===t},xt=async()=>{let e=await F();if(!e)return console.error(io.red("Something went wrong when trying to get installed `Refine` packages.")),null;let t=e.map(o=>`${o.name}@${o.version}`);return wt(t.toString())},uo=()=>b.UPDATE_NOTIFIER_IS_DISABLED.toLocaleLowerCase()==="true";var C={["react-scripts"]:{getDev:e=>["start",...e],getStart:e=>["start",...e],getBuild:e=>["build",...e],getBin:()=>y.resolve(".bin/react-scripts")},["vite"]:{getDev:e=>["dev",...e],getStart:e=>["preview",...e],getBuild:e=>["build",...e],getBin:()=>y.resolve(".bin/vite")},["nextjs"]:{getDev:e=>["dev",...e],getStart:e=>["start",...e],getBuild:e=>["build",...e],getBin:()=>y.resolve(".bin/next")},["remix"]:{getDev:e=>["dev",...e],getStart:e=>(e==null?void 0:e.length)?e:(console.log(),console.warn("\u{1F6A8} Remix requires a path to the entry file. Please provide it as an argument to `refine start` command in package.json scripts"),console.warn("Refine will use `./build/index.js` as default"),console.warn("Example: `refine start ./build/index.js`"),console.log(),["./build/index.js"]),getBuild:e=>["build",...e],getBin:e=>{let t=e==="start"?"remix-serve":"remix";return y.resolve(`.bin/${t}`)}},["craco"]:{getDev:e=>["start",...e],getStart:e=>["start",...e],getBuild:e=>["build",...e],getBin:()=>y.resolve(".bin/craco")},["parcel"]:{getDev:e=>["start",...e],getStart:e=>["start",...e],getBuild:e=>["build",...e],getBin:()=>y.resolve(".bin/parcel")},["unknown"]:{getDev:e=>[...e],getStart:e=>[...e],getBuild:e=>[...e],getBin:()=>"unknown"}};import fo from"execa";var O=async(e,t,r={})=>{var n,s;if(e==="unknown"){let i=Object.values(w).filter(a=>a!=="unknown").join(", ");console.error(`We couldn't find executable for your project. Supported executables are ${i}.
Please use your own script directly. If you think this is an issue, please report it at: https://github.com/refinedev/refine/issues`);return}let o=fo(e,t,{stdio:"pipe",windowsHide:!1,env:{FORCE_COLOR:"true",REFINE_NO_TELEMETRY:b.REFINE_NO_TELEMETRY,...r,...process.env}});return(n=o.stdout)==null||n.pipe(process.stdout),(s=o.stderr)==null||s.pipe(process.stderr),await o};var z=e=>{let t=g(),r=[];switch(e){case"dev":r=C[t].getDev([""]);break;case"start":r=C[t].getStart([""]);break;case"build":r=C[t].getBuild([""]);break}return t==="remix"&&e==="start"&&(t="remix-serve"),`It runs: \`${t} ${r.join(" ")}\`. Also accepts all the arguments \`${t}\` accepts.`},q=()=>`Platform to run command on. 
ex: ${Object.values(w).join(", ")}`;var ho=e=>e.command("start").description(z("start")).allowUnknownOption(!0).addOption(new go("-p, --platform <platform>",q()).choices(Object.values(w).filter(t=>t!=="unknown"))).argument("[args...]").action(vo),vo=async(e,{platform:t})=>{let r=g(t),o=C[r].getBin("start"),n=C[r].getStart(e);await W(),O(o,n)},be=ho;import{Option as bt}from"commander";import{server as xo}from"@refinedev/devtools-server";import Po from"execa";import{format as yo,resolveConfig as wo}from"prettier";var Ne=async e=>{try{let t=await wo(process.cwd());return yo(e,{...t??{},parser:"typescript"})}catch{return e}};var It=async()=>{let e=y.resolve(".bin/jscodeshift"),{stderr:t}=Po.sync(e,["./","--extensions=ts,tsx,js,jsx","--parser=tsx",`--transform=${__dirname}/../src/transformers/add-devtools-component.ts`,"--ignore-pattern=.cache","--ignore-pattern=node_modules","--ignore-pattern=build","--ignore-pattern=.next","--ignore-pattern=dist"]);t&&console.log(t)};var Et=()=>{let t=D().scripts||{};return{dev:((t==null?void 0:t.dev)||"").match(/refine dev(\s|$|;){1}/)!==null}};import Io from"boxen";import Eo from"cardinal";import Ct from"chalk";import{Argument as Co}from"commander";import To from"dedent";import De from"semver";var ko=["start","init"],Ro="start",Tt="4.42.0",bo=e=>e.command("devtools").description("Start or install Refine Devtools server; it starts on port 5001.").addArgument(new Co("[command]","devtools related commands").choices(ko).default(Ro)).addHelpText("after",`
Commands:
    start     Start Refine Devtools server
    init      Install Refine Devtools client and adds it to your project
`).action(No),No=async e=>{switch(e){case"start":Ae();return;case"init":So();return}},So=async()=>{var n;let e=await Se();if(await R(ie,"Checking if devtools is installed...")){console.log("\u{1F389} Refine Devtools is already installed");return}if(e&&await kt({pkg:e}))return;console.log("\u{1F331} Installing Refine Devtools...");let r=["@refinedev/devtools@latest"];if((!e||De.lt(e.version,Tt))&&(r.push("@refinedev/core@latest"),console.log("\u{1F331} Refine core package is being updated for devtools...")),await Pe(r),console.log(""),console.log(""),console.log("\u{1F331} Adding devtools component to your project...."),await It(),console.log("\u2705 Refine Devtools package and components added to your project"),r.includes("@refinedev/core@latest")){let s=await Se();console.log(`\u2705 Refine core package updated from ${(e==null?void 0:e.version)??"unknown"} to ${(s==null?void 0:s.version)??"unknown"}`),console.log(`   Changelog: ${Ct.underline.blueBright(`https://c.refine.dev/core#${(e==null?void 0:e.version.replaceAll(".",""))??""}`)}`)}console.log("");let{dev:o}=Et();if(o){console.log(`\u{1F64C} You're good to go. "npm run dev" will automatically starts the devtools server.`),console.log('\u{1F449} You can also start the devtools server manually by running "refine devtools start"');return}if(!o){let s=(n=D().scripts)==null?void 0:n.dev;console.log('\u{1F6A8} Your have modified the "dev" script in your package.json. Because of that, "npm run dev" will not start the devtools server automatically.'),console.log('\u{1F449} You can append "refine devtools" to "dev" script'),console.log('\u{1F449} You can start the devtools server manually by running "refine devtools"'),console.log(""),console.log(Io(Eo.highlight(To(`
                {
                    "scripts": {
                        "dev": "${s} & refine devtools",
                        "refine": "refine"
                    }
                }  
        `)),{padding:1,title:"package.json",dimBorder:!0,borderColor:"blueBright",borderStyle:"round"}))}},Ae=async({exitOnError:e=!0}={})=>{let t=await Se();if(t){if(await kt({pkg:t}))return;if(De.lt(t.version,Tt)){console.log(`\u{1F6A8} You're using an old version of Refine(${t.version}). Refine version should be @4.42.0 or higher to use devtools.`);let r=await k();console.log(`\u{1F449} You can update @refinedev/core package by running "${r.name} run refine update"`);return}}xo({onError:()=>{e&&process.exit(1)}}).catch(r=>{})},Se=async()=>{let e=await K(),t=e==null?void 0:e.find(r=>r.name==="@refinedev/core"||r.name==="@pankod/refine-core");if(t)return t},kt=async({pkg:e})=>e.name==="@pankod/refine-core"||De.lt(e.version,"4.0.0")?(console.log(`\u{1F6A8} You're using an old version of Refine(${e.version}). Refine version should be @4.42.0 or higher to use devtools.`),console.log("You can follow migration guide to update Refine."),console.log(Ct.blue("https://refine.dev/docs/migration-guide/3x-to-4x/")),!0):!1,Rt=bo;var Do=e=>e.command("dev").description(z("dev")).allowUnknownOption(!0).addOption(new bt("-p, --platform <platform>",q()).choices(Object.values(w).filter(t=>t!=="unknown"))).addOption(new bt("-d, --devtools <devtools>","Start Refine Devtools server").default("true","true if devtools is installed")).argument("[args...]").action(Ao),Ao=async(e,{platform:t,...r})=>{let o=g(t),n=C[o].getBin("dev"),s=C[o].getDev(e);await W();let i=pt(o),a=await ie(),u=r.devtools==="false"?!1:a;u&&Ae({exitOnError:!1});let l=u&&b.REFINE_DEVTOOLS_PORT?{[i]:b.REFINE_DEVTOOLS_PORT}:void 0;O(n,s,l)},Oe=Do;import{Option as Oo}from"commander";var jo=e=>e.command("build").description(z("build")).allowUnknownOption(!0).addOption(new Oo("-p, --platform <platform>",q()).choices(Object.values(w).filter(t=>t!=="unknown"))).argument("[args...]").action($o),$o=async(e,{platform:t})=>{let r=g(t),o=C[r].getBin("build"),n=C[r].getBuild(e);await W();try{await O(o,n)}catch{process.exit(1)}},je=jo;import Nt from"chalk";var _o=e=>e.command("run").description("Runs a defined package script. If no `command` is provided, it will list the available scripts").allowUnknownOption(!0).argument("[command] [args...]").action(Fo),Fo=async e=>{let[t,...r]=e,o=se();if(!t){console.log(`Available via ${Nt.blue("`refine run`")}:
`);for(let[i,a]of Object.entries(o))console.log(`  ${i}`),console.log(`    ${Nt.dim(a)}`),console.log();return}if(!Object.keys(o).includes(t)){let i=`${process.cwd()}/node_modules/.bin/${t}`;O(i,r);return}let s=await k();O(s.name,["run",t,...r])},$e=_o;import Mt from"path";import H from"chalk";import fe from"inquirer";import on from"inquirer-autocomplete-prompt";import{ensureFile as nn,pathExists as Wt,readFile as sn,writeFile as an}from"fs-extra";import _t from"path";import zo from"path";var _e={};Pr(_e,{PackageManagerTypes:()=>ct,ProjectTypes:()=>w,UIFrameworks:()=>Ce,appendAfterImports:()=>Ot,getFileContent:()=>de,getImports:()=>J,getNameChangeInImport:()=>Dt});var Uo=/import(?:\s+(type))?\s*(?:([^\s\{\},]+)\s*(?:,\s*)?)?(\{[^}]+\})?\s*(?:\*\s*as\s+([^\s\{\}]+)\s*)?from\s*['"]([^'"]+)['"];?/g,Vo=/((?:\w|\s|_)*)( as )((?:\w|\s|_)*)( |,)?/g,J=e=>{let t=e.matchAll(Uo),r=[];for(let o of t){let[n,s,i,a,u,l]=o;r.push({isType:s==="type",statement:n,importPath:l,...i&&{defaultImport:i},...a&&{namedImports:a},...u&&{namespaceImport:u}})}return r==null?void 0:r.filter(Boolean)},Dt=e=>{let t=e.matchAll(Vo),r=[];for(let o of t){let[n,s,i,a,u]=o;r.push({statement:n,fromName:s.trim(),toName:a.trim(),afterCharacter:u})}return r},Bo=(e,t)=>{var s;let r=e.substring(0,e.indexOf(t.statement)),o=J(r).pop();return o?r.substring(r.indexOf(o==null?void 0:o.statement)+((s=o==null?void 0:o.statement)==null?void 0:s.length)):r},Lo=(e,t)=>!!(t?Bo(e,t):"").trim(),St=["react","@refinedev/core","@refinedev/"],At=e=>{var m;let t=e,r=J(e),o=r.filter(c=>!c.isType),n=r.filter(c=>c.isType),s=[],i=[];n.forEach(c=>{t=t.replace(`${c.statement}
`,"")}),o.forEach(c=>{Lo(t,c)?s.push(c):i.push(c)});let a=t.indexOf((m=i==null?void 0:i[0])==null?void 0:m.statement);i.forEach(c=>{t=t.replace(c.statement,"")});let u=i.reduce((c,p)=>{let{importPath:f}=p;return c[f]?c[f].push(p):c[f]=[p],c},{}),h=[...Object.entries(u).map(([c,p])=>{let f=p.find(I=>I.defaultImport),v=p.find(I=>I.namespaceImport),P=p.filter(I=>I.namedImports).map(I=>(I.namedImports??"").replace(/{|}/g,"").trim().split(",").map(we=>we.trim()).filter(Boolean).join(", ")).join(", "),N="";return v&&(N+=`${v.statement}
`),(f||P)&&(f&&P?N+=`import ${f.defaultImport}, { ${P} } from "${p[0].importPath}";
`:f?N+=`import ${f.defaultImport} from "${p[0].importPath}";
`:N+=`import { ${P} } from "${p[0].importPath}";
`),[c,N]})].sort(([c],[p])=>{let f=St.findIndex(P=>c.includes(P)),v=St.findIndex(P=>p.includes(P));return f===v?c.localeCompare(p):f===-1?1:v===-1?-1:f-v}).map(([,c])=>c).join(""),x=[...n.map(c=>c.statement),""].join(`
`);return t=t.substring(0,a)+h+x+t.substring(a),t};var Ot=(e,t)=>{let r=J(e),o=r[r.length-1],n=o?e.indexOf(o.statement):e.length-1;return`${e.slice(0,n+(o==null?void 0:o.statement.length))}
${t}
${e.slice(n+(o==null?void 0:o.statement.length))}`};import{readFileSync as Mo}from"fs-extra";import{join as Wo}from"path";function de(e){if(this!=null&&this.absolutePackageDir)try{return Mo(Wo(this.absolutePackageDir,e)).toString()}catch{return}}var jt=y("module"),qo=jt.prototype.require,$t=(e,t)=>{jt.prototype.require=function(...r){return r[0]==="@refinedev/cli"?{..._e,getFileContent:o=>de.call({absolutePackageDir:t?e:zo.join(process.cwd(),e)},o)}:qo.apply(this,r)}};var Fe=async(e,t)=>{try{return $t(e,t),y(_t.join(t?e:_t.join(process.cwd(),e),"refine.config.js"))}catch{return}};import Zo from"dedent";var T={SUCCESS:"SUCCESS",UNKNOWN_ERROR:"UNKNOWN_ERROR",SOURCE_PATH_NOT_FOUND:"SOURCE_PATH_NOT_FOUND",TARGET_PATH_NOT_FOUND:"TARGET_PATH_NOT_FOUND",SOURCE_PATH_NOT_A_FILE:"SOURCE_PATH_NOT_A_FILE",TARGET_ALREADY_EXISTS:"TARGET_ALREADY_EXISTS"};import E from"chalk";import Jo from"chalk";import Ho from"cardinal";import Xo from"boxen";var Yo=e=>{let t=/^(?:\/\/\s?title:\s?)(.*?)\n/g,[r,o]=t.exec(e)??[];if(o){let n=o.trim(),s=e.replace(r||"","");return{title:n,code:s}}return{code:e}},Ft=e=>{let{title:t,code:r}=Yo(e),o="";try{o=Ho.highlight(r,{jsx:!0})}catch{o=r}return Xo(o,{padding:1,margin:0,borderStyle:"round",borderColor:"gray",titleAlignment:"left",title:t?Jo.bold(t):void 0})};import{marked as Ko}from"marked";import Go from"marked-terminal";var ue=e=>Ko(e,{renderer:new Go({code:Ft})});var Ut=({label:e,files:t,message:r="**`Warning:`** You should use the component where you want to use it."})=>{let o=t.filter(([,l])=>Object.values(T).filter(d=>d!==T.SUCCESS).includes(l)),n="success";switch(o.length){case 0:n="success";break;case t.length:n="error";break;default:n="warning";break}let s=l=>{let d=l==null?void 0:l.replace(process.cwd(),"");return d!=null&&d.startsWith("/")?d.slice(1):d!=null&&d.startsWith("./")?d.slice(2):d},i=()=>{switch(n){case"success":console.log(E.blueBright(`Successfully swizzled ${E.bold(e)}`));return;case"warning":console.log(E.yellowBright(`Swizzle completed with errors for ${E.bold(e)}`));return;case"error":console.log(E.redBright(`Swizzle failed for ${E.bold(e)}`));return;default:return}},a=()=>{let l=[];l.push(E.dim(`File${t.length>1?"s":""} created:`)),l.push(t.map(([d,h])=>h===T.SUCCESS?E.cyanBright.dim(` - ${s(d)}`):h===T.TARGET_ALREADY_EXISTS?E.cyanBright.dim(` - ${E.yellowBright.bold("[FILE_ALREADY_EXISTS] ")}${s(d)}`):h===T.SOURCE_PATH_NOT_A_FILE?E.cyanBright.dim(` - ${E.yellowBright.bold("[SOURCE NOT FOUND] ")}${s(d)}`):E.cyanBright.dim(` - ${E.yellowBright.bold(`[${h}]`)}${s(d)}`)).join(`
`)),console.log(l.join(`
`))},u=()=>{r&&n!=="error"&&console.log(ue(Zo(`
${r}`)))};console.log(""),i(),a(),console.log(""),u()};var Vt=e=>{let t=/(\/\/|\/\*)(\s?)swizzle-remove-start([\s\S]*?)(\/\/|\/\*)(\s?)swizzle-remove-end(\s*)(\*\/)?/g;return e.replace(t,"")};import cn from"boxen";var Bt=()=>{let e;try{e=g()}catch{e=void 0}return pe(e)};import Qo from"inquirer";import en from"chalk";var Lt=async e=>{await tn(e)?await L(e):await rn(e)},tn=async e=>{let t=`This component requires following packages to be installed:
`.concat(e.map(o=>` - ${o}`).join(`
`)).concat(`
Do you want to install them?`),{installRequiredPackages:r}=await Qo.prompt([{type:"confirm",name:"installRequiredPackages",default:!0,message:t}]);return r},rn=async e=>{let t=await k(),r=S[t.name].add.join(" "),o=e.join(" "),n=`${t.name} ${r} ${o}`;console.log(`
You can install them manually by running this command:`),console.log(en.bold.blueBright(n))};var ln=e=>e.command("swizzle").description(`Export a component or a function from ${H.bold("Refine")} packages to customize it in your project`).action(pn),zt=e=>(t,r="")=>e.filter(n=>{var s;return n.label.toLowerCase().includes(r.toLowerCase())||((s=n.group)==null?void 0:s.toLowerCase().includes(r.toLowerCase()))}).flatMap((n,s,i)=>{var l;return[...(n==null?void 0:n.group)&&((l=i[s-1])==null?void 0:l.group)!==n.group&&n.group?[new fe.Separator(H.bold(n.group))]:[],{name:` ${n.label}`,value:n!=null&&n.value?n.value:n}]}),pn=async e=>{var d,h,x;fe.registerPrompt("autocomplete",on);let t=await K(),r=[];if(await Promise.all(t.map(async m=>{let c=await Ke(m.path),p=r.findIndex(f=>f.name===m.name)===-1;c&&p&&r.push(m)})),r.length===0){console.log("No Refine packages found with swizzle configuration.");return}console.log(`${cn(`Found ${H.blueBright(r.length)} installed ${H.blueBright.bold("Refine")} packages with swizzle configuration.`,{padding:1,textAlignment:"center",dimBorder:!0,borderColor:"blueBright",borderStyle:"round"})}
`);let o=await Promise.all(r.map(async m=>{let c=await Fe(m.path,!0)??await Fe(m.path,!1)??{swizzle:{items:[]}};return{...m,config:c}})),{selectedPackage:n}=await fe.prompt([{type:"autocomplete",pageSize:10,name:"selectedPackage",message:"Which package do you want to swizzle?",emptyText:"No packages found.",source:zt(o.sort((m,c)=>{var p,f;return(((p=m.config)==null?void 0:p.group)??"").localeCompare(((f=c.config)==null?void 0:f.group)??"")}).map(m=>{var c,p;return{label:((c=m.config)==null?void 0:c.name)??m.name,value:m,group:(p=m.config)==null?void 0:p.group}}))}]),{swizzle:{items:s,transform:i}}=n.config,a;if(s.length===0){console.log(`No swizzle items found for ${H.bold(((d=n.config)==null?void 0:d.name)??n.name)}`);return}if(s.length===1?a=s[0]:s.length>1&&(a=(await fe.prompt([{type:"list",pageSize:10,name:"selectedComponent",message:"Which component do you want to swizzle?",emptyText:"No components found.",choices:zt(s.sort((c,p)=>c.group.localeCompare(p.group)))({},"")}])).selectedComponent),!a){console.log(`No swizzle items selected for ${H.bold(((h=n.config)==null?void 0:h.name)??n.name)}`);return}let u=Bt(),l=await Promise.all(a.files.map(async m=>{var c;try{let p=m.src?Mt.join(n.path,m.src):void 0,f=m.dest?Mt.join(process.cwd(),u,m.dest):void 0;if(!p)return console.log("No src path found for file",m),["",T.SOURCE_PATH_NOT_FOUND];if(!f)return console.log("No destination path found for file",m),["",T.TARGET_PATH_NOT_FOUND];if(!await Wt(p))return[f,T.SOURCE_PATH_NOT_A_FILE];let P=await sn(p,"utf-8");if(await Wt(f))return[f,T.TARGET_ALREADY_EXISTS];await nn(f);let I=Vt(P),j=((c=m.transform)==null?void 0:c.call(m,I))??I,we=(i==null?void 0:i(j,p,f))??j,vr=At(we),yr=await Ne(vr);return await an(f,yr),[f,T.SUCCESS]}catch{return["",T.UNKNOWN_ERROR]}}));l.length>0&&(Ut({files:l,label:a.label,message:a.message}),(x=a==null?void 0:a.requiredPackages)!=null&&x.length&&await Lt(a.requiredPackages))},qt=ln;import fn from"inquirer";import gn from"center-align";import{Option as hn}from"commander";import vn from"@npmcli/package-json";import re from"inquirer";import Ht from"semver-diff";import Ue from"chalk";var Jt=e=>{let t=e.filter((o,n)=>e.indexOf(o)!==n),r=new Set(t);return Array.from(r)};var Xt=async e=>{let t=dn(e);if(!t){console.log("All `Refine` packages are up to date. \u{1F389}");return}let r=un(t),o=await re.prompt([{type:"checkbox",name:"packages",message:"Choose packages to update",pageSize:r.pageSize,choices:r.choices,validate:mn}]);if(o.packages.length>0){let n={};return o.packages.forEach(s=>{let{name:i,version:a}=xe(s);n[i]=a??"latest"}),n}return null},mn=e=>{let r=e.map(n=>xe(n)).map(n=>n.name),o=Jt(r);return o.length>0?`You can't update the same package more than once. Please choice one.
 Duplicates: ${o.join(", ")}`:!0},dn=e=>{if(e.length===0)return null;let t={patch:[],minor:[],major:[]};return e.forEach(r=>{let o=r.current,n=Ht(o,r.wanted),s=Ht(o,r.latest);if(n===s&&s){t[s].push({name:r.name,from:o,to:r.latest});return}n&&t[n].push({name:r.name,from:o,to:r.wanted}),s&&t[s].push({name:r.name,from:o,to:r.latest})}),t},un=e=>{let t=0,r=0;[e.patch,e.minor,e.major].forEach(l=>{l.forEach(d=>{d.name.length>t&&(t=d.name.length),d.from.length>r&&(r=d.from.length)})}),t+=2;let o=[],n="Package".padEnd(t),s="From".padEnd(r),a=`
   ${n} ${s}${"To".padStart(r)}`;o.push(new re.Separator(a)),e.patch.length>0&&(o.push(new re.Separator(Ue.reset.bold.blue(`
Patch Updates`))),e.patch.forEach(l=>{o.push({name:`${l.name.padEnd(t)} ${l.from.padStart(r)} -> ^${l.to}`,value:`${l.name}@^${l.to}`})})),e.minor.length>0&&(o.push(new re.Separator(Ue.reset.bold.blue(`
Minor Updates`))),e.minor.forEach(l=>{o.push({name:`${l.name.padEnd(t)} ${l.from.padStart(r)} -> ^${l.to}`,value:`${l.name}@^${l.to}`})})),e.major.length>0&&(o.push(new re.Separator(Ue.reset.bold.blue(`
Major Updates`))),e.major.forEach(l=>{o.push({name:`${l.name.padEnd(t)} ${l.from.padStart(r)} -> ^${l.to}`,value:`${l.name}@^${l.to}`})}));let u=o.length+6;return{choices:o,pageSize:u}};import X from"chalk";var yn=e=>e.command("update").description("Interactively select and update all `Refine` packages to selected version. To skip the interactive mode, use the `--all` option.").addOption(new hn("-t, --tag [tag]","Select version to update to.").choices(["next","latest"]).default("wanted","Version ranges in the `package.json` will be installed")).option("-a, --all","Update all `Refine` packages to the selected `tag`. If `tag` is not provided, version ranges in the `package.json` will be installed. This option skips the interactive mode.",!1).option("-d, --dry-run","Get outdated packages installation command without automatic updating. If `tag` is not provided, version ranges in the `package.json` will be used.",!1).action(wn),wn=async e=>{let{tag:t,dryRun:r,all:o}=e,n=await R(Z,"Checking for updates...");if(!(n!=null&&n.length)){console.log("All `Refine` packages are up to date \u{1F389}");return}let s=null;if(o){let l=await Ve(t,n);if(!l)return;if(r){Yt(l);return}Kt(l);return}let{table:i,width:a}=ce(n)??"";console.log(gn("Available Updates",a)),console.log(i),console.log(`- ${X.yellow(X.bold("Current"))}: The version of the package that is currently installed`),console.log(`- ${X.yellow(X.bold("Wanted"))}: The maximum version of the package that satisfies the semver range specified in \`package.json\``),console.log(`- ${X.yellow(X.bold("Latest"))}: The latest version of the package available on npm`),console.log();let{installationType:u}=await fn.prompt([{type:"list",name:"installationType",message:"Do you want to update all Refine packages for minor and patch versions?",choices:[{name:'Update all packages to latest "minor" version without any breaking changes.',value:"minor"},{name:"Update all packages to the latest version that satisfies the semver(`wanted`) range specified in `package.json`",value:"wanted"},{name:'Use interactive mode. Choose this option for "major" version updates.',value:"interactive"}]}]);u==="interactive"&&(s=await Xt(n)),u==="wanted"&&(s=await Ve("wanted",n)),u==="minor"&&(s=await Ve("minor",n)),s&&(r?Yt(s):Kt(s))},Ve=async(e,t)=>{if(e==="wanted"&&t.every(n=>n.current===n.wanted))return console.log(),console.log("\u2705 All `Refine` packages are already at the wanted version"),null;console.log();let r={};for(let o of t){let n=o.latest;e==="minor"&&(n=`^${await R(()=>it(o.name,o.wanted),`Checking for the latest minor version of ${o.name}`)}`),e==="wanted"&&(n=st(o.name,o.wanted)),e==="latest"&&(n=`^${o.latest}`),e==="next"&&(n="next"),r[o.name]=n}return r},Yt=async e=>{let t=await k(),r=S[t.name].add,o="";for(let[n,s]of Object.entries(e))o+=`${n}@${s} `;console.log(),console.log(`${t.name} ${r.join(" ")} ${o}`)},Kt=async e=>{console.log("Updating `Refine` packages...");let t=await vn.load(process.cwd());t.update({dependencies:{...t.content.dependencies??{},...e??{}}}),await t.save(),L([],"all")},Gt=yn;import Pn from"envinfo";import xn from"ora";var In=e=>e.command("whoami").description("View the details of the development environment").action(En),En=async()=>{let e=xn("Loading environment details...").start(),t=await Pn.run({System:["OS","CPU"],Binaries:["Node","Yarn","npm"],Browsers:["Chrome","Firefox","Safari"]},{showNotFound:!0,markdown:!0}),o=(await F()||[]).map(n=>` - ${n.name}: ${n.version}`).join(`
`);e.stop(),console.log(t),console.log("## Refine Packages:"),console.log(o)},Zt=In;import ve from"chalk";import ye from"inquirer";import On from"inquirer";import Cn from"execa";var ge=async e=>{let{incompatiblePackages:t,integrationName:r,requiredPackages:o,transformerFileName:n}=e;if(Qe(t))return;await Ze(o),console.log(`\u{1F680} Setting up ${r}...`);let s=y.resolve(".bin/jscodeshift"),{stderr:i}=Cn.sync(s,["./","--extensions=ts,tsx,js,jsx","--parser=tsx",`--transform=${__dirname}/../src/transformers/integrations/${n}.ts`,"--ignore-pattern=.cache","--ignore-pattern=node_modules","--ignore-pattern=build","--ignore-pattern=.next","--ignore-pattern=dist"]);i&&console.log(i),console.log(`\u{1F389} ${r} setup completed!`)};import Be from"chalk";var he=e=>{let{id:t,title:r,description:o,disabled:n}=e;return n?{value:t,name:`${Be.gray(r)}`,disabled:Be.redBright(n)}:{value:t,name:`${Be.blueBright(r)} - ${o}`}};var Qt="ant-design",Tn="Ant Design",kn=["@remix-run/react","next"],Rn=["antd","@refinedev/antd"],bn="ant-design",er={id:Qt,getChoice:e=>{let t="Ant Design",r="Setup Ant Design with Refine",o;return["nextjs","remix"].includes(e)&&(o="Automatic setup only available Vite for now. See the documentation for manual installation: https://refine.dev/docs/ui-integrations/ant-design/introduction/#installation"),he({id:Qt,title:t,description:r,disabled:o})},runTransformer:async()=>await ge({incompatiblePackages:kn,integrationName:Tn,requiredPackages:Rn,transformerFileName:bn})};var tr="react-router",Nn="React Router",Sn=["@remix-run/react","next"],Dn=["react-router-dom","@refinedev/react-router-v6"],An="react-router",rr={id:tr,getChoice:e=>{let t="React Router",r="Setup routing with React Router",o;return e==="nextjs"&&(o="Can't be used with Next.js. https://nextjs.org/docs/app/building-your-application/routing"),e==="remix"&&(o="Can't be used with Remix. https://remix.run/docs/en/main/discussion/routes"),he({id:tr,title:t,description:r,disabled:o})},runTransformer:async()=>await ge({incompatiblePackages:Sn,integrationName:Nn,requiredPackages:Dn,transformerFileName:An})};var V=[er,rr];var Le=()=>{let e=g(),t=V.map(r=>r.getChoice(e));return t.every(r=>r.disabled)?[{value:"none",name:"No integration available for this project type."},...t]:t},or=async()=>await On.prompt([{type:"list",name:"id",message:"Which integration do you want to add?",choices:Le(),default:"none"}]);import Vn from"chalk";import Bn from"inquirer";import{copySync as nr,existsSync as jn,mkdirSync as $n,pathExistsSync as sr,readdirSync as _n}from"fs-extra";import{join as B,relative as ir}from"path";var Y=[{id:"auth",title:"Auth provider",description:"Manage user authentication and authorization",fileName:"auth-provider.tsx",templateFileName:"demo-auth-provider.tsx.template"},{id:"live",title:"Live provider",description:"Enable real-time updates and synchronization",fileName:"live-provider.tsx",templateFileName:"demo-live-provider.tsx.template"},{id:"data",title:"Data provider",description:"Communicate with your API",fileName:"data-provider.tsx",templateFileName:"demo-data-provider.tsx.template"},{id:"access-control",title:"Access Control",description:"Manage user permissions & roles",fileName:"access-control-provider.tsx",templateFileName:"demo-access-control-provider.tsx.template"},{id:"notification",title:"Notification provider",description:"Display in-app alerts and messages",fileName:"notification-provider.tsx",templateFileName:"demo-notification-provider.tsx.template"},{id:"i18n",title:"I18n provider",description:"Support multiple languages and locales",fileName:"i18n-provider.tsx",templateFileName:"demo-i18n-provider.tsx.template"},{id:"audit-log",title:"Audit Log provider",description:"Display audit logs for your resources",fileName:"audit-log-provider.tsx",templateFileName:"demo-audit-log-provider.tsx.template"}];var Fn=`${__dirname}/../templates/provider`,Me=`${__dirname}/../templates/assets`,oe=(e,t)=>{e.forEach(r=>{let{fileName:o,templateFileName:n}=Un(r),s=pe(g()),i=t??We(),a=B(i,o),u=B(process.cwd(),i,o),l=B(process.cwd(),s);if(sr(u)){console.error(`\u274C Provider (${a}) already exist!`);return}$n(i,{recursive:!0}),nr(`${Fn}/${n}`,u),console.log(`\u{1F389} Provider (${a}) created successfully!`);let d=[],h=[];if(sr(`${Me}/${r}`))try{_n(`${Me}/${r}`,{recursive:!0,withFileTypes:!0}).forEach(x=>{if(!x.isDirectory()){let m=B(x.path,x.name),c=B(l,ir(B(Me,r),x.path),x.name),p=B(s,ir(l,c));if(jn(c))h.push(p);else try{nr(m,c),d.push(p)}catch{h.push(p)}}})}catch{}d.length&&console.log(`\u{1F389} Created additional assets: ${d.join(", ")}`),h.length&&console.error(`\u274C Failed to create assets: ${h.join(", ")}`)})},Un=e=>{let t=Y.find(r=>r.id===e);if(!t)throw new Error(`Invalid provider: ${e}`);return t},We=()=>{let e=g(),{path:t}=mt(e);return t};var ze=()=>Y.map(e=>{let{id:t,title:r,description:o}=e;return{value:t,name:`${Vn.blueBright(r)} - ${o}`}}),ar=async()=>await Bn.prompt([{type:"checkbox",name:"providers",message:"Which providers do you want to add?",choices:ze()},{type:"input",name:"providersPath",message:"Where do you want to generate the providers?",default:We()}]);var cr=(e,t)=>t.map(r=>({...r,name:` . ${r.name}`,value:{group:e,component:r.value}})),lr=async()=>await ye.prompt([{type:"list",name:"component",message:"What do you want to add?",choices:[new ye.Separator(ve.bold("Provider")),...cr("provider",ze()),new ye.Separator(ve.bold("Integration")),...cr("integration",Le()),new ye.Separator(ve.bold("Resource")),{name:ve.blueBright(" .  Add new resource"),value:{group:"resource",component:"resource"}}],pageSize:25}]);import{Argument as Ln,Command as Mn}from"commander";var Wn=async e=>{let t=e;t||(t=(await or()).id);let r=V.find(o=>o.id===t);r&&await r.runTransformer()},pr=new Mn("integration").addArgument(new Ln("[name]","Name of the integration").choices(V.map(e=>e.id))).action(Wn);import{Argument as zn,Command as qn}from"commander";var Jn=async(e,t)=>{if(!e.length){let{providers:r,providersPath:o}=await ar();return oe(r,o)}oe(e,t.path)},mr=new qn("provider").addArgument(new zn("[providers...]","Create provider(s)").choices(Y.map(e=>e.id)).default([])).option("-p, --path [path]","Path to generate providers").action(Jn);import{Argument as Hn,Command as Xn}from"commander";var Yn=async(e,t,r)=>{M({actions:t==null?void 0:t.actions,path:r.optsWithGlobals().path},e)},dr=new Xn("resource").addArgument(new Hn("[resources...]","Create new resource(s)")).option("-p, --path [path]","Path to generated resource files").option("-a, --actions [actions]","Only generate the specified resource actions. (ex: list,create,edit,show)","list,create,edit,show").action(Yn);var Kn=e=>e.command("add").description("Add new resources, providers, or integrations").allowExcessArguments(!1).action(Gn).addCommand(dr).addCommand(mr).addCommand(pr),Gn=async()=>{let{component:e}=await lr();if(e.group==="provider"&&oe([e.component]),e.group==="integration"){let t=V.find(r=>r.id===e.component);await(t==null?void 0:t.runTransformer())}e.group==="resource"&&await M({},[])},ur=Kn;import Zn from"envinfo";import Qn from"os";var es=()=>{let e=Qn.type();return{Darwin:"macOS",Linux:"Linux",Windows_NT:"Windows"}[e]},fr=async()=>{let[e,t]=await Zn.helpers.getOSInfo();return{name:es(),version:t}};import ts from"node-fetch";var rs=async()=>{let e=await fr();return{nodeEnv:b.NODE_ENV,nodeVersion:process.version,os:e.name,osVersion:e.version,command:process.argv[2],packages:await F()||[],projectFramework:g(),projectId:Ge()}},gr=async()=>{if(b.REFINE_NO_TELEMETRY!=="true")try{let e=await rs();await ts("https://telemetry.refine.dev/cli",{method:"POST",body:JSON.stringify(e),headers:{"Content-Type":"application/json"}})}catch{}};import os from"gray-matter";import ns from"boxen";var ss="https://raw.githubusercontent.com/refinedev/refine/master/packages/cli/ANNOUNCEMENTS.md",qe="---announcement",is=e=>e.split(qe).slice(1).map(r=>`${qe}${r}`),as=e=>{let t=e.replace(qe,"---"),r=os(t),o=(r.content.length===0?t.replace(/---/g,""):r.content.replace(/---/g,"")).trim();return{...r.data,content:o}},cs=async()=>{try{let e=await fetch(ss).then(r=>r.text()).catch(()=>"");return is(e).map(r=>as(r))}catch{return[]}},hr=async()=>{let t=(await cs()).filter(o=>!o.hidden);if(t.length===0)return;let r=t.map(o=>{let n=t.length>1?"\u2014 ":"",s=ue(o.content);return`${n}${s}`}).join("").trim();console.log(ns(r,{padding:1,margin:0,borderStyle:"round",borderColor:"blueBright",titleAlignment:"left"}))};var ms="1.0.0",ds=()=>{let e=new ls;e.version(`@refinedev/cli@${ms}`,"-v, --version","Output the current version.").description(ps.textSync("refine",{font:"Isometric1",horizontalLayout:"full",verticalLayout:"full",whitespaceBreak:!0})).usage("<command> [options]").helpOption("-h, --help","Output usage information."),qt(e),ht(e),Gt(e),Oe(e),je(e),be(e),$e(e),at(e),Zt(e),Rt(e),ur(e),e.hook("preAction",async t=>{t.args.includes("dev")&&await hr()}),e.hook("postAction",t=>{let r=t.args[0];["run"].includes(r)||gr()}),e.parse(process.argv),process.argv.slice(2).length||e.outputHelp()};ds();
//# sourceMappingURL=cli.mjs.map