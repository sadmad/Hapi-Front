{"version":3,"sources":["../src/index.tsx","../src/components/layout/index.tsx","../src/components/layout/sider/index.tsx","../src/components/layout/header/index.tsx","../src/components/layout/title/index.tsx","../src/components/themedLayout/index.tsx","../src/components/themedLayout/sider/index.tsx","../src/components/themedLayout/header/index.tsx","../src/components/themedLayout/title/index.tsx","../src/components/themedLayoutV2/index.tsx","../src/contexts/themedLayoutContext/index.tsx","../src/components/themedLayoutV2/sider/index.tsx","../src/hooks/useAutocomplete/index.ts","../src/hooks/useDataGrid/index.ts","../src/definitions/dataGrid/index.ts","../src/hooks/useSiderVisible/index.ts","../src/hooks/useThemedLayoutContext/index.ts","../src/components/themedLayoutV2/header/index.tsx","../src/components/themedLayoutV2/hamburgerMenu/index.tsx","../src/components/themedLayoutV2/title/index.tsx","../src/components/pages/login/index.tsx","../src/components/pages/ready/index.tsx","../src/components/pages/welcome/index.tsx","../src/components/pages/error/index.tsx","../src/components/pages/auth/index.tsx","../src/components/pages/auth/components/login/index.tsx","../src/components/pages/auth/components/styles.ts","../src/components/pages/auth/components/register/index.tsx","../src/components/pages/auth/components/forgotPassword/index.tsx","../src/components/pages/auth/components/updatePassword/index.tsx","../src/components/crud/create/index.tsx","../src/components/crud/edit/index.tsx","../src/components/crud/list/index.tsx","../src/components/crud/show/index.tsx","../src/components/buttons/create/index.tsx","../src/components/buttons/edit/index.tsx","../src/components/buttons/delete/index.tsx","../src/components/buttons/refresh/index.tsx","../src/components/buttons/show/index.tsx","../src/components/buttons/list/index.tsx","../src/components/buttons/export/index.tsx","../src/components/buttons/save/index.tsx","../src/components/buttons/clone/index.tsx","../src/components/buttons/import/index.tsx","../src/components/circularDeterminate/index.tsx","../src/components/fields/text/index.tsx","../src/components/fields/tag/index.tsx","../src/components/fields/email/index.tsx","../src/components/fields/boolean/index.tsx","../src/components/fields/date/index.tsx","../src/components/fields/file/index.tsx","../src/components/fields/url/index.tsx","../src/components/fields/number/index.tsx","../src/components/fields/markdown/index.tsx","../src/components/breadcrumb/index.tsx","../src/components/autoSaveIndicator/index.tsx","../src/theme/index.ts","../src/theme/palette/lightPalette.ts","../src/theme/palette/darkPalette.ts","../src/theme/typography.ts","../src/theme/palette/refinePalette.ts","../src/providers/notificationProvider/index.tsx","../src/providers/refineSnackbarProvider/index.tsx"],"sourcesContent":["/** @deprecated not exists anymore - this type exists as a fallback for existing usages */\nexport type ThemeInput = any;\n\n/** Notistack */\n/**\n * Part of the following typing and documentation is from material-ui/src/Snackbar/Snackbar.d.ts\n */\nexport {\n  SnackbarProvider,\n  withSnackbar,\n  SnackbarContent as NotistackSnackbarContent,\n  useSnackbar,\n} from \"notistack\";\n\nexport type {\n  WithSnackbarProps,\n  SnackbarKey,\n  ProviderContext,\n  VariantType,\n  CloseReason,\n  SnackbarMessage,\n  SnackbarAction,\n  SnackbarContentCallback,\n  TransitionCloseHandler,\n  TransitionEnterHandler,\n  TransitionHandler,\n  ContainerClassKey as NotistackContainerClassKey,\n  VariantClassKey,\n  CombinedClassKey,\n  SnackbarOrigin,\n  IconVariant,\n  TransitionHandlerProps,\n  SnackbarContentProps,\n  SnackbarProps,\n  SharedProps,\n  OptionsObject,\n  SnackbarProviderProps,\n} from \"notistack\";\n\nexport * from \"./components/index.js\";\nexport * from \"./hooks/index.js\";\nexport * from \"./theme/index.js\";\nexport * from \"./providers/index.js\";\nexport * from \"./contexts/index.js\";\n","import React from \"react\";\nimport Box from \"@mui/material/Box\";\n\nimport type { RefineLayoutLayoutProps } from \"./types\";\nimport { Sider as DefaultSider } from \"./sider\";\nimport { Header as DefaultHeader } from \"./header\";\n\n/**\n * @deprecated use `<ThemedLayout>` instead with 100% backward compatibility.\n * @see https://refine.dev/docs/api-reference/mui/components/mui-themed-layout\n **/\nexport const Layout: React.FC<RefineLayoutLayoutProps> = ({\n  Sider,\n  Header,\n  Title,\n  Footer,\n  OffLayoutArea,\n  children,\n}) => {\n  const SiderToRender = Sider ?? DefaultSider;\n  const HeaderToRender = Header ?? DefaultHeader;\n\n  return (\n    <Box display=\"flex\" flexDirection=\"row\">\n      <SiderToRender Title={Title} />\n      <Box\n        sx={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          flex: 1,\n          minHeight: \"100vh\",\n        }}\n      >\n        <HeaderToRender />\n        <Box\n          component=\"main\"\n          sx={{\n            p: { xs: 1, md: 2, lg: 3 },\n            flexGrow: 1,\n            bgcolor: (theme) => theme.palette.background.default,\n          }}\n        >\n          {children}\n        </Box>\n        {Footer && <Footer />}\n      </Box>\n      {OffLayoutArea && <OffLayoutArea />}\n    </Box>\n  );\n};\n","import React, { useState } from \"react\";\n\nimport Box from \"@mui/material/Box\";\nimport Drawer from \"@mui/material/Drawer\";\nimport List from \"@mui/material/List\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Collapse from \"@mui/material/Collapse\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport Button from \"@mui/material/Button\";\nimport IconButton from \"@mui/material/IconButton\";\n\nimport ListOutlined from \"@mui/icons-material/ListOutlined\";\nimport Logout from \"@mui/icons-material/Logout\";\nimport ExpandLess from \"@mui/icons-material/ExpandLess\";\nimport ExpandMore from \"@mui/icons-material/ExpandMore\";\nimport ChevronLeft from \"@mui/icons-material/ChevronLeft\";\nimport ChevronRight from \"@mui/icons-material/ChevronRight\";\nimport MenuRounded from \"@mui/icons-material/MenuRounded\";\nimport Dashboard from \"@mui/icons-material/Dashboard\";\n\nimport {\n  CanAccess,\n  type ITreeMenu,\n  useIsExistAuthentication,\n  useLogout,\n  useTitle,\n  useTranslate,\n  useRouterContext,\n  useRouterType,\n  useLink,\n  useMenu,\n  useRefineContext,\n  useActiveAuthProvider,\n  pickNotDeprecated,\n  useWarnAboutChange,\n} from \"@refinedev/core\";\n\nimport type { RefineLayoutSiderProps } from \"../types\";\n\nimport { Title as DefaultTitle } from \"@components\";\n\nexport const Sider: React.FC<RefineLayoutSiderProps> = ({\n  Title: TitleFromProps,\n  render,\n  meta,\n}) => {\n  const [collapsed, setCollapsed] = useState(false);\n  const [opened, setOpened] = useState(false);\n\n  const drawerWidth = () => {\n    if (collapsed) return 64;\n    return 200;\n  };\n\n  const t = useTranslate();\n  const routerType = useRouterType();\n  const Link = useLink();\n  const { Link: LegacyLink } = useRouterContext();\n  const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n  const { hasDashboard } = useRefineContext();\n  const translate = useTranslate();\n  const { warnWhen, setWarnWhen } = useWarnAboutChange();\n\n  const { menuItems, selectedKey, defaultOpenKeys } = useMenu({ meta });\n  const isExistAuthentication = useIsExistAuthentication();\n  const TitleFromContext = useTitle();\n  const authProvider = useActiveAuthProvider();\n  const { mutate: mutateLogout } = useLogout({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n\n  const [open, setOpen] = useState<{ [k: string]: any }>({});\n\n  React.useEffect(() => {\n    setOpen((previous) => {\n      const previousKeys: string[] = Object.keys(previous);\n      const previousOpenKeys = previousKeys.filter((key) => previous[key]);\n\n      const uniqueKeys = new Set([...previousOpenKeys, ...defaultOpenKeys]);\n      const uniqueKeysRecord = Object.fromEntries(\n        Array.from(uniqueKeys.values()).map((key) => [key, true]),\n      );\n      return uniqueKeysRecord;\n    });\n  }, [defaultOpenKeys]);\n\n  const RenderToTitle = TitleFromProps ?? TitleFromContext ?? DefaultTitle;\n\n  const handleClick = (key: string) => {\n    setOpen({ ...open, [key]: !open[key] });\n  };\n\n  const renderTreeView = (tree: ITreeMenu[], selectedKey?: string) => {\n    return tree.map((item: ITreeMenu) => {\n      const { icon, label, route, name, children, parentName, meta, options } =\n        item;\n      const isOpen = open[item.key || \"\"] || false;\n\n      const isSelected = item.key === selectedKey;\n      const isNested = !(\n        pickNotDeprecated(meta?.parent, options?.parent, parentName) ===\n        undefined\n      );\n\n      if (children.length > 0) {\n        return (\n          <CanAccess\n            key={item.key}\n            resource={name}\n            action=\"list\"\n            params={{\n              resource: item,\n            }}\n          >\n            <div key={item.key}>\n              <Tooltip\n                title={label ?? name}\n                placement=\"right\"\n                disableHoverListener={!collapsed}\n                arrow\n              >\n                <ListItemButton\n                  onClick={() => {\n                    if (collapsed) {\n                      setCollapsed(false);\n                      if (!isOpen) {\n                        handleClick(item.key || \"\");\n                      }\n                    } else {\n                      handleClick(item.key || \"\");\n                    }\n                  }}\n                  sx={{\n                    pl: isNested ? 4 : 2,\n                    justifyContent: \"center\",\n                    \"&.Mui-selected\": {\n                      \"&:hover\": {\n                        backgroundColor: \"transparent\",\n                      },\n                      backgroundColor: \"transparent\",\n                    },\n                  }}\n                >\n                  <ListItemIcon\n                    sx={{\n                      justifyContent: \"center\",\n                      minWidth: 36,\n                      color: \"secondary.contrastText\",\n                    }}\n                  >\n                    {icon ?? <ListOutlined />}\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={label}\n                    primaryTypographyProps={{\n                      noWrap: true,\n                      fontSize: \"14px\",\n                      fontWeight: isSelected ? \"bold\" : \"normal\",\n                    }}\n                  />\n                  {!collapsed && (isOpen ? <ExpandLess /> : <ExpandMore />)}\n                </ListItemButton>\n              </Tooltip>\n              {!collapsed && (\n                <Collapse\n                  in={open[item.key || \"\"]}\n                  timeout=\"auto\"\n                  unmountOnExit\n                >\n                  <List component=\"div\" disablePadding>\n                    {renderTreeView(children, selectedKey)}\n                  </List>\n                </Collapse>\n              )}\n            </div>\n          </CanAccess>\n        );\n      }\n\n      return (\n        <CanAccess\n          key={item.key}\n          resource={name}\n          action=\"list\"\n          params={{ resource: item }}\n        >\n          <Tooltip\n            title={label ?? name}\n            placement=\"right\"\n            disableHoverListener={!collapsed}\n            arrow\n          >\n            <ListItemButton\n              component={ActiveLink}\n              to={route}\n              selected={isSelected}\n              onClick={() => {\n                setOpened(false);\n              }}\n              sx={{\n                pl: isNested ? 4 : 2,\n                py: isNested ? 1.25 : 1,\n                \"&.Mui-selected\": {\n                  \"&:hover\": {\n                    backgroundColor: \"transparent\",\n                  },\n                  backgroundColor: \"transparent\",\n                },\n                justifyContent: \"center\",\n              }}\n            >\n              <ListItemIcon\n                sx={{\n                  justifyContent: \"center\",\n                  minWidth: 36,\n                  color: \"secondary.contrastText\",\n                }}\n              >\n                {icon ?? <ListOutlined />}\n              </ListItemIcon>\n              <ListItemText\n                primary={label}\n                primaryTypographyProps={{\n                  noWrap: true,\n                  fontSize: \"14px\",\n                  fontWeight: isSelected ? \"bold\" : \"normal\",\n                }}\n              />\n            </ListItemButton>\n          </Tooltip>\n        </CanAccess>\n      );\n    });\n  };\n\n  const dashboard = hasDashboard ? (\n    <CanAccess resource=\"dashboard\" action=\"list\">\n      <Tooltip\n        title={translate(\"dashboard.title\", \"Dashboard\")}\n        placement=\"right\"\n        disableHoverListener={!collapsed}\n        arrow\n      >\n        <ListItemButton\n          component={ActiveLink}\n          to=\"/\"\n          selected={selectedKey === \"/\"}\n          onClick={() => {\n            setOpened(false);\n          }}\n          sx={{\n            pl: 2,\n            py: 1,\n            \"&.Mui-selected\": {\n              \"&:hover\": {\n                backgroundColor: \"transparent\",\n              },\n              backgroundColor: \"transparent\",\n            },\n            justifyContent: \"center\",\n          }}\n        >\n          <ListItemIcon\n            sx={{\n              justifyContent: \"center\",\n              minWidth: 36,\n              color: \"secondary.contrastText\",\n            }}\n          >\n            <Dashboard />\n          </ListItemIcon>\n          <ListItemText\n            primary={translate(\"dashboard.title\", \"Dashboard\")}\n            primaryTypographyProps={{\n              noWrap: true,\n              fontSize: \"14px\",\n              fontWeight: selectedKey === \"/\" ? \"bold\" : \"normal\",\n            }}\n          />\n        </ListItemButton>\n      </Tooltip>\n    </CanAccess>\n  ) : null;\n\n  const handleLogout = () => {\n    if (warnWhen) {\n      const confirm = window.confirm(\n        translate(\n          \"warnWhenUnsavedChanges\",\n          \"Are you sure you want to leave? You have unsaved changes.\",\n        ),\n      );\n\n      if (confirm) {\n        setWarnWhen(false);\n        mutateLogout();\n      }\n    } else {\n      mutateLogout();\n    }\n  };\n\n  const logout = isExistAuthentication && (\n    <Tooltip\n      title={t(\"buttons.logout\", \"Logout\")}\n      placement=\"right\"\n      disableHoverListener={!collapsed}\n      arrow\n    >\n      <ListItemButton\n        key=\"logout\"\n        onClick={handleLogout}\n        sx={{ justifyContent: \"center\" }}\n      >\n        <ListItemIcon\n          sx={{\n            justifyContent: \"center\",\n            minWidth: 36,\n            color: \"secondary.contrastText\",\n          }}\n        >\n          <Logout />\n        </ListItemIcon>\n        <ListItemText\n          primary={t(\"buttons.logout\", \"Logout\")}\n          primaryTypographyProps={{\n            noWrap: true,\n            fontSize: \"14px\",\n          }}\n        />\n      </ListItemButton>\n    </Tooltip>\n  );\n\n  const items = renderTreeView(menuItems, selectedKey);\n\n  const renderSider = () => {\n    if (render) {\n      return render({\n        dashboard,\n        logout,\n        items,\n        collapsed,\n      });\n    }\n    return (\n      <>\n        {dashboard}\n        {items}\n        {logout}\n      </>\n    );\n  };\n\n  const drawer = (\n    <List disablePadding sx={{ mt: 1, color: \"secondary.contrastText\" }}>\n      {renderSider()}\n    </List>\n  );\n\n  return (\n    <>\n      <Box\n        sx={{\n          width: { xs: drawerWidth() },\n          display: {\n            xs: \"none\",\n            md: \"block\",\n          },\n          transition: \"width 0.3s ease\",\n        }}\n      />\n      <Box\n        component=\"nav\"\n        sx={{\n          position: \"fixed\",\n          zIndex: 1101,\n          width: { sm: drawerWidth() },\n          display: \"flex\",\n        }}\n      >\n        <Drawer\n          variant=\"temporary\"\n          open={opened}\n          onClose={() => setOpened(false)}\n          ModalProps={{\n            keepMounted: true, // Better open performance on mobile.\n          }}\n          sx={{\n            display: { sm: \"block\", md: \"none\" },\n            \"& .MuiDrawer-paper\": {\n              width: 256,\n              bgcolor: \"secondary.main\",\n            },\n          }}\n        >\n          <Box\n            sx={{\n              height: 64,\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <RenderToTitle collapsed={false} />\n          </Box>\n          {drawer}\n        </Drawer>\n        <Drawer\n          variant=\"permanent\"\n          PaperProps={{ elevation: 1 }}\n          sx={{\n            display: { xs: \"none\", md: \"block\" },\n            \"& .MuiDrawer-paper\": {\n              width: drawerWidth,\n              bgcolor: \"secondary.main\",\n              overflow: \"hidden\",\n              transition: \"width 200ms cubic-bezier(0.4, 0, 0.6, 1) 0ms\",\n            },\n          }}\n          open\n        >\n          <Box\n            sx={{\n              height: 64,\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <RenderToTitle collapsed={collapsed} />\n          </Box>\n          <Box\n            sx={{\n              flexGrow: 1,\n              overflowX: \"hidden\",\n              overflowY: \"auto\",\n            }}\n          >\n            {drawer}\n          </Box>\n          <Button\n            sx={{\n              background: \"rgba(0,0,0,.5)\",\n              color: \"secondary.contrastText\",\n              textAlign: \"center\",\n              borderRadius: 0,\n              borderTop: \"1px solid #ffffff1a\",\n            }}\n            fullWidth\n            size=\"large\"\n            onClick={() => setCollapsed((prev) => !prev)}\n          >\n            {collapsed ? <ChevronRight /> : <ChevronLeft />}\n          </Button>\n        </Drawer>\n        <Box\n          sx={{\n            display: { xs: \"block\", md: \"none\" },\n            position: \"fixed\",\n            top: \"64px\",\n            left: \"0px\",\n            borderRadius: \"0 6px 6px 0\",\n            bgcolor: \"secondary.main\",\n            zIndex: 1199,\n            width: \"36px\",\n          }}\n        >\n          <IconButton\n            sx={{ color: \"#fff\", width: \"36px\" }}\n            onClick={() => setOpened((prev) => !prev)}\n          >\n            <MenuRounded />\n          </IconButton>\n        </Box>\n      </Box>\n    </>\n  );\n};\n","import React from \"react\";\nimport { useGetIdentity, useActiveAuthProvider } from \"@refinedev/core\";\n\nimport AppBar from \"@mui/material/AppBar\";\nimport Stack from \"@mui/material/Stack\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Avatar from \"@mui/material/Avatar\";\n\nimport type { RefineLayoutHeaderProps } from \"../types\";\n\nexport const Header: React.FC<RefineLayoutHeaderProps> = () => {\n  const authProvider = useActiveAuthProvider();\n  const { data: user } = useGetIdentity({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n\n  const shouldRenderHeader = user && (user.name || user.avatar);\n\n  return shouldRenderHeader ? (\n    <AppBar color=\"default\" position=\"sticky\" elevation={1}>\n      <Toolbar>\n        <Stack\n          direction=\"row\"\n          width=\"100%\"\n          justifyContent=\"flex-end\"\n          alignItems=\"center\"\n        >\n          <Stack\n            direction=\"row\"\n            gap=\"16px\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n          >\n            <Typography variant=\"subtitle2\">{user?.name}</Typography>\n            <Avatar src={user?.avatar} alt={user?.name} />\n          </Stack>\n        </Stack>\n      </Toolbar>\n    </AppBar>\n  ) : null;\n};\n","import React from \"react\";\nimport {\n  useRouterContext,\n  type TitleProps,\n  useLink,\n  useRouterType,\n} from \"@refinedev/core\";\n\nimport Button from \"@mui/material/Button\";\n\nexport const Title: React.FC<TitleProps> = ({ collapsed }) => {\n  const routerType = useRouterType();\n  const Link = useLink();\n  const { Link: LegacyLink } = useRouterContext();\n\n  const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n  return (\n    <Button fullWidth variant=\"text\" disableRipple>\n      <ActiveLink to=\"/\">\n        {collapsed ? (\n          <img\n            src=\"https://refine.ams3.cdn.digitaloceanspaces.com/logo/refine-mini.svg\"\n            alt=\"Refine\"\n            width=\"28px\"\n            style={{ maxHeight: \"38px\" }}\n          />\n        ) : (\n          <img\n            src=\"https://refine.ams3.cdn.digitaloceanspaces.com/logo/refine.svg\"\n            alt=\"Refine\"\n            width=\"140px\"\n          />\n        )}\n      </ActiveLink>\n    </Button>\n  );\n};\n","import React, { useState } from \"react\";\nimport Box from \"@mui/material/Box\";\n\nimport { ThemedSider as DefaultSider } from \"./sider\";\nimport { ThemedHeader as DefaultHeader } from \"./header\";\nimport type { RefineThemedLayoutProps } from \"./types\";\n\n/**\n * @deprecated It is recommended to use the improved `ThemedLayoutV2`. Review migration guidelines. https://refine.dev/docs/api-reference/mui/components/mui-themed-layout/#migrate-themedlayout-to-themedlayoutv2\n */\nexport const ThemedLayout: React.FC<RefineThemedLayoutProps> = ({\n  Sider,\n  Header,\n  Title,\n  Footer,\n  OffLayoutArea,\n  children,\n}) => {\n  const [isSiderOpen, setIsSiderOpen] = useState(true);\n\n  const SiderToRender = Sider ?? DefaultSider;\n  const HeaderToRender = Header ?? DefaultHeader;\n\n  return (\n    <Box display=\"flex\" flexDirection=\"row\">\n      <SiderToRender\n        Title={Title}\n        isSiderOpen={isSiderOpen}\n        onToggleSiderClick={(isOpen) => setIsSiderOpen(Boolean(isOpen))}\n      />\n      <Box\n        sx={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          flex: 1,\n          minHeight: \"100vh\",\n        }}\n      >\n        <HeaderToRender\n          isSiderOpen={isSiderOpen}\n          onToggleSiderClick={() => setIsSiderOpen((prev) => !prev)}\n        />\n        <Box\n          component=\"main\"\n          sx={{\n            p: { xs: 1, md: 2, lg: 3 },\n            flexGrow: 1,\n            bgcolor: (theme) => theme.palette.background.default,\n          }}\n        >\n          {children}\n        </Box>\n        {Footer && <Footer />}\n      </Box>\n      {OffLayoutArea && <OffLayoutArea />}\n    </Box>\n  );\n};\n","import React, { useState } from \"react\";\n\nimport Box from \"@mui/material/Box\";\nimport Drawer from \"@mui/material/Drawer\";\nimport List from \"@mui/material/List\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Collapse from \"@mui/material/Collapse\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Paper from \"@mui/material/Paper\";\n\nimport ListOutlined from \"@mui/icons-material/ListOutlined\";\nimport Logout from \"@mui/icons-material/Logout\";\nimport ExpandLess from \"@mui/icons-material/ExpandLess\";\nimport ExpandMore from \"@mui/icons-material/ExpandMore\";\nimport ChevronLeft from \"@mui/icons-material/ChevronLeft\";\nimport MenuRounded from \"@mui/icons-material/MenuRounded\";\nimport Dashboard from \"@mui/icons-material/Dashboard\";\n\nimport {\n  CanAccess,\n  type ITreeMenu,\n  useIsExistAuthentication,\n  useLogout,\n  useTitle,\n  useTranslate,\n  useRouterContext,\n  useRouterType,\n  useLink,\n  useMenu,\n  useRefineContext,\n  useActiveAuthProvider,\n  pickNotDeprecated,\n  useWarnAboutChange,\n} from \"@refinedev/core\";\n\nimport type { RefineThemedLayoutSiderProps } from \"../types\";\n\nimport { ThemedTitle as DefaultTitle } from \"@components\";\n\n/**\n * @deprecated It is recommended to use the improved `ThemedLayoutV2`. Review migration guidelines. https://refine.dev/docs/api-reference/mui/components/mui-themed-layout/#migrate-themedlayout-to-themedlayoutv2\n */\nexport const ThemedSider: React.FC<RefineThemedLayoutSiderProps> = ({\n  Title: TitleFromProps,\n  render,\n  meta,\n  isSiderOpen,\n  onToggleSiderClick,\n}) => {\n  const [opened, setOpened] = useState(false);\n\n  const drawerWidth = () => {\n    if (isSiderOpen) return 240;\n    return 56;\n  };\n\n  const t = useTranslate();\n  const routerType = useRouterType();\n  const Link = useLink();\n  const { Link: LegacyLink } = useRouterContext();\n  const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n  const { hasDashboard } = useRefineContext();\n  const translate = useTranslate();\n\n  const { menuItems, selectedKey, defaultOpenKeys } = useMenu({ meta });\n  const isExistAuthentication = useIsExistAuthentication();\n  const TitleFromContext = useTitle();\n  const authProvider = useActiveAuthProvider();\n  const { warnWhen, setWarnWhen } = useWarnAboutChange();\n  const { mutate: mutateLogout } = useLogout({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n\n  const [open, setOpen] = useState<{ [k: string]: any }>({});\n\n  React.useEffect(() => {\n    setOpen((previous) => {\n      const previousKeys: string[] = Object.keys(previous);\n      const previousOpenKeys = previousKeys.filter((key) => previous[key]);\n\n      const uniqueKeys = new Set([...previousOpenKeys, ...defaultOpenKeys]);\n      const uniqueKeysRecord = Object.fromEntries(\n        Array.from(uniqueKeys.values()).map((key) => [key, true]),\n      );\n      return uniqueKeysRecord;\n    });\n  }, [defaultOpenKeys]);\n\n  const RenderToTitle = TitleFromProps ?? TitleFromContext ?? DefaultTitle;\n\n  const handleClick = (key: string) => {\n    setOpen({ ...open, [key]: !open[key] });\n  };\n\n  const renderTreeView = (tree: ITreeMenu[], selectedKey?: string) => {\n    return tree.map((item: ITreeMenu) => {\n      const { icon, label, route, name, children, parentName, meta, options } =\n        item;\n      const isOpen = open[item.key || \"\"] || false;\n\n      const isSelected = item.key === selectedKey;\n      const isNested = !(\n        pickNotDeprecated(meta?.parent, options?.parent, parentName) ===\n        undefined\n      );\n\n      if (children.length > 0) {\n        return (\n          <CanAccess\n            key={item.key}\n            resource={name}\n            action=\"list\"\n            params={{\n              resource: item,\n            }}\n          >\n            <div key={item.key}>\n              <Tooltip\n                title={label ?? name}\n                placement=\"right\"\n                disableHoverListener={isSiderOpen}\n                arrow\n              >\n                <ListItemButton\n                  onClick={() => {\n                    if (!isSiderOpen) {\n                      onToggleSiderClick?.(true);\n                      if (!isOpen) {\n                        handleClick(item.key || \"\");\n                      }\n                    } else {\n                      handleClick(item.key || \"\");\n                    }\n                  }}\n                  sx={{\n                    pl: isNested ? 4 : 2,\n                    justifyContent: \"center\",\n                    marginTop: \"8px\",\n                  }}\n                >\n                  <ListItemIcon\n                    sx={{\n                      justifyContent: \"center\",\n                      minWidth: \"24px\",\n                      transition: \"margin-right 0.3s\",\n                      marginRight: isSiderOpen ? \"12px\" : \"0px\",\n                      color: \"currentColor\",\n                    }}\n                  >\n                    {icon ?? <ListOutlined />}\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={label}\n                    primaryTypographyProps={{\n                      noWrap: true,\n                      fontSize: \"14px\",\n                    }}\n                  />\n                  {isOpen ? (\n                    <ExpandLess\n                      sx={{\n                        color: \"text.icon\",\n                      }}\n                    />\n                  ) : (\n                    <ExpandMore\n                      sx={{\n                        color: \"text.icon\",\n                      }}\n                    />\n                  )}\n                </ListItemButton>\n              </Tooltip>\n              {isSiderOpen && (\n                <Collapse\n                  in={open[item.key || \"\"]}\n                  timeout=\"auto\"\n                  unmountOnExit\n                >\n                  <List component=\"div\" disablePadding>\n                    {renderTreeView(children, selectedKey)}\n                  </List>\n                </Collapse>\n              )}\n            </div>\n          </CanAccess>\n        );\n      }\n\n      return (\n        <CanAccess\n          key={item.key}\n          resource={name}\n          action=\"list\"\n          params={{ resource: item }}\n        >\n          <Tooltip\n            title={label ?? name}\n            placement=\"right\"\n            disableHoverListener={isSiderOpen}\n            arrow\n          >\n            <ListItemButton\n              component={ActiveLink}\n              to={route}\n              selected={isSelected}\n              onClick={() => {\n                setOpened(false);\n              }}\n              sx={{\n                pl: isNested ? 4 : 2,\n                py: isNested ? 1.25 : 1,\n                justifyContent: \"center\",\n                color: isSelected ? \"primary.main\" : \"text.primary\",\n              }}\n            >\n              <ListItemIcon\n                sx={{\n                  justifyContent: \"center\",\n                  transition: \"margin-right 0.3s\",\n                  marginRight: isSiderOpen ? \"12px\" : \"0px\",\n                  minWidth: \"24px\",\n                  color: \"currentColor\",\n                }}\n              >\n                {icon ?? <ListOutlined />}\n              </ListItemIcon>\n              <ListItemText\n                primary={label}\n                primaryTypographyProps={{\n                  noWrap: true,\n                  fontSize: \"14px\",\n                }}\n              />\n            </ListItemButton>\n          </Tooltip>\n        </CanAccess>\n      );\n    });\n  };\n\n  const dashboard = hasDashboard ? (\n    <CanAccess resource=\"dashboard\" action=\"list\">\n      <Tooltip\n        title={translate(\"dashboard.title\", \"Dashboard\")}\n        placement=\"right\"\n        disableHoverListener={isSiderOpen}\n        arrow\n      >\n        <ListItemButton\n          component={ActiveLink}\n          to=\"/\"\n          selected={selectedKey === \"/\"}\n          onClick={() => {\n            setOpened(false);\n          }}\n          sx={{\n            pl: 2,\n            py: 1,\n            justifyContent: \"center\",\n            color: selectedKey === \"/\" ? \"primary.main\" : \"text.primary\",\n          }}\n        >\n          <ListItemIcon\n            sx={{\n              justifyContent: \"center\",\n              minWidth: \"24px\",\n              transition: \"margin-right 0.3s\",\n              marginRight: isSiderOpen ? \"12px\" : \"0px\",\n              color: \"currentColor\",\n              fontSize: \"14px\",\n            }}\n          >\n            <Dashboard />\n          </ListItemIcon>\n          <ListItemText\n            primary={translate(\"dashboard.title\", \"Dashboard\")}\n            primaryTypographyProps={{\n              noWrap: true,\n              fontSize: \"14px\",\n            }}\n          />\n        </ListItemButton>\n      </Tooltip>\n    </CanAccess>\n  ) : null;\n\n  const handleLogout = () => {\n    if (warnWhen) {\n      const confirm = window.confirm(\n        t(\n          \"warnWhenUnsavedChanges\",\n          \"Are you sure you want to leave? You have unsaved changes.\",\n        ),\n      );\n\n      if (confirm) {\n        setWarnWhen(false);\n        mutateLogout();\n      }\n    } else {\n      mutateLogout();\n    }\n  };\n\n  const logout = isExistAuthentication && (\n    <Tooltip\n      title={t(\"buttons.logout\", \"Logout\")}\n      placement=\"right\"\n      disableHoverListener={isSiderOpen}\n      arrow\n    >\n      <ListItemButton\n        key=\"logout\"\n        onClick={() => handleLogout()}\n        sx={{\n          justifyContent: \"center\",\n        }}\n      >\n        <ListItemIcon\n          sx={{\n            justifyContent: \"center\",\n            minWidth: \"24px\",\n            transition: \"margin-right 0.3s\",\n            marginRight: isSiderOpen ? \"12px\" : \"0px\",\n            marginLeft: \"2px\",\n            color: \"currentColor\",\n          }}\n        >\n          <Logout />\n        </ListItemIcon>\n        <ListItemText\n          primary={t(\"buttons.logout\", \"Logout\")}\n          primaryTypographyProps={{\n            noWrap: true,\n            fontSize: \"14px\",\n          }}\n        />\n      </ListItemButton>\n    </Tooltip>\n  );\n\n  const items = renderTreeView(menuItems, selectedKey);\n\n  const renderSider = () => {\n    if (render) {\n      return render({\n        dashboard,\n        logout,\n        items,\n        collapsed: !isSiderOpen,\n      });\n    }\n    return (\n      <>\n        {dashboard}\n        {items}\n        {logout}\n      </>\n    );\n  };\n\n  const drawer = (\n    <List\n      disablePadding\n      sx={{\n        flexGrow: 1,\n        paddingTop: \"16px\",\n      }}\n    >\n      {renderSider()}\n    </List>\n  );\n\n  return (\n    <>\n      <Box\n        sx={{\n          width: { xs: drawerWidth() },\n          display: {\n            xs: \"none\",\n            md: \"block\",\n          },\n          transition: \"width 0.3s ease\",\n        }}\n      />\n      <Box\n        component=\"nav\"\n        sx={{\n          position: \"fixed\",\n          zIndex: 1101,\n          width: { sm: drawerWidth() },\n          display: \"flex\",\n        }}\n      >\n        <Drawer\n          variant=\"temporary\"\n          elevation={2}\n          open={opened}\n          onClose={() => setOpened(false)}\n          ModalProps={{\n            keepMounted: true, // Better open performance on mobile.\n          }}\n          sx={{\n            display: {\n              sm: \"block\",\n              md: \"none\",\n            },\n          }}\n        >\n          <Box\n            sx={{\n              width: drawerWidth(),\n            }}\n          >\n            <Box\n              sx={{\n                height: 64,\n                display: \"flex\",\n                alignItems: \"center\",\n                paddingLeft: \"16px\",\n                fontSize: \"14px\",\n              }}\n            >\n              <RenderToTitle collapsed={false} />\n            </Box>\n            {drawer}\n          </Box>\n        </Drawer>\n        <Drawer\n          variant=\"permanent\"\n          sx={{\n            display: { xs: \"none\", md: \"block\" },\n            \"& .MuiDrawer-paper\": {\n              width: drawerWidth,\n              overflow: \"hidden\",\n              transition: \"width 200ms cubic-bezier(0.4, 0, 0.6, 1) 0ms\",\n            },\n          }}\n          open\n        >\n          <Paper\n            elevation={0}\n            sx={{\n              fontSize: \"14px\",\n              width: \"100%\",\n              height: 64,\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: !isSiderOpen ? \"center\" : \"space-between\",\n              paddingLeft: !isSiderOpen ? 0 : \"16px\",\n              paddingRight: !isSiderOpen ? 0 : \"8px\",\n              variant: \"outlined\",\n              borderRadius: 0,\n              borderBottom: (theme) =>\n                `1px solid ${theme.palette.action.focus}`,\n            }}\n          >\n            <RenderToTitle collapsed={!isSiderOpen} />\n            {isSiderOpen && (\n              <IconButton\n                size=\"small\"\n                onClick={() => onToggleSiderClick?.(false)}\n              >\n                {<ChevronLeft />}\n              </IconButton>\n            )}\n          </Paper>\n          <Box\n            sx={{\n              flexGrow: 1,\n              overflowX: \"hidden\",\n              overflowY: \"auto\",\n            }}\n          >\n            {drawer}\n          </Box>\n        </Drawer>\n        <IconButton\n          sx={(theme) => {\n            const { palette } = theme;\n            const { mode, getContrastText, primary, background } = palette;\n\n            return {\n              color:\n                mode === \"light\"\n                  ? getContrastText(primary.main)\n                  : getContrastText(background.paper),\n              display: { xs: \"flex\", md: \"none\" },\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              position: \"fixed\",\n              top: \"12px\",\n              left: \"16px\",\n              zIndex: 1199,\n              height: \"36px\",\n              width: \"36px\",\n            };\n          }}\n          onClick={() => setOpened((prev) => !prev)}\n        >\n          <MenuRounded />\n        </IconButton>\n      </Box>\n    </>\n  );\n};\n","import React from \"react\";\nimport { useGetIdentity, useActiveAuthProvider } from \"@refinedev/core\";\n\nimport AppBar from \"@mui/material/AppBar\";\nimport Stack from \"@mui/material/Stack\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Avatar from \"@mui/material/Avatar\";\nimport IconButton from \"@mui/material/IconButton\";\n\nimport Menu from \"@mui/icons-material/Menu\";\n\nimport type { RefineThemedLayoutHeaderProps } from \"../types\";\n\n/**\n * @deprecated It is recommended to use the improved `ThemedLayoutV2`. Review migration guidelines. https://refine.dev/docs/api-reference/mui/components/mui-themed-layout/#migrate-themedlayout-to-themedlayoutv2\n */\nexport const ThemedHeader: React.FC<RefineThemedLayoutHeaderProps> = ({\n  isSiderOpen,\n  onToggleSiderClick,\n  toggleSiderIcon: toggleSiderIconFromProps,\n}) => {\n  const authProvider = useActiveAuthProvider();\n  const { data: user } = useGetIdentity({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n\n  const hasSidebarToggle = Boolean(onToggleSiderClick);\n\n  return (\n    <AppBar position=\"sticky\">\n      <Toolbar>\n        {hasSidebarToggle && (\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={() => onToggleSiderClick?.()}\n            edge=\"start\"\n            sx={{\n              mr: 2,\n              display: { xs: \"none\", md: \"flex\" },\n              ...(isSiderOpen && { display: \"none\" }),\n            }}\n          >\n            {toggleSiderIconFromProps?.(Boolean(isSiderOpen)) ?? <Menu />}\n          </IconButton>\n        )}\n        <Stack\n          direction=\"row\"\n          width=\"100%\"\n          justifyContent=\"flex-end\"\n          alignItems=\"center\"\n        >\n          <Stack\n            direction=\"row\"\n            gap=\"16px\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n          >\n            <Typography\n              sx={{\n                display: { xs: \"none\", md: \"block\" },\n              }}\n              variant=\"subtitle2\"\n            >\n              {user?.name}\n            </Typography>\n            <Avatar src={user?.avatar} alt={user?.name} />\n          </Stack>\n        </Stack>\n      </Toolbar>\n    </AppBar>\n  );\n};\n","import React from \"react\";\nimport { useRouterContext, useLink, useRouterType } from \"@refinedev/core\";\n\nimport MuiLink from \"@mui/material/Link\";\nimport SvgIcon from \"@mui/material/SvgIcon\";\nimport Typography from \"@mui/material/Typography\";\n\nimport type { RefineLayoutThemedTitleProps } from \"../types\";\n\nconst defaultText = \"Refine Project\";\n\nconst defaultIcon = (\n  <svg\n    width={24}\n    height={24}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    data-testid=\"refine-logo\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M13.7889 0.422291C12.6627 -0.140764 11.3373 -0.140764 10.2111 0.422291L2.21115 4.42229C0.85601 5.09986 0 6.48491 0 8V16C0 17.5151 0.85601 18.9001 2.21115 19.5777L10.2111 23.5777C11.3373 24.1408 12.6627 24.1408 13.7889 23.5777L21.7889 19.5777C23.144 18.9001 24 17.5151 24 16V8C24 6.48491 23.144 5.09986 21.7889 4.42229L13.7889 0.422291ZM8 8C8 5.79086 9.79086 4 12 4C14.2091 4 16 5.79086 16 8V16C16 18.2091 14.2091 20 12 20C9.79086 20 8 18.2091 8 16V8Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"M14 8C14 9.10457 13.1046 10 12 10C10.8954 10 10 9.10457 10 8C10 6.89543 10.8954 6 12 6C13.1046 6 14 6.89543 14 8Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);\n\n/**\n * @deprecated It is recommended to use the improved `ThemedLayoutV2`. Review migration guidelines. https://refine.dev/docs/api-reference/mui/components/mui-themed-layout/#migrate-themedlayout-to-themedlayoutv2\n */\nexport const ThemedTitle: React.FC<RefineLayoutThemedTitleProps> = ({\n  collapsed,\n  wrapperStyles,\n  icon = defaultIcon,\n  text = defaultText,\n}) => {\n  const routerType = useRouterType();\n  const Link = useLink();\n  const { Link: LegacyLink } = useRouterContext();\n\n  const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n  return (\n    <MuiLink\n      to=\"/\"\n      component={ActiveLink}\n      underline=\"none\"\n      sx={{\n        display: \"flex\",\n        alignItems: \"center\",\n        gap: \"12px\",\n        ...wrapperStyles,\n      }}\n    >\n      <SvgIcon height=\"24px\" width=\"24px\" color=\"primary\">\n        {icon}\n      </SvgIcon>\n      {!collapsed && (\n        <Typography\n          variant=\"h6\"\n          fontWeight={700}\n          color=\"text.primary\"\n          fontSize=\"inherit\"\n          textOverflow=\"ellipsis\"\n          overflow=\"hidden\"\n        >\n          {text}\n        </Typography>\n      )}\n    </MuiLink>\n  );\n};\n","import React from \"react\";\n\nimport Box from \"@mui/material/Box\";\n\nimport { ThemedLayoutContextProvider } from \"@contexts\";\nimport { ThemedSiderV2 as DefaultSider } from \"./sider\";\nimport { ThemedHeaderV2 as DefaultHeader } from \"./header\";\nimport type { RefineThemedLayoutV2Props } from \"./types\";\n\nexport const ThemedLayoutV2: React.FC<RefineThemedLayoutV2Props> = ({\n  Sider,\n  Header,\n  Title,\n  Footer,\n  OffLayoutArea,\n  children,\n  initialSiderCollapsed,\n}) => {\n  const SiderToRender = Sider ?? DefaultSider;\n  const HeaderToRender = Header ?? DefaultHeader;\n\n  return (\n    <ThemedLayoutContextProvider initialSiderCollapsed={initialSiderCollapsed}>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <SiderToRender Title={Title} />\n        <Box\n          sx={[\n            {\n              display: \"flex\",\n              flexDirection: \"column\",\n              flex: 1,\n              minWidth: \"1px\",\n              minHeight: \"1px\",\n            },\n          ]}\n        >\n          <HeaderToRender />\n          <Box\n            component=\"main\"\n            sx={{\n              p: { xs: 1, md: 2, lg: 3 },\n              flexGrow: 1,\n              bgcolor: (theme) => theme.palette.background.default,\n            }}\n          >\n            {children}\n          </Box>\n          {Footer && <Footer />}\n        </Box>\n        {OffLayoutArea && <OffLayoutArea />}\n      </Box>\n    </ThemedLayoutContextProvider>\n  );\n};\n","import React, { type ReactNode, useState } from \"react\";\n\nimport type { IThemedLayoutContext } from \"./IThemedLayoutContext\";\n\nexport const ThemedLayoutContext = React.createContext<IThemedLayoutContext>({\n  siderCollapsed: false,\n  mobileSiderOpen: false,\n  setSiderCollapsed: () => undefined,\n  setMobileSiderOpen: () => undefined,\n});\n\nexport const ThemedLayoutContextProvider: React.FC<{\n  children: ReactNode;\n  initialSiderCollapsed?: boolean;\n}> = ({ children, initialSiderCollapsed }) => {\n  const [siderCollapsed, setSiderCollapsed] = useState(\n    initialSiderCollapsed ?? false,\n  );\n  const [mobileSiderOpen, setMobileSiderOpen] = useState(false);\n\n  return (\n    <ThemedLayoutContext.Provider\n      value={{\n        siderCollapsed,\n        mobileSiderOpen,\n        setSiderCollapsed,\n        setMobileSiderOpen,\n      }}\n    >\n      {children}\n    </ThemedLayoutContext.Provider>\n  );\n};\n","import React, { type CSSProperties, useState } from \"react\";\n\nimport Box from \"@mui/material/Box\";\nimport Drawer from \"@mui/material/Drawer\";\nimport List from \"@mui/material/List\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Collapse from \"@mui/material/Collapse\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Paper from \"@mui/material/Paper\";\n\nimport ListOutlined from \"@mui/icons-material/ListOutlined\";\nimport Logout from \"@mui/icons-material/Logout\";\nimport ExpandLess from \"@mui/icons-material/ExpandLess\";\nimport ExpandMore from \"@mui/icons-material/ExpandMore\";\nimport ChevronLeft from \"@mui/icons-material/ChevronLeft\";\nimport Dashboard from \"@mui/icons-material/Dashboard\";\n\nimport {\n  CanAccess,\n  type ITreeMenu,\n  useIsExistAuthentication,\n  useLogout,\n  useTitle,\n  useTranslate,\n  useRouterContext,\n  useRouterType,\n  useLink,\n  useMenu,\n  useRefineContext,\n  useActiveAuthProvider,\n  pickNotDeprecated,\n  useWarnAboutChange,\n} from \"@refinedev/core\";\nimport type { RefineThemedLayoutV2SiderProps } from \"../types\";\n\nimport { ThemedTitleV2 as DefaultTitle } from \"@components\";\nimport { useThemedLayoutContext } from \"@hooks\";\n\nexport const ThemedSiderV2: React.FC<RefineThemedLayoutV2SiderProps> = ({\n  Title: TitleFromProps,\n  render,\n  meta,\n  activeItemDisabled = false,\n}) => {\n  const {\n    siderCollapsed,\n    setSiderCollapsed,\n    mobileSiderOpen,\n    setMobileSiderOpen,\n  } = useThemedLayoutContext();\n\n  const drawerWidth = () => {\n    if (siderCollapsed) return 56;\n    return 240;\n  };\n\n  const t = useTranslate();\n  const routerType = useRouterType();\n  const Link = useLink();\n  const { Link: LegacyLink } = useRouterContext();\n  const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n  const { hasDashboard } = useRefineContext();\n  const translate = useTranslate();\n\n  const { menuItems, selectedKey, defaultOpenKeys } = useMenu({ meta });\n  const isExistAuthentication = useIsExistAuthentication();\n  const TitleFromContext = useTitle();\n  const authProvider = useActiveAuthProvider();\n  const { warnWhen, setWarnWhen } = useWarnAboutChange();\n  const { mutate: mutateLogout } = useLogout({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n\n  const [open, setOpen] = useState<{ [k: string]: any }>({});\n\n  React.useEffect(() => {\n    setOpen((previous) => {\n      const previousKeys: string[] = Object.keys(previous);\n      const previousOpenKeys = previousKeys.filter((key) => previous[key]);\n\n      const uniqueKeys = new Set([...previousOpenKeys, ...defaultOpenKeys]);\n      const uniqueKeysRecord = Object.fromEntries(\n        Array.from(uniqueKeys.values()).map((key) => [key, true]),\n      );\n      return uniqueKeysRecord;\n    });\n  }, [defaultOpenKeys]);\n\n  const RenderToTitle = TitleFromProps ?? TitleFromContext ?? DefaultTitle;\n\n  const handleClick = (key: string) => {\n    setOpen({ ...open, [key]: !open[key] });\n  };\n\n  const renderTreeView = (tree: ITreeMenu[], selectedKey?: string) => {\n    return tree.map((item: ITreeMenu) => {\n      const { icon, label, route, name, children, parentName, meta, options } =\n        item;\n      const isOpen = open[item.key || \"\"] || false;\n\n      const isSelected = item.key === selectedKey;\n      const isNested = !(\n        pickNotDeprecated(meta?.parent, options?.parent, parentName) ===\n        undefined\n      );\n\n      if (children.length > 0) {\n        return (\n          <CanAccess\n            key={item.key}\n            resource={name}\n            action=\"list\"\n            params={{\n              resource: item,\n            }}\n          >\n            <div key={item.key}>\n              <Tooltip\n                title={label ?? name}\n                placement=\"right\"\n                disableHoverListener={!siderCollapsed}\n                arrow\n              >\n                <ListItemButton\n                  onClick={() => {\n                    if (siderCollapsed) {\n                      setSiderCollapsed(false);\n                      if (!isOpen) {\n                        handleClick(item.key || \"\");\n                      }\n                    } else {\n                      handleClick(item.key || \"\");\n                    }\n                  }}\n                  sx={{\n                    pl: isNested ? 4 : 2,\n                    justifyContent: \"center\",\n                  }}\n                >\n                  <ListItemIcon\n                    sx={{\n                      justifyContent: \"center\",\n                      minWidth: \"24px\",\n                      transition: \"margin-right 0.3s\",\n                      marginRight: siderCollapsed ? \"0px\" : \"12px\",\n                      color: \"currentColor\",\n                    }}\n                  >\n                    {icon ?? <ListOutlined />}\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={label}\n                    primaryTypographyProps={{\n                      noWrap: true,\n                      fontSize: \"14px\",\n                    }}\n                  />\n                  {isOpen ? (\n                    <ExpandLess\n                      sx={{\n                        color: \"text.icon\",\n                      }}\n                    />\n                  ) : (\n                    <ExpandMore\n                      sx={{\n                        color: \"text.icon\",\n                      }}\n                    />\n                  )}\n                </ListItemButton>\n              </Tooltip>\n              {!siderCollapsed && (\n                <Collapse\n                  in={open[item.key || \"\"]}\n                  timeout=\"auto\"\n                  unmountOnExit\n                >\n                  <List component=\"div\" disablePadding>\n                    {renderTreeView(children, selectedKey)}\n                  </List>\n                </Collapse>\n              )}\n            </div>\n          </CanAccess>\n        );\n      }\n\n      const linkStyle: CSSProperties =\n        activeItemDisabled && isSelected ? { pointerEvents: \"none\" } : {};\n\n      return (\n        <CanAccess\n          key={item.key}\n          resource={name}\n          action=\"list\"\n          params={{ resource: item }}\n        >\n          <Tooltip\n            title={label ?? name}\n            placement=\"right\"\n            disableHoverListener={!siderCollapsed}\n            arrow\n          >\n            <ListItemButton\n              component={ActiveLink}\n              to={route}\n              selected={isSelected}\n              style={linkStyle}\n              onClick={() => {\n                setMobileSiderOpen(false);\n              }}\n              sx={{\n                pl: isNested ? 4 : 2,\n                py: isNested ? 1.25 : 1,\n                justifyContent: \"center\",\n                color: isSelected ? \"primary.main\" : \"text.primary\",\n              }}\n            >\n              <ListItemIcon\n                sx={{\n                  justifyContent: \"center\",\n                  transition: \"margin-right 0.3s\",\n                  marginRight: siderCollapsed ? \"0px\" : \"12px\",\n                  minWidth: \"24px\",\n                  color: \"currentColor\",\n                }}\n              >\n                {icon ?? <ListOutlined />}\n              </ListItemIcon>\n              <ListItemText\n                primary={label}\n                primaryTypographyProps={{\n                  noWrap: true,\n                  fontSize: \"14px\",\n                }}\n              />\n            </ListItemButton>\n          </Tooltip>\n        </CanAccess>\n      );\n    });\n  };\n\n  const dashboard = hasDashboard ? (\n    <CanAccess resource=\"dashboard\" action=\"list\">\n      <Tooltip\n        title={translate(\"dashboard.title\", \"Dashboard\")}\n        placement=\"right\"\n        disableHoverListener={!siderCollapsed}\n        arrow\n      >\n        <ListItemButton\n          component={ActiveLink}\n          to=\"/\"\n          selected={selectedKey === \"/\"}\n          onClick={() => {\n            setMobileSiderOpen(false);\n          }}\n          sx={{\n            pl: 2,\n            py: 1,\n            justifyContent: \"center\",\n            color: selectedKey === \"/\" ? \"primary.main\" : \"text.primary\",\n          }}\n        >\n          <ListItemIcon\n            sx={{\n              justifyContent: \"center\",\n              minWidth: \"24px\",\n              transition: \"margin-right 0.3s\",\n              marginRight: siderCollapsed ? \"0px\" : \"12px\",\n              color: \"currentColor\",\n              fontSize: \"14px\",\n            }}\n          >\n            <Dashboard />\n          </ListItemIcon>\n          <ListItemText\n            primary={translate(\"dashboard.title\", \"Dashboard\")}\n            primaryTypographyProps={{\n              noWrap: true,\n              fontSize: \"14px\",\n            }}\n          />\n        </ListItemButton>\n      </Tooltip>\n    </CanAccess>\n  ) : null;\n\n  const handleLogout = () => {\n    if (warnWhen) {\n      const confirm = window.confirm(\n        t(\n          \"warnWhenUnsavedChanges\",\n          \"Are you sure you want to leave? You have unsaved changes.\",\n        ),\n      );\n\n      if (confirm) {\n        setWarnWhen(false);\n        mutateLogout();\n      }\n    } else {\n      mutateLogout();\n    }\n  };\n\n  const logout = isExistAuthentication && (\n    <Tooltip\n      title={t(\"buttons.logout\", \"Logout\")}\n      placement=\"right\"\n      disableHoverListener={!siderCollapsed}\n      arrow\n    >\n      <ListItemButton\n        key=\"logout\"\n        onClick={() => handleLogout()}\n        sx={{\n          justifyContent: \"center\",\n        }}\n      >\n        <ListItemIcon\n          sx={{\n            justifyContent: \"center\",\n            minWidth: \"24px\",\n            transition: \"margin-right 0.3s\",\n            marginRight: siderCollapsed ? \"0px\" : \"12px\",\n            color: \"currentColor\",\n          }}\n        >\n          <Logout />\n        </ListItemIcon>\n        <ListItemText\n          primary={t(\"buttons.logout\", \"Logout\")}\n          primaryTypographyProps={{\n            noWrap: true,\n            fontSize: \"14px\",\n          }}\n        />\n      </ListItemButton>\n    </Tooltip>\n  );\n\n  const items = renderTreeView(menuItems, selectedKey);\n\n  const renderSider = () => {\n    if (render) {\n      return render({\n        dashboard,\n        logout,\n        items,\n        collapsed: siderCollapsed,\n      });\n    }\n    return (\n      <>\n        {dashboard}\n        {items}\n        {logout}\n      </>\n    );\n  };\n\n  const drawer = (\n    <List\n      disablePadding\n      sx={{\n        flexGrow: 1,\n        paddingTop: \"16px\",\n      }}\n    >\n      {renderSider()}\n    </List>\n  );\n\n  return (\n    <>\n      <Box\n        sx={{\n          width: { xs: drawerWidth() },\n          display: {\n            xs: \"none\",\n            md: \"block\",\n          },\n          transition: \"width 0.3s ease\",\n        }}\n      />\n      <Box\n        component=\"nav\"\n        sx={{\n          position: \"fixed\",\n          zIndex: 1101,\n          width: { sm: drawerWidth() },\n          display: \"flex\",\n        }}\n      >\n        <Drawer\n          variant=\"temporary\"\n          elevation={2}\n          open={mobileSiderOpen}\n          onClose={() => setMobileSiderOpen(false)}\n          ModalProps={{\n            keepMounted: true, // Better open performance on mobile.\n          }}\n          sx={{\n            display: {\n              sm: \"block\",\n              md: \"none\",\n            },\n          }}\n        >\n          <Box\n            sx={{\n              width: drawerWidth(),\n            }}\n          >\n            <Box\n              sx={{\n                height: 64,\n                display: \"flex\",\n                alignItems: \"center\",\n                paddingLeft: \"16px\",\n                fontSize: \"14px\",\n              }}\n            >\n              <RenderToTitle collapsed={false} />\n            </Box>\n            {drawer}\n          </Box>\n        </Drawer>\n        <Drawer\n          variant=\"permanent\"\n          sx={{\n            display: { xs: \"none\", md: \"block\" },\n            \"& .MuiDrawer-paper\": {\n              width: drawerWidth(),\n              overflow: \"hidden\",\n              transition: \"width 200ms cubic-bezier(0.4, 0, 0.6, 1) 0ms\",\n            },\n          }}\n          open\n        >\n          <Paper\n            elevation={0}\n            sx={{\n              fontSize: \"14px\",\n              width: \"100%\",\n              height: 64,\n              display: \"flex\",\n              flexShrink: 0,\n              alignItems: \"center\",\n              justifyContent: siderCollapsed ? \"center\" : \"space-between\",\n              paddingLeft: siderCollapsed ? 0 : \"16px\",\n              paddingRight: siderCollapsed ? 0 : \"8px\",\n              variant: \"outlined\",\n              borderRadius: 0,\n              borderBottom: (theme) =>\n                `1px solid ${theme.palette.action.focus}`,\n            }}\n          >\n            <RenderToTitle collapsed={siderCollapsed} />\n            {!siderCollapsed && (\n              <IconButton size=\"small\" onClick={() => setSiderCollapsed(true)}>\n                {<ChevronLeft />}\n              </IconButton>\n            )}\n          </Paper>\n          <Box\n            sx={{\n              flexGrow: 1,\n              overflowX: \"hidden\",\n              overflowY: \"auto\",\n            }}\n          >\n            {drawer}\n          </Box>\n        </Drawer>\n      </Box>\n    </>\n  );\n};\n","import {\n  useSelect as useSelectCore,\n  type HttpError,\n  type UseSelectProps,\n  type UseSelectReturnType,\n  type BaseRecord,\n} from \"@refinedev/core\";\n\nimport type { AutocompleteProps } from \"@mui/material/Autocomplete\";\n\nimport isEqual from \"lodash-es/isEqual.js\";\nimport unionWith from \"lodash-es/unionWith.js\";\n\nexport type UseAutocompleteProps<TQueryFnData, TError, TData> = Pick<\n  UseSelectProps<TQueryFnData, TError, TData>,\n  \"resource\"\n> &\n  Omit<\n    UseSelectProps<TQueryFnData, TError, TData>,\n    \"optionLabel\" | \"optionValue\"\n  >;\n\ntype AutocompletePropsType<TQueryFnData> = Required<\n  Pick<\n    AutocompleteProps<TQueryFnData, boolean, boolean, boolean>,\n    \"options\" | \"loading\" | \"onInputChange\" | \"filterOptions\"\n  >\n>;\n\nexport type UseAutocompleteReturnType<TData extends BaseRecord> = Omit<\n  UseSelectReturnType<TData>,\n  \"options\"\n> & {\n  autocompleteProps: AutocompletePropsType<TData>;\n};\n\n/**\n * `useAutocomplete` hook is used to fetch data from the dataProvider and return the options for the select box.\n *\n * It uses `getList` method as query function from the dataProvider that is\n * passed to {@link https://refine.dev/docs/api-reference/core/components/refine-config `<Refine>`}.\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/hooks/useAutocomplete/} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useAutocomplete = <\n  TQueryFnData extends BaseRecord = any,\n  TError extends HttpError = HttpError,\n  TData extends BaseRecord = TQueryFnData,\n>(\n  props: UseAutocompleteProps<TQueryFnData, TError, TData>,\n): UseAutocompleteReturnType<TData> => {\n  const { query, defaultValueQuery, onSearch, overtime } = useSelectCore<\n    TQueryFnData,\n    TError,\n    TData\n  >(props);\n\n  return {\n    autocompleteProps: {\n      options:\n        props.selectedOptionsOrder === \"selected-first\"\n          ? unionWith(\n              defaultValueQuery.data?.data || [],\n              query.data?.data || [],\n              isEqual,\n            )\n          : unionWith(\n              query.data?.data || [],\n              defaultValueQuery.data?.data || [],\n              isEqual,\n            ),\n      loading: query.isFetching || defaultValueQuery.isFetching,\n      onInputChange: (event, value) => {\n        if (event?.type === \"change\") {\n          onSearch(value);\n        } else if (event?.type === \"click\") {\n          onSearch(\"\");\n        }\n      },\n      filterOptions: (x) => x,\n    },\n    onSearch,\n    query,\n    defaultValueQuery,\n    queryResult: query,\n    defaultValueQueryResult: defaultValueQuery,\n    overtime,\n  };\n};\n","import {\n  useUpdate,\n  useLiveMode,\n  pickNotDeprecated,\n  useTable as useTableCore,\n  type BaseRecord,\n  type CrudFilters,\n  type HttpError,\n  type Pagination,\n  type Prettify,\n  type UseUpdateProps,\n  type useTableProps as useTablePropsCore,\n  type useTableReturnType as useTableReturnTypeCore,\n  useResourceParams,\n} from \"@refinedev/core\";\nimport { useState } from \"react\";\n\nimport type {\n  DataGridProps,\n  GridFilterModel,\n  GridSortModel,\n} from \"@mui/x-data-grid\";\n\nimport { darken, useTheme } from \"@mui/material/styles\";\n\nimport differenceWith from \"lodash-es/differenceWith.js\";\nimport isEqual from \"lodash-es/isEqual.js\";\n\nimport {\n  transformCrudFiltersToFilterModel,\n  transformCrudSortingToSortModel,\n  transformFilterModelToCrudFilters,\n  transformSortModelToCrudSorting,\n} from \"@definitions\";\n\ntype DataGridPropsOverride = Omit<DataGridProps, \"onFilterModelChange\"> & {\n  onFilterModelChange: (model: GridFilterModel) => void;\n};\n\ntype DataGridPropsType = Required<\n  Pick<\n    DataGridPropsOverride,\n    | \"rows\"\n    | \"loading\"\n    | \"rowCount\"\n    | \"sortingMode\"\n    | \"sortModel\"\n    | \"onSortModelChange\"\n    | \"filterMode\"\n    | \"onFilterModelChange\"\n    | \"sx\"\n    | \"disableRowSelectionOnClick\"\n    | \"onStateChange\"\n    | \"paginationMode\"\n  >\n> &\n  Pick<\n    DataGridProps,\n    | \"paginationModel\"\n    | \"onPaginationModelChange\"\n    | \"filterModel\"\n    | \"processRowUpdate\"\n  >;\n\nexport type UseDataGridProps<\n  TQueryFnData,\n  TError extends HttpError,\n  TSearchVariables,\n  TData extends BaseRecord,\n> = Omit<\n  useTablePropsCore<TQueryFnData, TError, TData>,\n  \"pagination\" | \"filters\"\n> & {\n  onSearch?: (data: TSearchVariables) => CrudFilters | Promise<CrudFilters>;\n  pagination?: Prettify<\n    Omit<Pagination, \"pageSize\"> & {\n      /**\n       * Initial number of items per page\n       * @default 25\n       */\n      pageSize?: number;\n    }\n  >;\n  filters?: Prettify<\n    Omit<\n      NonNullable<useTablePropsCore<TQueryFnData, TError, TData>[\"filters\"]>,\n      \"defaultBehavior\"\n    > & {\n      /**\n       * Default behavior of the `setFilters` function\n       * @default \"replace\"\n       */\n      defaultBehavior?: \"replace\" | \"merge\";\n    }\n  >;\n  editable?: boolean;\n  updateMutationOptions?: UseUpdateProps<\n    TData,\n    TError,\n    TData\n  >[\"mutationOptions\"];\n};\n\nexport type UseDataGridReturnType<\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TSearchVariables = unknown,\n> = useTableReturnTypeCore<TData, TError> & {\n  dataGridProps: DataGridPropsType;\n  search: (value: TSearchVariables) => Promise<void>;\n};\n\n/**\n * By using useDataGrid, you are able to get properties that are compatible with\n * Material UI {@link https://mui.com/x/react-data-grid/ `<DataGrid>`} component.\n * All features such as sorting, filtering and pagination comes as out of box.\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/hooks/useDataGrid/} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TSearchVariables - Values for search params\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport function useDataGrid<\n  TQueryFnData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TSearchVariables = unknown,\n  TData extends BaseRecord = TQueryFnData,\n>({\n  onSearch: onSearchProp,\n  initialCurrent,\n  initialPageSize = 25,\n  pagination,\n  hasPagination = true,\n  initialSorter,\n  permanentSorter,\n  defaultSetFilterBehavior = \"replace\",\n  initialFilter,\n  permanentFilter,\n  filters: filtersFromProp,\n  sorters: sortersFromProp,\n  syncWithLocation: syncWithLocationProp,\n  resource: resourceFromProp,\n  successNotification,\n  errorNotification,\n  queryOptions,\n  liveMode: liveModeFromProp,\n  onLiveEvent,\n  liveParams,\n  meta,\n  metaData,\n  dataProviderName,\n  overtimeOptions,\n  editable = false,\n  updateMutationOptions,\n}: UseDataGridProps<\n  TQueryFnData,\n  TError,\n  TSearchVariables,\n  TData\n> = {}): UseDataGridReturnType<TData, TError, TSearchVariables> {\n  const theme = useTheme();\n  const liveMode = useLiveMode(liveModeFromProp);\n\n  const [columnsTypes, setColumnsType] = useState<Record<string, string>>();\n\n  const { identifier } = useResourceParams({ resource: resourceFromProp });\n\n  const {\n    tableQueryResult,\n    tableQuery,\n    current,\n    setCurrent,\n    pageSize,\n    setPageSize,\n    filters,\n    setFilters,\n    sorters,\n    setSorters,\n    sorter,\n    setSorter,\n    pageCount,\n    createLinkForSyncWithLocation,\n    overtime,\n  } = useTableCore<TQueryFnData, TError, TData>({\n    permanentSorter,\n    permanentFilter,\n    initialCurrent,\n    initialPageSize,\n    pagination,\n    hasPagination,\n    initialSorter,\n    initialFilter,\n    filters: filtersFromProp,\n    sorters: sortersFromProp,\n    syncWithLocation: syncWithLocationProp,\n    defaultSetFilterBehavior,\n    resource: resourceFromProp,\n    successNotification,\n    errorNotification,\n    queryOptions,\n    liveMode: liveModeFromProp,\n    onLiveEvent,\n    liveParams,\n    meta: pickNotDeprecated(meta, metaData),\n    metaData: pickNotDeprecated(meta, metaData),\n    dataProviderName,\n    overtimeOptions,\n  });\n\n  const [muiCrudFilters, setMuiCrudFilters] = useState<CrudFilters>(filters);\n\n  const { data, isFetched, isLoading } = tableQueryResult;\n\n  const isServerSideFilteringEnabled =\n    (filtersFromProp?.mode || \"server\") === \"server\";\n  const isServerSideSortingEnabled =\n    (sortersFromProp?.mode || \"server\") === \"server\";\n  const hasPaginationString = hasPagination === false ? \"off\" : \"server\";\n  const isPaginationEnabled =\n    (pagination?.mode ?? hasPaginationString) !== \"off\";\n\n  const preferredPermanentSorters =\n    pickNotDeprecated(sortersFromProp?.permanent, permanentSorter) ?? [];\n  const preferredPermanentFilters =\n    pickNotDeprecated(filtersFromProp?.permanent, permanentFilter) ?? [];\n\n  const handlePageChange = (page: number) => {\n    if (isPaginationEnabled) {\n      setCurrent(page + 1);\n    }\n  };\n  const handlePageSizeChange = (pageSize: number) => {\n    if (isPaginationEnabled) {\n      setPageSize(pageSize);\n    }\n  };\n\n  const handleSortModelChange = (sortModel: GridSortModel) => {\n    const crudSorting = transformSortModelToCrudSorting(sortModel);\n    setSorters(crudSorting);\n  };\n\n  const handleFilterModelChange = (filterModel: GridFilterModel) => {\n    const crudFilters = transformFilterModelToCrudFilters(filterModel);\n    setMuiCrudFilters(crudFilters);\n    setFilters(crudFilters.filter((f) => f.value !== \"\"));\n    if (isPaginationEnabled) {\n      setCurrent(1);\n    }\n  };\n\n  const search = async (value: TSearchVariables) => {\n    if (onSearchProp) {\n      const searchFilters = await onSearchProp(value);\n      setMuiCrudFilters(searchFilters);\n      setFilters(searchFilters.filter((f) => f.value !== \"\"));\n      if (isPaginationEnabled) {\n        setCurrent(1);\n      }\n    }\n  };\n\n  const dataGridPaginationValues = (): Pick<\n    DataGridProps,\n    \"paginationModel\" | \"onPaginationModelChange\"\n  > &\n    Required<Pick<DataGridProps, \"paginationMode\">> => {\n    if (isPaginationEnabled) {\n      return {\n        paginationMode: \"server\" as const,\n        paginationModel: {\n          page: current - 1,\n          pageSize,\n        },\n        onPaginationModelChange: (model) => {\n          handlePageChange(model.page);\n          handlePageSizeChange(model.pageSize);\n        },\n      };\n    }\n\n    return {\n      paginationMode: \"client\" as const,\n    };\n  };\n\n  const { mutate } = useUpdate<TData, TError, TData>({\n    mutationOptions: updateMutationOptions,\n  });\n\n  const processRowUpdate = async (newRow: TData, oldRow: TData) => {\n    if (!editable) {\n      return Promise.resolve(oldRow);\n    }\n\n    if (!identifier) {\n      return Promise.reject(new Error(\"Resource is not defined\"));\n    }\n\n    return new Promise((resolve, reject) => {\n      mutate(\n        {\n          resource: identifier,\n          id: newRow.id as string,\n          values: newRow,\n        },\n        {\n          onError: (error) => {\n            reject(error);\n          },\n          onSuccess: (data) => {\n            resolve(newRow);\n          },\n        },\n      );\n    });\n  };\n\n  return {\n    tableQueryResult,\n    tableQuery,\n    dataGridProps: {\n      disableRowSelectionOnClick: true,\n      rows: data?.data || [],\n      loading: liveMode === \"auto\" ? isLoading : !isFetched,\n      rowCount: data?.total || 0,\n      ...dataGridPaginationValues(),\n      sortingMode: isServerSideSortingEnabled ? \"server\" : \"client\",\n      sortModel: transformCrudSortingToSortModel(\n        differenceWith(sorters, preferredPermanentSorters, isEqual),\n      ),\n      onSortModelChange: handleSortModelChange,\n      filterMode: isServerSideFilteringEnabled ? \"server\" : \"client\",\n      filterModel: transformCrudFiltersToFilterModel(\n        differenceWith(muiCrudFilters, preferredPermanentFilters, isEqual),\n        columnsTypes,\n      ),\n      onFilterModelChange: handleFilterModelChange,\n      onStateChange: (state) => {\n        const newColumnsTypes = Object.fromEntries(\n          Object.entries(state.columns.lookup).map(([key, value]) => {\n            return [key, (value as any).type];\n          }),\n        );\n        const isStateChanged = !isEqual(newColumnsTypes, columnsTypes);\n\n        if (isStateChanged) {\n          setColumnsType(newColumnsTypes);\n        }\n      },\n      sx: {\n        border: \"none\",\n        \"& .MuiDataGrid-columnHeaders\": {\n          background: darken(theme.palette.background.paper, 0.05),\n          borderBottom: `1px solid ${darken(\n            theme.palette.background.paper,\n            0.1,\n          )}`,\n        },\n        \"& .MuiDataGrid-cell\": {\n          borderBottom: `1px solid ${darken(\n            theme.palette.background.paper,\n            0.05,\n          )}`,\n        },\n      },\n      processRowUpdate: editable ? processRowUpdate : undefined,\n    },\n    current,\n    setCurrent,\n    pageSize,\n    setPageSize,\n    pageCount,\n    sorters,\n    setSorters,\n    sorter,\n    setSorter,\n    filters,\n    setFilters,\n    search,\n    createLinkForSyncWithLocation,\n    overtime,\n  };\n}\n","import type {\n  GridFilterItem,\n  GridFilterModel,\n  GridSortModel,\n} from \"@mui/x-data-grid\";\nimport { GridLogicOperator } from \"@mui/x-data-grid\";\n\nimport type {\n  CrudFilters,\n  CrudOperators,\n  CrudSorting,\n  LogicalFilter,\n} from \"@refinedev/core\";\n\nexport const transformSortModelToCrudSorting = (\n  sortModel: GridSortModel,\n): CrudSorting => {\n  const sorter = sortModel.map(({ field, sort }) => ({\n    field,\n    order: sort || \"asc\",\n  }));\n  return sorter;\n};\n\nexport const transformCrudSortingToSortModel = (\n  crudSorting: CrudSorting,\n): GridSortModel => {\n  const sortModel = crudSorting.map(({ field, order }) => ({\n    field,\n    sort: order,\n  }));\n  return sortModel;\n};\n\nexport const transformMuiOperatorToCrudOperator = (\n  operatorValue?: string,\n): Exclude<CrudOperators, \"or\" | \"and\"> => {\n  if (!operatorValue) {\n    return \"eq\";\n  }\n\n  switch (operatorValue) {\n    case \"equals\":\n    case \"is\":\n    case \"=\":\n      return \"eq\";\n    case \"!=\":\n    case \"not\":\n      return \"ne\";\n    case \"contains\":\n      return \"contains\";\n    case \"isAnyOf\":\n      return \"in\";\n    case \">\":\n    case \"after\":\n      return \"gt\";\n    case \">=\":\n    case \"onOrAfter\":\n      return \"gte\";\n    case \"<\":\n    case \"before\":\n      return \"lt\";\n    case \"<=\":\n    case \"onOrBefore\":\n      return \"lte\";\n    case \"startsWith\":\n      return \"startswith\";\n    case \"endsWith\":\n      return \"endswith\";\n    case \"isEmpty\":\n      return \"null\";\n    case \"isNotEmpty\":\n      return \"nnull\";\n    default:\n      return operatorValue as Exclude<CrudOperators, \"or\" | \"and\">;\n  }\n};\n\nexport const transformFilterModelToCrudFilters = ({\n  items,\n  logicOperator,\n}: GridFilterModel): CrudFilters => {\n  const filters = items.map(({ field, value, operator }) => {\n    const filter: LogicalFilter = {\n      field: field,\n      value: [\"isEmpty\", \"isNotEmpty\"].includes(operator) ? true : value ?? \"\",\n      operator: transformMuiOperatorToCrudOperator(operator),\n    };\n\n    return filter;\n  });\n\n  if (logicOperator === GridLogicOperator.Or) {\n    return [{ operator: \"or\", value: filters }];\n  }\n  return filters;\n};\n\nexport const transformCrudOperatorToMuiOperator = (\n  operator: CrudOperators,\n  columnType?: string,\n): string => {\n  switch (columnType) {\n    case \"number\":\n      switch (operator) {\n        case \"eq\":\n          return \"=\";\n        case \"ne\":\n          return \"!=\";\n        case \"gt\":\n          return \">\";\n        case \"gte\":\n          return \">=\";\n        case \"lt\":\n          return \"<\";\n        case \"lte\":\n          return \"<=\";\n        case \"null\":\n          return \"isEmpty\";\n        case \"nnull\":\n          return \"isNotEmpty\";\n        case \"in\":\n          return \"isAnyOf\";\n        default:\n          return operator;\n      }\n    case \"singleSelect\":\n    case \"boolean\":\n      switch (operator) {\n        case \"eq\":\n          return \"is\";\n        default:\n          return operator;\n      }\n    case undefined:\n    case \"string\":\n      switch (operator) {\n        case \"eq\":\n          return \"equals\";\n        case \"contains\":\n          return \"contains\";\n        case \"null\":\n          return \"isEmpty\";\n        case \"nnull\":\n          return \"isNotEmpty\";\n        case \"startswith\":\n          return \"startsWith\";\n        case \"endswith\":\n          return \"endsWith\";\n        case \"in\":\n          return \"isAnyOf\";\n        default:\n          return operator;\n      }\n    case \"date\":\n    case \"dateTime\":\n      switch (operator) {\n        case \"eq\":\n          return \"is\";\n        case \"ne\":\n          return \"not\";\n        case \"gt\":\n          return \"after\";\n        case \"gte\":\n          return \"onOrAfter\";\n        case \"lt\":\n          return \"before\";\n        case \"lte\":\n          return \"onOrBefore\";\n        case \"null\":\n          return \"isEmpty\";\n        case \"nnull\":\n          return \"isNotEmpty\";\n        default:\n          return operator;\n      }\n    default:\n      return operator;\n  }\n};\n\nexport const transformCrudFiltersToFilterModel = (\n  crudFilters: CrudFilters,\n  columnsType?: Record<string, string>,\n): GridFilterModel | undefined => {\n  const gridFilterItems: GridFilterItem[] = [];\n\n  const isExistOrFilter = crudFilters.some(\n    (filter) => filter.operator === \"or\",\n  );\n\n  if (columnsType) {\n    if (isExistOrFilter) {\n      const orLogicalFilters = crudFilters.find(\n        (filter) => filter.operator === \"or\",\n      )?.value as LogicalFilter[];\n\n      orLogicalFilters.map(({ field, value, operator }) => {\n        const columnType = columnsType[field];\n\n        gridFilterItems.push({\n          field: field,\n          operator: transformCrudOperatorToMuiOperator(operator, columnType),\n          value: value === \"\" ? undefined : value,\n          id: field + operator,\n        });\n      });\n    } else {\n      (crudFilters as LogicalFilter[]).map(({ field, value, operator }) => {\n        const columnType = columnsType[field];\n\n        gridFilterItems.push({\n          field: field,\n          operator: transformCrudOperatorToMuiOperator(operator, columnType),\n          value: value === \"\" ? undefined : value,\n          id: field + operator,\n        });\n      });\n    }\n  }\n\n  return {\n    items: gridFilterItems,\n    // If there is \"or\" filter, default link operator is \"or\"\n    logicOperator: isExistOrFilter\n      ? GridLogicOperator.Or\n      : GridLogicOperator.And,\n  };\n};\n","import { useContext } from \"react\";\n\nimport { ThemedLayoutContext } from \"../../contexts/themedLayoutContext\";\n\nexport type UseSiderVisibleType = {\n  siderVisible: boolean;\n  drawerSiderVisible: boolean;\n  setSiderVisible: (visible: boolean) => void;\n  setDrawerSiderVisible: (visible: boolean) => void;\n};\n\n/**\n * @deprecated Please use `useThemedLayoutContext` instead.\n */\nexport const useSiderVisible = (): UseSiderVisibleType => {\n  const {\n    mobileSiderOpen,\n    siderCollapsed,\n    setMobileSiderOpen,\n    setSiderCollapsed,\n  } = useContext(ThemedLayoutContext);\n\n  return {\n    siderVisible: mobileSiderOpen,\n    setSiderVisible: setMobileSiderOpen,\n    drawerSiderVisible: !siderCollapsed,\n    setDrawerSiderVisible: (visible) => setSiderCollapsed(!visible),\n  };\n};\n","import { useContext } from \"react\";\n\nimport { ThemedLayoutContext } from \"../../contexts\";\nimport type { IThemedLayoutContext } from \"../../contexts/themedLayoutContext/IThemedLayoutContext\";\n\nexport type UseThemedLayoutContextType = IThemedLayoutContext;\n\nexport const useThemedLayoutContext = (): UseThemedLayoutContextType => {\n  const {\n    mobileSiderOpen,\n    siderCollapsed,\n    setMobileSiderOpen,\n    setSiderCollapsed,\n  } = useContext(ThemedLayoutContext);\n\n  return {\n    mobileSiderOpen,\n    siderCollapsed,\n    setMobileSiderOpen,\n    setSiderCollapsed,\n  };\n};\n","import React from \"react\";\nimport {\n  useGetIdentity,\n  useActiveAuthProvider,\n  pickNotDeprecated,\n} from \"@refinedev/core\";\n\nimport AppBar from \"@mui/material/AppBar\";\nimport Stack from \"@mui/material/Stack\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Avatar from \"@mui/material/Avatar\";\n\nimport type { RefineThemedLayoutV2HeaderProps } from \"../types\";\n\nimport { HamburgerMenu } from \"../hamburgerMenu\";\n\nexport const ThemedHeaderV2: React.FC<RefineThemedLayoutV2HeaderProps> = ({\n  isSticky,\n  sticky,\n}) => {\n  const authProvider = useActiveAuthProvider();\n  const { data: user } = useGetIdentity({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n\n  const prefferedSticky = pickNotDeprecated(sticky, isSticky) ?? true;\n\n  return (\n    <AppBar position={prefferedSticky ? \"sticky\" : \"relative\"}>\n      <Toolbar>\n        <HamburgerMenu />\n        <Stack\n          direction=\"row\"\n          width=\"100%\"\n          justifyContent=\"flex-end\"\n          alignItems=\"center\"\n        >\n          <Stack\n            direction=\"row\"\n            gap=\"16px\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n          >\n            {user?.name && (\n              <Typography variant=\"subtitle2\" data-testid=\"header-user-name\">\n                {user?.name}\n              </Typography>\n            )}\n            {user?.avatar && <Avatar src={user?.avatar} alt={user?.name} />}\n          </Stack>\n        </Stack>\n      </Toolbar>\n    </AppBar>\n  );\n};\n","import React from \"react\";\n\nimport IconButton from \"@mui/material/IconButton\";\nimport Menu from \"@mui/icons-material/Menu\";\n\nimport type { IconButtonProps } from \"@mui/material/IconButton\";\n\nimport { useThemedLayoutContext } from \"@hooks\";\n\nconst HamburgerIcon = (props: IconButtonProps) => (\n  <IconButton color=\"inherit\" aria-label=\"open drawer\" edge=\"start\" {...props}>\n    <Menu />\n  </IconButton>\n);\n\nexport const HamburgerMenu: React.FC = () => {\n  const {\n    siderCollapsed,\n    setSiderCollapsed,\n    mobileSiderOpen,\n    setMobileSiderOpen,\n  } = useThemedLayoutContext();\n\n  return (\n    <>\n      <HamburgerIcon\n        onClick={() => setSiderCollapsed(!siderCollapsed)}\n        sx={{\n          mr: 2,\n          display: { xs: \"none\", md: \"flex\" },\n          ...(!siderCollapsed && { display: \"none\" }),\n        }}\n      />\n      <HamburgerIcon\n        onClick={() => setMobileSiderOpen(!mobileSiderOpen)}\n        sx={{\n          mr: 2,\n          display: { xs: \"flex\", md: \"none\" },\n          ...(mobileSiderOpen && { display: \"none\" }),\n        }}\n      />\n    </>\n  );\n};\n","import React from \"react\";\nimport {\n  useRouterContext,\n  useLink,\n  useRouterType,\n  useRefineOptions,\n} from \"@refinedev/core\";\n\nimport MuiLink from \"@mui/material/Link\";\nimport SvgIcon from \"@mui/material/SvgIcon\";\nimport Typography from \"@mui/material/Typography\";\n\nimport type { RefineLayoutThemedTitleProps } from \"../types\";\n\nexport const ThemedTitleV2: React.FC<RefineLayoutThemedTitleProps> = ({\n  collapsed,\n  wrapperStyles,\n  icon: iconFromProps,\n  text: textFromProps,\n}) => {\n  const {\n    title: { icon: defaultIcon, text: defaultText } = {},\n  } = useRefineOptions();\n  const icon =\n    typeof iconFromProps === \"undefined\" ? defaultIcon : iconFromProps;\n  const text =\n    typeof textFromProps === \"undefined\" ? defaultText : textFromProps;\n  const routerType = useRouterType();\n  const Link = useLink();\n  const { Link: LegacyLink } = useRouterContext();\n\n  const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n  return (\n    <MuiLink\n      to=\"/\"\n      component={ActiveLink}\n      underline=\"none\"\n      sx={{\n        display: \"flex\",\n        alignItems: \"center\",\n        gap: \"12px\",\n        ...wrapperStyles,\n      }}\n    >\n      <SvgIcon height=\"24px\" width=\"24px\" color=\"primary\">\n        {icon}\n      </SvgIcon>\n      {!collapsed && (\n        <Typography\n          variant=\"h6\"\n          fontWeight={700}\n          color=\"text.primary\"\n          fontSize=\"inherit\"\n          textOverflow=\"ellipsis\"\n          overflow=\"hidden\"\n        >\n          {text}\n        </Typography>\n      )}\n    </MuiLink>\n  );\n};\n","import * as React from \"react\";\nimport { type LoginPageProps, useActiveAuthProvider } from \"@refinedev/core\";\nimport { useForm } from \"@refinedev/react-hook-form\";\n\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Link from \"@mui/material/Link\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\n\nimport {\n  type BaseRecord,\n  type HttpError,\n  useLogin,\n  useTranslate,\n} from \"@refinedev/core\";\n\ntype ILoginForm = {\n  username: string;\n  password: string;\n  remember?: boolean;\n};\n\n/**\n * @deprecated LoginPage is deprecated. Use AuthPage instead. @see {@link https://refine.dev/docs/api-reference/mui/components/mui-auth-page} for more details.\n * **refine** has a default login page form which is served on `/login` route when the `authProvider` configuration is provided.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/components/refine-config/#loginpage} for more details.\n */\nexport const LoginPage: React.FC<LoginPageProps> = () => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<BaseRecord, HttpError, ILoginForm>();\n\n  const authProvider = useActiveAuthProvider();\n  const { mutate: login, isLoading } = useLogin<ILoginForm>({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n\n  const translate = useTranslate();\n\n  return (\n    <>\n      <Box\n        component=\"div\"\n        sx={{\n          background:\n            \"radial-gradient(50% 50% at 50% 50%, #63386A 0%, #310438 100%)\",\n          backgroundSize: \"cover\",\n        }}\n      >\n        <Container\n          component=\"main\"\n          maxWidth=\"xs\"\n          sx={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            height: \"100vh\",\n          }}\n        >\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n            }}\n          >\n            <div>\n              <img\n                src=\"https://refine.ams3.cdn.digitaloceanspaces.com/logo/refine.svg\"\n                alt=\"Refine Logo\"\n                style={{ maxWidth: 200 }}\n              />\n            </div>\n            <Box mt={4}>\n              <Card>\n                <CardContent sx={{ paddingX: \"32px\" }}>\n                  <Typography\n                    component=\"h1\"\n                    variant=\"h5\"\n                    align=\"center\"\n                    sx={{\n                      fontWeight: \"700\",\n                      margin: \"12px 0\",\n                    }}\n                  >\n                    {translate(\"pages.login.title\", \"Sign in your account\")}\n                  </Typography>\n                  <Box\n                    component=\"form\"\n                    onSubmit={handleSubmit((data) => {\n                      login(data);\n                    })}\n                    gap=\"16px\"\n                  >\n                    <TextField\n                      {...register(\"username\", {\n                        required: true,\n                      })}\n                      id=\"username\"\n                      margin=\"normal\"\n                      size=\"small\"\n                      fullWidth\n                      label={translate(\"pages.login.username\", \"Username\")}\n                      name=\"username\"\n                      autoComplete=\"username\"\n                      autoFocus\n                    />\n                    <TextField\n                      {...register(\"password\", {\n                        required: true,\n                      })}\n                      id=\"password\"\n                      size=\"small\"\n                      margin=\"normal\"\n                      fullWidth\n                      name=\"password\"\n                      label={translate(\"pages.login.password\", \"Password\")}\n                      helperText={errors?.password?.message}\n                      type=\"password\"\n                      placeholder=\"●●●●●●●●\"\n                      autoComplete=\"current-password\"\n                    />\n                    <Box\n                      component=\"div\"\n                      sx={{\n                        display: \"flex\",\n                        justifyContent: \"space-between\",\n                        alignItems: \"center\",\n                      }}\n                    >\n                      <FormControlLabel\n                        sx={{\n                          span: {\n                            fontSize: \"12px\",\n                            color: \"text.secondary\",\n                          },\n                        }}\n                        color=\"secondary\"\n                        control={\n                          <Checkbox\n                            size=\"small\"\n                            id=\"remember\"\n                            {...register(\"remember\")}\n                          />\n                        }\n                        label={translate(\"pages.login.remember\", \"Remember me\")}\n                      />\n                      <Link\n                        href=\"#\"\n                        sx={{\n                          fontSize: \"12px\",\n                          textDecoration: \"none\",\n                        }}\n                      >\n                        <Typography\n                          sx={{\n                            fontSize: \"12px\",\n                          }}\n                        >\n                          {translate(\n                            \"pages.login.forgotPassword\",\n                            \"Forgot password?\",\n                          )}\n                        </Typography>\n                      </Link>\n                    </Box>\n                    <Button\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                      sx={{\n                        my: \"8px\",\n                        color: \"white\",\n                      }}\n                      disabled={isLoading}\n                    >\n                      {translate(\"pages.login.signin\", \"Sign in\")}\n                    </Button>\n                    <Box style={{ marginTop: 8 }}>\n                      <Typography variant=\"subtitle2\">\n                        {translate(\n                          \"pages.login.noAccount\",\n                          \"Don’t have an account?\",\n                        )}{\" \"}\n                        <Link\n                          underline=\"none\"\n                          href=\"#\"\n                          style={{\n                            fontWeight: \"bold\",\n                          }}\n                        >\n                          {translate(\"pages.login.signup\", \"Sign up\")}\n                        </Link>\n                      </Typography>\n                    </Box>\n                  </Box>\n                </CardContent>\n              </Card>\n            </Box>\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n};\n","import * as React from \"react\";\nimport type { RefineReadyPageProps } from \"@refinedev/ui-types\";\n\nimport Stack from \"@mui/material/Stack\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport Link from \"@mui/material/Link\";\n\n/**\n * @deprecated `ReadyPage` is deprecated and will be removed in the next major release.\n */\nexport const ReadyPage: React.FC<RefineReadyPageProps> = () => {\n  const renderCode = (text: string) => (\n    <Typography\n      sx={{\n        backgroundColor: (theme) => theme.palette.secondary.contrastText,\n        color: (theme) => theme.palette.secondary.main,\n        display: \"inline-block\",\n        fontFamily: \"monospace\",\n      }}\n    >\n      {text}\n    </Typography>\n  );\n  return (\n    <>\n      <Grid\n        container\n        sx={{\n          backgroundColor: (theme) => theme.palette.secondary.main,\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: \"100vh\",\n          backgroundImage:\n            \"url('https://refine.ams3.cdn.digitaloceanspaces.com/login-background/background.png')\",\n          backgroundSize: \"cover\",\n        }}\n        p={3}\n      >\n        <Grid\n          display=\"flex\"\n          flexDirection=\"column\"\n          flex={1}\n          alignItems=\"center\"\n          color={(theme) => theme.palette.primary.contrastText}\n        >\n          <Typography display=\"flex\" justifyContent=\"center\">\n            <img\n              style={{ marginBottom: \"48px\" }}\n              src=\"https://refine.ams3.cdn.digitaloceanspaces.com/logo/refine.svg\"\n              alt=\"Refine Logo\"\n            />\n          </Typography>\n          <Typography\n            variant=\"h2\"\n            fontWeight=\"bold\"\n            display=\"flex\"\n            justifyContent=\"center\"\n          >\n            Welcome on board\n          </Typography>\n          <Typography variant=\"h5\" mt={2}>\n            Your configuration is completed.\n          </Typography>\n          <Typography variant=\"h6\" mt={2}>\n            Now you can get started by adding your resources to the{\" \"}\n            {renderCode(\"resources\")} property of {renderCode(\"Refine\")}\n          </Typography>\n          <Grid item sm={12} mt={12} display=\"flex\" justifyContent=\"center\">\n            <Stack spacing={2} direction={{ xs: \"column\", sm: \"row\" }}>\n              <Link\n                href=\"https://refine.dev\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                style={{\n                  textDecoration: \"none\",\n                }}\n              >\n                <Button variant=\"outlined\" fullWidth>\n                  Documentation\n                </Button>\n              </Link>\n              <Link\n                href=\"https://refine.dev/examples\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                style={{\n                  textDecoration: \"none\",\n                }}\n              >\n                <Button variant=\"outlined\" fullWidth>\n                  Examples\n                </Button>\n              </Link>\n              <Link\n                href=\"https://discord.gg/refine\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                style={{\n                  textDecoration: \"none\",\n                }}\n              >\n                <Button variant=\"outlined\" fullWidth>\n                  Community\n                </Button>\n              </Link>\n            </Stack>\n          </Grid>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n","import React from \"react\";\nimport { WelcomePage as WelcomePageFromCore } from \"@refinedev/core\";\n\n/**\n * It is a page that welcomes you after the configuration is completed.\n * @deprecated `WelcomePage` is deprecated. Use `WelcomePage` from `@refinedev/core` instead.\n */\nexport const WelcomePage: React.FC = () => {\n  return <WelcomePageFromCore />;\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useGo, useResource, useRouterType } from \"@refinedev/core\";\nimport type { RefineErrorPageProps } from \"@refinedev/ui-types\";\nimport { useNavigation, useTranslate } from \"@refinedev/core\";\n\nimport Stack from \"@mui/material/Stack\";\nimport Button from \"@mui/material/Button\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport Typography from \"@mui/material/Typography\";\nimport Grid from \"@mui/material/Grid\";\n\nimport Info from \"@mui/icons-material/Info\";\n\nexport const ErrorComponent: React.FC<RefineErrorPageProps> = () => {\n  const [errorMessage, setErrorMessage] = useState<string>();\n  const { push } = useNavigation();\n  const go = useGo();\n  const routerType = useRouterType();\n\n  const { resource, action } = useResource();\n\n  const translate = useTranslate();\n\n  useEffect(() => {\n    if (resource && action) {\n      setErrorMessage(\n        translate(\n          \"pages.error.info\",\n          {\n            action,\n            resource: resource?.name,\n          },\n          `You may have forgotten to add the \"${action}\" component to \"${resource?.name}\" resource.`,\n        ),\n      );\n    }\n  }, [action, resource]);\n\n  return (\n    <Grid display=\"flex\" justifyContent=\"center\" alignItems=\"center\" mt={20}>\n      <Grid container direction=\"column\" display=\"flex\" alignItems=\"center\">\n        <Typography variant=\"h1\">404</Typography>\n        <Stack direction=\"row\" spacing=\"2\">\n          <Typography>\n            {translate(\n              \"pages.error.404\",\n              \"Sorry, the page you visited does not exist.\",\n            )}\n          </Typography>\n\n          {errorMessage && (\n            <Tooltip title={errorMessage}>\n              <Info data-testid=\"error-component-tooltip\" />\n            </Tooltip>\n          )}\n        </Stack>\n        <Button\n          onClick={() => {\n            if (routerType === \"legacy\") {\n              push(\"/\");\n            } else {\n              go({ to: \"/\" });\n            }\n          }}\n        >\n          {translate(\"pages.error.backHome\", \"Back Home\")}\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n","import React from \"react\";\nimport type { BoxProps } from \"@mui/material/Box\";\nimport type { CardProps } from \"@mui/material/Card\";\n\nimport type { AuthPageProps, RegisterFormTypes } from \"@refinedev/core\";\n\nimport type { UseFormProps } from \"@refinedev/react-hook-form\";\n\nimport {\n  LoginPage,\n  RegisterPage,\n  ForgotPasswordPage,\n  UpdatePasswordPage,\n} from \"./components\";\n\nexport interface FormPropsType extends UseFormProps {\n  onSubmit?: (values: RegisterFormTypes) => void;\n}\n\nexport type AuthProps = AuthPageProps<BoxProps, CardProps, FormPropsType>;\n\n/**\n * **refine** has a default auth page form served on the `/login` route when the `authProvider` configuration is provided.\n * @see {@link https://refine.dev/docs/api-reference/mui/components/mui-auth-page/} for more details.\n */\nexport const AuthPage: React.FC<AuthProps> = (props) => {\n  const { type } = props;\n  const renderView = () => {\n    switch (type) {\n      case \"register\":\n        return <RegisterPage {...props} />;\n      case \"forgotPassword\":\n        return <ForgotPasswordPage {...props} />;\n      case \"updatePassword\":\n        return <UpdatePasswordPage {...props} />;\n      default:\n        return <LoginPage {...props} />;\n    }\n  };\n\n  return <>{renderView()}</>;\n};\n","import * as React from \"react\";\nimport {\n  type LoginPageProps,\n  type LoginFormTypes,\n  useActiveAuthProvider,\n} from \"@refinedev/core\";\nimport { useForm } from \"@refinedev/react-hook-form\";\nimport { FormProvider } from \"react-hook-form\";\n\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Divider from \"@mui/material/Divider\";\nimport MuiLink from \"@mui/material/Link\";\nimport Stack from \"@mui/material/Stack\";\n\nimport type { BoxProps } from \"@mui/material/Box\";\nimport type { CardContentProps } from \"@mui/material/CardContent\";\n\nimport {\n  type BaseRecord,\n  type HttpError,\n  useLogin,\n  useTranslate,\n  useRouterContext,\n  useRouterType,\n  useLink,\n} from \"@refinedev/core\";\nimport { layoutStyles, titleStyles } from \"../styles\";\n\nimport type { FormPropsType } from \"../../index\";\nimport { ThemedTitleV2 } from \"@components\";\n\ntype LoginProps = LoginPageProps<BoxProps, CardContentProps, FormPropsType>;\n\n/**\n * login will be used as the default type of the <AuthPage> component. The login page will be used to log in to the system.\n * @see {@link https://refine.dev/docs/api-reference/mui/components/mui-auth-page/#login} for more details.\n */\nexport const LoginPage: React.FC<LoginProps> = ({\n  providers,\n  registerLink,\n  forgotPasswordLink,\n  rememberMe,\n  contentProps,\n  wrapperProps,\n  renderContent,\n  formProps,\n  title,\n  hideForm,\n}) => {\n  const { onSubmit, ...useFormProps } = formProps || {};\n  const methods = useForm<BaseRecord, HttpError, LoginFormTypes>({\n    ...useFormProps,\n  });\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = methods;\n\n  const authProvider = useActiveAuthProvider();\n  const { mutate: login, isLoading } = useLogin<LoginFormTypes>({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n  const translate = useTranslate();\n  const routerType = useRouterType();\n  const Link = useLink();\n  const { Link: LegacyLink } = useRouterContext();\n\n  const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n  const PageTitle =\n    title === false ? null : (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          marginBottom: \"32px\",\n          fontSize: \"20px\",\n        }}\n      >\n        {title ?? (\n          <ThemedTitleV2\n            collapsed={false}\n            wrapperStyles={{\n              gap: \"8px\",\n            }}\n          />\n        )}\n      </div>\n    );\n\n  const renderProviders = () => {\n    if (providers && providers.length > 0) {\n      return (\n        <>\n          <Stack spacing={1}>\n            {providers.map((provider: any) => {\n              return (\n                <Button\n                  key={provider.name}\n                  variant=\"outlined\"\n                  fullWidth\n                  sx={{\n                    color: \"primary.light\",\n                    borderColor: \"primary.light\",\n                    textTransform: \"none\",\n                  }}\n                  onClick={() => login({ providerName: provider.name })}\n                  startIcon={provider.icon}\n                >\n                  {provider.label}\n                </Button>\n              );\n            })}\n          </Stack>\n          {!hideForm && (\n            <Divider\n              sx={{\n                fontSize: \"12px\",\n                marginY: \"16px\",\n              }}\n            >\n              {translate(\"pages.login.divider\", \"or\")}\n            </Divider>\n          )}\n        </>\n      );\n    }\n    return null;\n  };\n\n  const Content = (\n    <Card {...(contentProps ?? {})}>\n      <CardContent sx={{ p: \"32px\", \"&:last-child\": { pb: \"32px\" } }}>\n        <Typography\n          component=\"h1\"\n          variant=\"h5\"\n          align=\"center\"\n          style={titleStyles}\n          color=\"primary\"\n          fontWeight={700}\n        >\n          {translate(\"pages.login.title\", \"Sign in to your account\")}\n        </Typography>\n        {renderProviders()}\n        {!hideForm && (\n          <Box\n            component=\"form\"\n            onSubmit={handleSubmit((data) => {\n              if (onSubmit) {\n                return onSubmit(data);\n              }\n\n              return login(data);\n            })}\n          >\n            <TextField\n              {...register(\"email\", {\n                required: translate(\n                  \"pages.login.errors.requiredEmail\",\n                  \"Email is required\",\n                ),\n              })}\n              id=\"email\"\n              margin=\"normal\"\n              fullWidth\n              label={translate(\"pages.login.fields.email\", \"Email\")}\n              error={!!errors.email}\n              name=\"email\"\n              type=\"email\"\n              autoComplete=\"email\"\n              sx={{\n                mt: 0,\n              }}\n            />\n            <TextField\n              {...register(\"password\", {\n                required: translate(\n                  \"pages.login.errors.requiredPassword\",\n                  \"Password is required\",\n                ),\n              })}\n              id=\"password\"\n              margin=\"normal\"\n              fullWidth\n              name=\"password\"\n              label={translate(\"pages.login.fields.password\", \"Password\")}\n              helperText={errors?.password?.message}\n              error={!!errors.password}\n              type=\"password\"\n              placeholder=\"●●●●●●●●\"\n              autoComplete=\"current-password\"\n              sx={{\n                mb: 0,\n              }}\n            />\n            <Box\n              component=\"div\"\n              sx={{\n                mt: \"24px\",\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n              }}\n            >\n              {rememberMe ?? (\n                <FormControlLabel\n                  sx={{\n                    span: {\n                      fontSize: \"14px\",\n                      color: \"text.secondary\",\n                    },\n                  }}\n                  color=\"secondary\"\n                  control={\n                    <Checkbox\n                      size=\"small\"\n                      id=\"remember\"\n                      {...register(\"remember\")}\n                    />\n                  }\n                  label={translate(\n                    \"pages.login.buttons.rememberMe\",\n                    \"Remember me\",\n                  )}\n                />\n              )}\n              {forgotPasswordLink ?? (\n                <MuiLink\n                  variant=\"body2\"\n                  color=\"primary\"\n                  fontSize=\"12px\"\n                  component={ActiveLink}\n                  underline=\"none\"\n                  to=\"/forgot-password\"\n                >\n                  {translate(\n                    \"pages.login.buttons.forgotPassword\",\n                    \"Forgot password?\",\n                  )}\n                </MuiLink>\n              )}\n            </Box>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              disabled={isLoading}\n              sx={{ mt: \"24px\" }}\n            >\n              {translate(\"pages.login.signin\", \"Sign in\")}\n            </Button>\n          </Box>\n        )}\n        {registerLink ?? (\n          <Box\n            sx={{\n              mt: \"24px\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <Typography\n              textAlign=\"center\"\n              variant=\"body2\"\n              component=\"span\"\n              fontSize=\"12px\"\n            >\n              {translate(\n                \"pages.login.buttons.noAccount\",\n                \"Don’t have an account?\",\n              )}\n            </Typography>\n            <MuiLink\n              ml=\"4px\"\n              fontSize=\"12px\"\n              variant=\"body2\"\n              color=\"primary\"\n              component={ActiveLink}\n              underline=\"none\"\n              to=\"/register\"\n              fontWeight=\"bold\"\n            >\n              {translate(\"pages.login.signup\", \"Sign up\")}\n            </MuiLink>\n          </Box>\n        )}\n      </CardContent>\n    </Card>\n  );\n\n  return (\n    <FormProvider {...methods}>\n      <Box component=\"div\" style={layoutStyles} {...(wrapperProps ?? {})}>\n        <Container\n          component=\"main\"\n          sx={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: hideForm ? \"flex-start\" : \"center\",\n            alignItems: \"center\",\n            minHeight: \"100dvh\",\n            padding: \"16px\",\n            width: \"100%\",\n            maxWidth: \"400px\",\n          }}\n        >\n          <Box\n            sx={{\n              width: \"100%\",\n              maxWidth: \"400px\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              paddingTop: hideForm ? \"15dvh\" : 0,\n            }}\n          >\n            {renderContent ? (\n              renderContent(Content, PageTitle)\n            ) : (\n              <>\n                {PageTitle}\n                {Content}\n              </>\n            )}\n          </Box>\n        </Container>\n      </Box>\n    </FormProvider>\n  );\n};\n","import type { CSSProperties } from \"react\";\n\nexport const layoutStyles: CSSProperties = {};\n\nexport const titleStyles: CSSProperties = {\n  textAlign: \"center\",\n  fontSize: \"24px\",\n  marginBottom: \"24px\",\n  overflowWrap: \"break-word\",\n  hyphens: \"manual\",\n  textOverflow: \"unset\",\n  whiteSpace: \"pre-wrap\",\n};\n","import * as React from \"react\";\nimport {\n  type RegisterFormTypes,\n  type RegisterPageProps,\n  useActiveAuthProvider,\n} from \"@refinedev/core\";\nimport { useForm } from \"@refinedev/react-hook-form\";\n\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Divider from \"@mui/material/Divider\";\nimport Stack from \"@mui/material/Stack\";\nimport MuiLink from \"@mui/material/Link\";\n\nimport type { BoxProps } from \"@mui/material/Box\";\nimport type { CardContentProps } from \"@mui/material/CardContent\";\n\nimport {\n  type BaseRecord,\n  type HttpError,\n  useTranslate,\n  useRouterContext,\n  useRouterType,\n  useLink,\n  useRegister,\n} from \"@refinedev/core\";\n\nimport { layoutStyles, titleStyles } from \"../styles\";\nimport type { FormPropsType } from \"../../index\";\nimport { ThemedTitleV2 } from \"@components\";\n\ntype RegisterProps = RegisterPageProps<\n  BoxProps,\n  CardContentProps,\n  FormPropsType\n>;\n\n/**\n * The register page will be used to register new users. You can use the following props for the <AuthPage> component when the type is \"register\".\n * @see {@link https://refine.dev/docs/api-reference/mui/components/mui-auth-page/#register} for more details.\n */\nexport const RegisterPage: React.FC<RegisterProps> = ({\n  loginLink,\n  wrapperProps,\n  contentProps,\n  renderContent,\n  providers,\n  formProps,\n  title,\n  hideForm,\n}) => {\n  const { onSubmit, ...useFormProps } = formProps || {};\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<BaseRecord, HttpError, RegisterFormTypes>({\n    ...useFormProps,\n  });\n\n  const authProvider = useActiveAuthProvider();\n  const { mutate: registerMutate, isLoading } = useRegister<RegisterFormTypes>({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n  const translate = useTranslate();\n  const routerType = useRouterType();\n  const Link = useLink();\n  const { Link: LegacyLink } = useRouterContext();\n\n  const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n  const PageTitle =\n    title === false ? null : (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          marginBottom: \"32px\",\n          fontSize: \"20px\",\n        }}\n      >\n        {title ?? (\n          <ThemedTitleV2\n            collapsed={false}\n            wrapperStyles={{\n              gap: \"8px\",\n            }}\n          />\n        )}\n      </div>\n    );\n\n  const renderProviders = () => {\n    if (providers && providers.length > 0) {\n      return (\n        <>\n          <Stack spacing={1}>\n            {providers.map((provider: any) => {\n              return (\n                <Button\n                  key={provider.name}\n                  color=\"secondary\"\n                  fullWidth\n                  variant=\"outlined\"\n                  sx={{\n                    color: \"primary.light\",\n                    borderColor: \"primary.light\",\n                    textTransform: \"none\",\n                  }}\n                  onClick={() =>\n                    registerMutate({\n                      providerName: provider.name,\n                    })\n                  }\n                  startIcon={provider.icon}\n                >\n                  {provider.label}\n                </Button>\n              );\n            })}\n          </Stack>\n          {!hideForm && (\n            <Divider\n              sx={{\n                fontSize: \"12px\",\n                marginY: \"16px\",\n              }}\n            >\n              {translate(\n                \"pages.register.divider\",\n                translate(\"pages.login.divider\", \"or\"),\n              )}\n            </Divider>\n          )}\n        </>\n      );\n    }\n    return null;\n  };\n\n  const Content = (\n    <Card {...(contentProps ?? {})}>\n      <CardContent sx={{ p: \"32px\", \"&:last-child\": { pb: \"32px\" } }}>\n        <Typography\n          component=\"h1\"\n          variant=\"h5\"\n          align=\"center\"\n          style={titleStyles}\n          color=\"primary\"\n          fontWeight={700}\n        >\n          {translate(\"pages.register.title\", \"Sign up for your account\")}\n        </Typography>\n        {renderProviders()}\n        {!hideForm && (\n          <Box\n            component=\"form\"\n            onSubmit={handleSubmit((data) => {\n              if (onSubmit) {\n                return onSubmit(data);\n              }\n\n              return registerMutate(data);\n            })}\n          >\n            <TextField\n              {...register(\"email\", {\n                required: translate(\n                  \"pages.register.errors.requiredEmail\",\n                  \"Email is required\",\n                ),\n                pattern: {\n                  value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                  message: translate(\n                    \"pages.register.errors.validEmail\",\n                    \"Invalid email address\",\n                  ),\n                },\n              })}\n              id=\"email\"\n              margin=\"normal\"\n              fullWidth\n              label={translate(\"pages.register.email\", \"Email\")}\n              error={!!errors.email}\n              helperText={errors[\"email\"] ? errors[\"email\"].message : \"\"}\n              name=\"email\"\n              autoComplete=\"email\"\n              sx={{\n                mt: 0,\n              }}\n            />\n            <TextField\n              {...register(\"password\", {\n                required: translate(\n                  \"pages.register.errors.requiredPassword\",\n                  \"Password is required\",\n                ),\n              })}\n              id=\"password\"\n              margin=\"normal\"\n              fullWidth\n              name=\"password\"\n              label={translate(\"pages.register.fields.password\", \"Password\")}\n              helperText={errors[\"password\"] ? errors[\"password\"].message : \"\"}\n              error={!!errors.password}\n              type=\"password\"\n              placeholder=\"●●●●●●●●\"\n              autoComplete=\"current-password\"\n              sx={{\n                mb: 0,\n              }}\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              disabled={isLoading}\n              sx={{\n                mt: \"24px\",\n              }}\n            >\n              {translate(\"pages.register.signup\", \"Sign up\")}\n            </Button>\n          </Box>\n        )}\n        {loginLink ?? (\n          <Box\n            display=\"flex\"\n            justifyContent=\"flex-end\"\n            alignItems=\"center\"\n            sx={{\n              mt: \"24px\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <Typography variant=\"body2\" component=\"span\" fontSize=\"12px\">\n              {translate(\n                \"pages.register.buttons.haveAccount\",\n                translate(\n                  \"pages.login.buttons.haveAccount\",\n                  \"Have an account?\",\n                ),\n              )}\n            </Typography>\n            <MuiLink\n              ml=\"4px\"\n              variant=\"body2\"\n              color=\"primary\"\n              component={ActiveLink}\n              underline=\"none\"\n              to=\"/login\"\n              fontSize=\"12px\"\n              fontWeight=\"bold\"\n            >\n              {translate(\n                \"pages.register.signin\",\n                translate(\"pages.login.signin\", \"Sign in\"),\n              )}\n            </MuiLink>\n          </Box>\n        )}\n      </CardContent>\n    </Card>\n  );\n\n  return (\n    <Box component=\"div\" style={layoutStyles} {...(wrapperProps ?? {})}>\n      <Container\n        component=\"main\"\n        sx={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: hideForm ? \"flex-start\" : \"center\",\n          alignItems: \"center\",\n          minHeight: \"100dvh\",\n          padding: \"16px\",\n          width: \"100%\",\n          maxWidth: \"400px\",\n        }}\n      >\n        <Box\n          sx={{\n            width: \"100%\",\n            maxWidth: \"400px\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            paddingTop: hideForm ? \"15dvh\" : 0,\n          }}\n        >\n          {renderContent ? (\n            renderContent(Content, PageTitle)\n          ) : (\n            <>\n              {PageTitle}\n              {Content}\n            </>\n          )}\n        </Box>\n      </Container>\n    </Box>\n  );\n};\n","import Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport MuiLink from \"@mui/material/Link\";\n\nimport type { BoxProps } from \"@mui/material/Box\";\nimport type { CardContentProps } from \"@mui/material/CardContent\";\n\nimport type {\n  ForgotPasswordFormTypes,\n  ForgotPasswordPageProps,\n} from \"@refinedev/core\";\nimport { useForm } from \"@refinedev/react-hook-form\";\nimport * as React from \"react\";\n\nimport {\n  type BaseRecord,\n  type HttpError,\n  useForgotPassword,\n  useLink,\n  useRouterContext,\n  useRouterType,\n  useTranslate,\n} from \"@refinedev/core\";\n\nimport { ThemedTitleV2 } from \"@components\";\nimport type { FormPropsType } from \"../../index\";\nimport { layoutStyles, titleStyles } from \"../styles\";\n\ntype ForgotPasswordProps = ForgotPasswordPageProps<\n  BoxProps,\n  CardContentProps,\n  FormPropsType\n>;\n\n/**\n * The forgotPassword type is a page that allows users to reset their passwords. You can use this page to reset your password.\n * @see {@link https://refine.dev/docs/api-reference/mui/components/mui-auth-page/#forgot-password} for more details.\n */\nexport const ForgotPasswordPage: React.FC<ForgotPasswordProps> = ({\n  loginLink,\n  wrapperProps,\n  contentProps,\n  renderContent,\n  formProps,\n  title,\n}) => {\n  const { onSubmit, ...useFormProps } = formProps || {};\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<BaseRecord, HttpError, ForgotPasswordFormTypes>({\n    ...useFormProps,\n  });\n\n  const { mutate, isLoading } = useForgotPassword<ForgotPasswordFormTypes>();\n  const translate = useTranslate();\n  const routerType = useRouterType();\n  const Link = useLink();\n  const { Link: LegacyLink } = useRouterContext();\n\n  const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n  const PageTitle =\n    title === false ? null : (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          marginBottom: \"32px\",\n          fontSize: \"20px\",\n        }}\n      >\n        {title ?? (\n          <ThemedTitleV2\n            collapsed={false}\n            wrapperStyles={{\n              gap: \"8px\",\n            }}\n          />\n        )}\n      </div>\n    );\n\n  const Content = (\n    <Card {...(contentProps ?? {})}>\n      <CardContent sx={{ p: \"32px\", \"&:last-child\": { pb: \"32px\" } }}>\n        <Typography\n          component=\"h1\"\n          variant=\"h5\"\n          align=\"center\"\n          style={titleStyles}\n          color=\"primary\"\n          fontWeight={700}\n        >\n          {translate(\"pages.forgotPassword.title\", \"Forgot your password?\")}\n        </Typography>\n        <Box\n          component=\"form\"\n          onSubmit={handleSubmit((data) => {\n            if (onSubmit) {\n              return onSubmit(data);\n            }\n\n            return mutate(data);\n          })}\n        >\n          <TextField\n            {...register(\"email\", {\n              required: translate(\n                \"pages.forgotPassword.errors.requiredEmail\",\n                \"Email is required\",\n              ),\n              pattern: {\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                message: translate(\n                  \"pages.register.errors.validEmail\",\n                  \"Invalid email address\",\n                ),\n              },\n            })}\n            id=\"email\"\n            margin=\"normal\"\n            fullWidth\n            label={translate(\"pages.forgotPassword.fields.email\", \"Email\")}\n            name=\"email\"\n            type=\"email\"\n            error={!!errors.email}\n            autoComplete=\"email\"\n            sx={{\n              m: 0,\n            }}\n          />\n          {loginLink ?? (\n            <Box textAlign=\"right\" sx={{ mt: \"24px\" }}>\n              <Typography variant=\"body2\" component=\"span\" fontSize=\"12px\">\n                {translate(\n                  \"pages.forgotPassword.buttons.haveAccount\",\n                  translate(\n                    \"pages.register.buttons.haveAccount\",\n                    \"Have an account? \",\n                  ),\n                )}\n              </Typography>{\" \"}\n              <MuiLink\n                variant=\"body2\"\n                component={ActiveLink}\n                underline=\"none\"\n                to=\"/login\"\n                fontWeight=\"bold\"\n                fontSize=\"12px\"\n                color=\"primary.light\"\n              >\n                {translate(\n                  \"pages.forgotPassword.signin\",\n                  translate(\"pages.login.signin\", \"Sign in\"),\n                )}\n              </MuiLink>\n            </Box>\n          )}\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: \"24px\" }}\n            disabled={isLoading}\n          >\n            {translate(\n              \"pages.forgotPassword.buttons.submit\",\n              \"Send reset instructions\",\n            )}\n          </Button>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n\n  return (\n    <>\n      <Box component=\"div\" style={layoutStyles} {...(wrapperProps ?? {})}>\n        <Container\n          component=\"main\"\n          maxWidth=\"xs\"\n          sx={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            minHeight: \"100dvh\",\n            padding: \"16px\",\n            width: \"100%\",\n            maxWidth: \"400px\",\n          }}\n        >\n          {renderContent ? (\n            renderContent(Content, PageTitle)\n          ) : (\n            <>\n              {PageTitle}\n              {Content}\n            </>\n          )}\n        </Container>\n      </Box>\n    </>\n  );\n};\n","import * as React from \"react\";\nimport {\n  type UpdatePasswordFormTypes,\n  type UpdatePasswordPageProps,\n  useActiveAuthProvider,\n} from \"@refinedev/core\";\n\nimport { useForm } from \"@refinedev/react-hook-form\";\n\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\n\nimport type { BoxProps } from \"@mui/material/Box\";\nimport type { CardContentProps } from \"@mui/material/CardContent\";\n\nimport {\n  type BaseRecord,\n  type HttpError,\n  useTranslate,\n  useUpdatePassword,\n} from \"@refinedev/core\";\n\nimport { layoutStyles, titleStyles } from \"../styles\";\nimport type { FormPropsType } from \"../../index\";\nimport { ThemedTitleV2 } from \"@components\";\n\ntype UpdatePasswordProps = UpdatePasswordPageProps<\n  BoxProps,\n  CardContentProps,\n  FormPropsType\n>;\n\n/**\n * The updatePassword type is the page used to update the password of the user.\n * @see {@link https://refine.dev/docs/api-reference/mui/components/mui-auth-page/#update-password} for more details.\n */\nexport const UpdatePasswordPage: React.FC<UpdatePasswordProps> = ({\n  wrapperProps,\n  contentProps,\n  renderContent,\n  formProps,\n  title = undefined,\n}) => {\n  const { onSubmit, ...useFormProps } = formProps || {};\n  const {\n    register,\n    watch,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<BaseRecord, HttpError, UpdatePasswordFormTypes>({\n    ...useFormProps,\n  });\n\n  const authProvider = useActiveAuthProvider();\n  const { mutate: update, isLoading } =\n    useUpdatePassword<UpdatePasswordFormTypes>({\n      v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n  const translate = useTranslate();\n\n  const PageTitle =\n    title === false ? null : (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          marginBottom: \"32px\",\n          fontSize: \"20px\",\n        }}\n      >\n        {title ?? (\n          <ThemedTitleV2\n            collapsed={false}\n            wrapperStyles={{\n              gap: \"8px\",\n            }}\n          />\n        )}\n      </div>\n    );\n\n  const Content = (\n    <Card {...(contentProps ?? {})}>\n      <CardContent sx={{ p: \"32px\", \"&:last-child\": { pb: \"32px\" } }}>\n        <Typography\n          component=\"h1\"\n          variant=\"h5\"\n          align=\"center\"\n          style={titleStyles}\n          color=\"primary\"\n          fontWeight={700}\n        >\n          {translate(\"pages.updatePassword.title\", \"Set New Password\")}\n        </Typography>\n        <Box\n          component=\"form\"\n          onSubmit={handleSubmit((data) => {\n            if (onSubmit) {\n              return onSubmit(data);\n            }\n\n            return update(data);\n          })}\n        >\n          <TextField\n            {...register(\"password\", {\n              required: translate(\n                \"pages.updatePassword.errors.requiredPassword\",\n                \"Password required\",\n              ),\n            })}\n            id=\"password\"\n            margin=\"normal\"\n            fullWidth\n            name=\"password\"\n            label={translate(\n              \"pages.updatePassword.fields.password\",\n              \"New Password\",\n            )}\n            helperText={errors?.password?.message}\n            error={!!errors?.password}\n            type=\"password\"\n            placeholder=\"●●●●●●●●\"\n            autoComplete=\"current-password\"\n            sx={{\n              m: 0,\n            }}\n          />\n\n          <TextField\n            {...register(\"confirmPassword\", {\n              required: translate(\n                \"pages.updatePassword.errors.requiredConfirmPassword\",\n                \"Confirm Password is required\",\n              ),\n              validate: (value?: string) => {\n                if (watch(\"password\") !== value) {\n                  return translate(\n                    \"pages.updatePassword.errors.confirmPasswordNotMatch\",\n                    \"Passwords do not match\",\n                  );\n                }\n                return true;\n              },\n            })}\n            id=\"confirmPassword\"\n            margin=\"normal\"\n            fullWidth\n            name=\"confirmPassword\"\n            label={translate(\n              \"pages.updatePassword.fields.confirmPassword\",\n              \"Confirm New Password\",\n            )}\n            helperText={errors?.confirmPassword?.message}\n            error={!!errors?.confirmPassword}\n            type=\"password\"\n            placeholder=\"●●●●●●●●\"\n            autoComplete=\"current-confirm-password\"\n            sx={{\n              mb: 0,\n            }}\n          />\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{\n              mt: \"24px\",\n            }}\n            disabled={isLoading}\n          >\n            {translate(\"pages.updatePassword.buttons.submit\", \"Update\")}\n          </Button>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n\n  return (\n    <>\n      <Box component=\"div\" style={layoutStyles} {...(wrapperProps ?? {})}>\n        <Container\n          component=\"main\"\n          maxWidth=\"xs\"\n          sx={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            minHeight: \"100dvh\",\n            padding: \"16px\",\n            width: \"100%\",\n            maxWidth: \"400px\",\n          }}\n        >\n          {renderContent ? (\n            renderContent(Content, PageTitle)\n          ) : (\n            <>\n              {PageTitle}\n              {Content}\n            </>\n          )}\n        </Container>\n      </Box>\n    </>\n  );\n};\n","import React from \"react\";\n\nimport {\n  useNavigation,\n  useTranslate,\n  useUserFriendlyName,\n  useRefineContext,\n  useRouterType,\n  useBack,\n  useResource,\n} from \"@refinedev/core\";\n\nimport Card from \"@mui/material/Card\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\n\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\n\nimport { Breadcrumb, SaveButton, type SaveButtonProps } from \"@components\";\nimport type { CreateProps } from \"../types\";\nimport { RefinePageHeaderClassNames } from \"@refinedev/ui-types\";\n\n/**\n * `<Create>` provides us a layout to display the page.\n * It does not contain any logic but adds extra functionalities like action buttons and giving titles to the page.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/basic-views/create} for more details.\n */\nexport const Create: React.FC<CreateProps> = ({\n  title,\n  children,\n  saveButtonProps: saveButtonPropsFromProps,\n  resource: resourceFromProps,\n  isLoading = false,\n  breadcrumb: breadcrumbFromProps,\n  wrapperProps,\n  headerProps,\n  contentProps,\n  headerButtonProps,\n  headerButtons,\n  footerButtonProps,\n  footerButtons,\n  goBack: goBackFromProps,\n}) => {\n  const translate = useTranslate();\n  const {\n    options: { breadcrumb: globalBreadcrumb } = {},\n  } = useRefineContext();\n\n  const routerType = useRouterType();\n  const back = useBack();\n  const { goBack } = useNavigation();\n  const getUserFriendlyName = useUserFriendlyName();\n\n  const { resource, action, identifier } = useResource(resourceFromProps);\n\n  const breadcrumb =\n    typeof breadcrumbFromProps === \"undefined\"\n      ? globalBreadcrumb\n      : breadcrumbFromProps;\n\n  const breadcrumbComponent =\n    typeof breadcrumb !== \"undefined\" ? (\n      <>{breadcrumb}</> ?? undefined\n    ) : (\n      <Breadcrumb />\n    );\n\n  const saveButtonProps: SaveButtonProps = {\n    ...(isLoading ? { disabled: true } : {}),\n    ...saveButtonPropsFromProps,\n  };\n\n  const defaultFooterButtons = <SaveButton {...saveButtonProps} />;\n\n  return (\n    <Card {...(wrapperProps ?? {})}>\n      {breadcrumbComponent}\n      <CardHeader\n        sx={{\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          \".MuiCardHeader-action\": {\n            margin: 0,\n            alignSelf: \"center\",\n          },\n        }}\n        title={\n          title ?? (\n            <Typography\n              variant=\"h5\"\n              className={RefinePageHeaderClassNames.Title}\n            >\n              {translate(\n                `${identifier}.titles.create`,\n                `Create ${getUserFriendlyName(\n                  resource?.meta?.label ??\n                    resource?.options?.label ??\n                    resource?.label ??\n                    identifier,\n                  \"singular\",\n                )}`,\n              )}\n            </Typography>\n          )\n        }\n        avatar={\n          typeof goBackFromProps !== \"undefined\" ? (\n            goBackFromProps\n          ) : (\n            <IconButton\n              onClick={\n                action !== \"list\" || typeof action !== \"undefined\"\n                  ? routerType === \"legacy\"\n                    ? goBack\n                    : back\n                  : undefined\n              }\n            >\n              <ArrowBackIcon />\n            </IconButton>\n          )\n        }\n        action={\n          headerButtons ? (\n            <Box display=\"flex\" gap=\"16px\" {...(headerButtonProps ?? {})}>\n              {headerButtons\n                ? typeof headerButtons === \"function\"\n                  ? headerButtons({\n                      defaultButtons: null,\n                    })\n                  : headerButtons\n                : null}\n            </Box>\n          ) : undefined\n        }\n        {...(headerProps ?? {})}\n      />\n      <CardContent {...(contentProps ?? {})}>{children}</CardContent>\n      <CardActions\n        sx={{\n          display: \"flex\",\n          justifyContent: \"flex-end\",\n          gap: \"16px\",\n          padding: \"16px\",\n        }}\n        {...(footerButtonProps ?? {})}\n      >\n        {footerButtons\n          ? typeof footerButtons === \"function\"\n            ? footerButtons({\n                defaultButtons: defaultFooterButtons,\n                saveButtonProps,\n              })\n            : footerButtons\n          : defaultFooterButtons}\n      </CardActions>\n    </Card>\n  );\n};\n","import React from \"react\";\n\nimport {\n  useMutationMode,\n  useNavigation,\n  useTranslate,\n  useUserFriendlyName,\n  useRefineContext,\n  useToPath,\n  useResource,\n  useRouterType,\n  useBack,\n  useGo,\n} from \"@refinedev/core\";\n\nimport Card from \"@mui/material/Card\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardActions from \"@mui/material/CardActions\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\n\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\n\nimport {\n  DeleteButton,\n  RefreshButton,\n  ListButton,\n  SaveButton,\n  Breadcrumb,\n  type ListButtonProps,\n  type RefreshButtonProps,\n  type DeleteButtonProps,\n  type SaveButtonProps,\n  AutoSaveIndicator,\n} from \"@components\";\nimport type { EditProps } from \"../types\";\nimport { RefinePageHeaderClassNames } from \"@refinedev/ui-types\";\n\n/**\n * `<Edit>` provides us a layout for displaying the page.\n * It does not contain any logic but adds extra functionalities like a refresh button.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/basic-views/edit} for more details.\n */\nexport const Edit: React.FC<EditProps> = ({\n  title,\n  saveButtonProps: saveButtonPropsFromProps,\n  mutationMode: mutationModeProp,\n  recordItemId,\n  children,\n  deleteButtonProps: deleteButtonPropsFromProps,\n  canDelete,\n  resource: resourceFromProps,\n  isLoading = false,\n  breadcrumb: breadcrumbFromProps,\n  dataProviderName,\n  wrapperProps,\n  headerProps,\n  contentProps,\n  headerButtonProps,\n  headerButtons,\n  footerButtonProps,\n  footerButtons,\n  goBack: goBackFromProps,\n  autoSaveProps,\n}) => {\n  const translate = useTranslate();\n  const {\n    options: { breadcrumb: globalBreadcrumb } = {},\n  } = useRefineContext();\n  const { mutationMode: mutationModeContext } = useMutationMode();\n  const mutationMode = mutationModeProp ?? mutationModeContext;\n\n  const routerType = useRouterType();\n  const back = useBack();\n  const go = useGo();\n  const { goBack, list: legacyGoList } = useNavigation();\n  const getUserFriendlyName = useUserFriendlyName();\n\n  const {\n    resource,\n    action,\n    id: idFromParams,\n    identifier,\n  } = useResource(resourceFromProps);\n\n  const goListPath = useToPath({\n    resource,\n    action: \"list\",\n  });\n\n  const id = recordItemId ?? idFromParams;\n\n  const breadcrumb =\n    typeof breadcrumbFromProps === \"undefined\"\n      ? globalBreadcrumb\n      : breadcrumbFromProps;\n\n  const hasList = resource?.list && !recordItemId;\n  const isDeleteButtonVisible =\n    canDelete ??\n    ((resource?.meta?.canDelete ?? resource?.canDelete) ||\n      deleteButtonPropsFromProps);\n\n  const breadcrumbComponent =\n    typeof breadcrumb !== \"undefined\" ? (\n      <>{breadcrumb}</> ?? undefined\n    ) : (\n      <Breadcrumb />\n    );\n\n  const listButtonProps: ListButtonProps | undefined = hasList\n    ? {\n        ...(isLoading ? { disabled: true } : {}),\n        resource: routerType === \"legacy\" ? resource?.route : identifier,\n      }\n    : undefined;\n\n  const refreshButtonProps: RefreshButtonProps = {\n    ...(isLoading ? { disabled: true } : {}),\n    resource: routerType === \"legacy\" ? resource?.route : identifier,\n    recordItemId: id,\n    dataProviderName,\n  };\n\n  const defaultHeaderButtons = (\n    <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\n      {autoSaveProps && <AutoSaveIndicator {...autoSaveProps} />}\n      {hasList && <ListButton {...listButtonProps} />}\n      <RefreshButton {...refreshButtonProps} />\n    </Box>\n  );\n\n  const deleteButtonProps: DeleteButtonProps | undefined = isDeleteButtonVisible\n    ? ({\n        ...(isLoading ? { disabled: true } : {}),\n        resource: routerType === \"legacy\" ? resource?.route : identifier,\n        mutationMode,\n        variant: \"outlined\",\n        onSuccess: () => {\n          if (routerType === \"legacy\") {\n            legacyGoList(resource?.route ?? resource?.name ?? \"\");\n          } else {\n            go({ to: goListPath });\n          }\n        },\n        recordItemId: id,\n        dataProviderName,\n        ...deleteButtonPropsFromProps,\n      } as const)\n    : undefined;\n\n  const saveButtonProps: SaveButtonProps = {\n    ...(isLoading ? { disabled: true } : {}),\n    ...saveButtonPropsFromProps,\n  };\n\n  const defaultFooterButtons = (\n    <>\n      {isDeleteButtonVisible && <DeleteButton {...deleteButtonProps} />}\n      <SaveButton {...saveButtonProps} />\n    </>\n  );\n\n  return (\n    <Card {...(wrapperProps ?? {})}>\n      {breadcrumbComponent}\n      <CardHeader\n        sx={{\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          \".MuiCardHeader-action\": {\n            margin: 0,\n            alignSelf: \"center\",\n          },\n        }}\n        title={\n          title ?? (\n            <Typography\n              variant=\"h5\"\n              className={RefinePageHeaderClassNames.Title}\n            >\n              {translate(\n                `${identifier}.titles.edit`,\n                `Edit ${getUserFriendlyName(\n                  resource?.meta?.label ??\n                    resource?.options?.label ??\n                    resource?.label ??\n                    identifier,\n                  \"singular\",\n                )}`,\n              )}\n            </Typography>\n          )\n        }\n        avatar={\n          typeof goBackFromProps !== \"undefined\" ? (\n            goBackFromProps\n          ) : (\n            <IconButton\n              onClick={\n                action !== \"list\" && typeof action !== \"undefined\"\n                  ? routerType === \"legacy\"\n                    ? goBack\n                    : back\n                  : undefined\n              }\n            >\n              <ArrowBackIcon />\n            </IconButton>\n          )\n        }\n        action={\n          <Box display=\"flex\" gap=\"16px\" {...(headerButtonProps ?? {})}>\n            {headerButtons\n              ? typeof headerButtons === \"function\"\n                ? headerButtons({\n                    defaultButtons: defaultHeaderButtons,\n                    listButtonProps,\n                    refreshButtonProps,\n                  })\n                : headerButtons\n              : defaultHeaderButtons}\n          </Box>\n        }\n        {...(headerProps ?? {})}\n      />\n      <CardContent {...(contentProps ?? {})}>{children}</CardContent>\n      <CardActions\n        sx={{\n          display: \"flex\",\n          justifyContent: \"flex-end\",\n          gap: \"16px\",\n          padding: \"16px\",\n        }}\n        {...(footerButtonProps ?? {})}\n      >\n        {footerButtons\n          ? typeof footerButtons === \"function\"\n            ? footerButtons({\n                defaultButtons: defaultFooterButtons,\n                deleteButtonProps,\n                saveButtonProps,\n              })\n            : footerButtons\n          : defaultFooterButtons}\n      </CardActions>\n    </Card>\n  );\n};\n","import React from \"react\";\n\nimport {\n  useTranslate,\n  useUserFriendlyName,\n  useRefineContext,\n  useRouterType,\n  useResource,\n} from \"@refinedev/core\";\n\nimport Card from \"@mui/material/Card\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\n\nimport { CreateButton, Breadcrumb, type CreateButtonProps } from \"@components\";\n\nimport type { ListProps } from \"../types\";\nimport { RefinePageHeaderClassNames } from \"@refinedev/ui-types\";\n\n/**\n * `<List>` provides us a layout for displaying the page.\n * It does not contain any logic but adds extra functionalities like a refresh button.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/basic-views/list} for more details.\n */\nexport const List: React.FC<ListProps> = ({\n  title,\n  canCreate,\n  children,\n  createButtonProps: createButtonPropsFromProps,\n  resource: resourceFromProps,\n  breadcrumb: breadcrumbFromProps,\n  wrapperProps,\n  headerProps,\n  contentProps,\n  headerButtonProps,\n  headerButtons,\n}) => {\n  const translate = useTranslate();\n  const {\n    options: { breadcrumb: globalBreadcrumb } = {},\n  } = useRefineContext();\n  const getUserFriendlyName = useUserFriendlyName();\n\n  const routerType = useRouterType();\n\n  const { resource, identifier } = useResource(resourceFromProps);\n\n  const isCreateButtonVisible =\n    canCreate ??\n    ((resource?.canCreate ?? !!resource?.create) || createButtonPropsFromProps);\n\n  const breadcrumb =\n    typeof breadcrumbFromProps === \"undefined\"\n      ? globalBreadcrumb\n      : breadcrumbFromProps;\n\n  const breadcrumbComponent =\n    typeof breadcrumb !== \"undefined\" ? (\n      <>{breadcrumb}</> ?? undefined\n    ) : (\n      <Breadcrumb />\n    );\n\n  const createButtonProps: CreateButtonProps | undefined = isCreateButtonVisible\n    ? {\n        resource: routerType === \"legacy\" ? resource?.route : identifier,\n        ...createButtonPropsFromProps,\n      }\n    : undefined;\n\n  const defaultHeaderButtons = isCreateButtonVisible ? (\n    <CreateButton {...createButtonProps} />\n  ) : null;\n\n  return (\n    <Card {...(wrapperProps ?? {})}>\n      {breadcrumbComponent}\n      <CardHeader\n        sx={{\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          \".MuiCardHeader-action\": {\n            margin: 0,\n            alignSelf: \"center\",\n          },\n        }}\n        title={\n          title ?? (\n            <Typography\n              variant=\"h5\"\n              className={RefinePageHeaderClassNames.Title}\n            >\n              {translate(\n                `${identifier}.titles.list`,\n                getUserFriendlyName(\n                  resource?.meta?.label ??\n                    resource?.options?.label ??\n                    resource?.label ??\n                    identifier,\n                  \"plural\",\n                ),\n              )}\n            </Typography>\n          )\n        }\n        action={\n          <Box display=\"flex\" gap=\"16px\" {...headerButtonProps}>\n            {headerButtons\n              ? typeof headerButtons === \"function\"\n                ? headerButtons({\n                    defaultButtons: defaultHeaderButtons,\n                    createButtonProps,\n                  })\n                : headerButtons\n              : defaultHeaderButtons}\n          </Box>\n        }\n        {...(headerProps ?? {})}\n      />\n      <CardContent {...(contentProps ?? {})}>{children}</CardContent>\n    </Card>\n  );\n};\n","import React from \"react\";\nimport {\n  useNavigation,\n  useTranslate,\n  useUserFriendlyName,\n  useRefineContext,\n  useRouterType,\n  useBack,\n  useGo,\n  useResource,\n  useToPath,\n} from \"@refinedev/core\";\n\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\n\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\n\nimport {\n  DeleteButton,\n  RefreshButton,\n  ListButton,\n  EditButton,\n  Breadcrumb,\n  type ListButtonProps,\n  type EditButtonProps,\n  type DeleteButtonProps,\n  type RefreshButtonProps,\n} from \"@components\";\nimport type { ShowProps } from \"../types\";\nimport { RefinePageHeaderClassNames } from \"@refinedev/ui-types\";\n\n/**\n * `<Show>` provides us a layout for displaying the page.\n * It does not contain any logic but adds extra functionalities like a refresh button.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/basic-views/show} for more details.\n */\nexport const Show: React.FC<ShowProps> = ({\n  title,\n  canEdit,\n  canDelete,\n  isLoading = false,\n  children,\n  resource: resourceFromProps,\n  recordItemId,\n  breadcrumb: breadcrumbFromProps,\n  dataProviderName,\n  wrapperProps,\n  headerProps,\n  contentProps,\n  headerButtonProps,\n  headerButtons,\n  footerButtonProps,\n  footerButtons,\n  goBack: goBackFromProps,\n}) => {\n  const translate = useTranslate();\n  const {\n    options: { breadcrumb: globalBreadcrumb } = {},\n  } = useRefineContext();\n\n  const routerType = useRouterType();\n  const back = useBack();\n  const go = useGo();\n  const { goBack, list: legacyGoList } = useNavigation();\n  const getUserFriendlyName = useUserFriendlyName();\n\n  const {\n    resource,\n    action,\n    id: idFromParams,\n    identifier,\n  } = useResource(resourceFromProps);\n\n  const goListPath = useToPath({\n    resource,\n    action: \"list\",\n  });\n\n  const id = recordItemId ?? idFromParams;\n\n  const breadcrumb =\n    typeof breadcrumbFromProps === \"undefined\"\n      ? globalBreadcrumb\n      : breadcrumbFromProps;\n\n  const hasList = resource?.list && !recordItemId;\n  const hasDelete =\n    canDelete ?? resource?.meta?.canDelete ?? resource?.canDelete;\n  const isDeleteButtonVisible = hasDelete && typeof id !== \"undefined\";\n  const isEditButtonVisible = canEdit ?? resource?.canEdit ?? !!resource?.edit;\n\n  const breadcrumbComponent =\n    typeof breadcrumb !== \"undefined\" ? (\n      <>{breadcrumb}</> ?? undefined\n    ) : (\n      <Breadcrumb />\n    );\n\n  const listButtonProps: ListButtonProps | undefined = hasList\n    ? {\n        ...(isLoading ? { disabled: true } : {}),\n        resource: routerType === \"legacy\" ? resource?.route : identifier,\n      }\n    : undefined;\n  const editButtonProps: EditButtonProps | undefined = isEditButtonVisible\n    ? {\n        ...(isLoading ? { disabled: true } : {}),\n        resource: routerType === \"legacy\" ? resource?.route : identifier,\n        recordItemId: id,\n      }\n    : undefined;\n  const deleteButtonProps: DeleteButtonProps | undefined = isDeleteButtonVisible\n    ? {\n        ...(isLoading ? { disabled: true } : {}),\n        resource: routerType === \"legacy\" ? resource?.route : identifier,\n        recordItemId: id,\n        onSuccess: () => {\n          if (routerType === \"legacy\") {\n            legacyGoList(resource?.route ?? resource?.name ?? \"\");\n          } else {\n            go({ to: goListPath });\n          }\n        },\n        dataProviderName,\n      }\n    : undefined;\n  const refreshButtonProps: RefreshButtonProps = {\n    ...(isLoading ? { disabled: true } : {}),\n    resource: routerType === \"legacy\" ? resource?.route : identifier,\n    recordItemId: id,\n    dataProviderName,\n  };\n\n  const defaultHeaderButtons = (\n    <>\n      {hasList && <ListButton {...listButtonProps} />}\n      {isEditButtonVisible && <EditButton {...editButtonProps} />}\n      {isDeleteButtonVisible && <DeleteButton {...deleteButtonProps} />}\n      <RefreshButton {...refreshButtonProps} />\n    </>\n  );\n\n  return (\n    <Card {...(wrapperProps ?? {})}>\n      {breadcrumbComponent}\n      <CardHeader\n        sx={{\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          \".MuiCardHeader-action\": {\n            margin: 0,\n            alignSelf: \"center\",\n          },\n        }}\n        title={\n          title ?? (\n            <Typography\n              variant=\"h5\"\n              className={RefinePageHeaderClassNames.Title}\n            >\n              {translate(\n                `${identifier}.titles.show`,\n                `Show ${getUserFriendlyName(\n                  resource?.meta?.label ??\n                    resource?.options?.label ??\n                    resource?.label ??\n                    identifier,\n                  \"singular\",\n                )}`,\n              )}\n            </Typography>\n          )\n        }\n        avatar={\n          typeof goBackFromProps !== \"undefined\" ? (\n            goBackFromProps\n          ) : (\n            <IconButton\n              onClick={\n                action !== \"list\" && typeof action !== \"undefined\"\n                  ? routerType === \"legacy\"\n                    ? goBack\n                    : back\n                  : undefined\n              }\n            >\n              <ArrowBackIcon />\n            </IconButton>\n          )\n        }\n        action={\n          <Box display=\"flex\" gap=\"16px\" {...(headerButtonProps ?? {})}>\n            {headerButtons\n              ? typeof headerButtons === \"function\"\n                ? headerButtons({\n                    defaultButtons: defaultHeaderButtons,\n                    deleteButtonProps,\n                    editButtonProps,\n                    listButtonProps,\n                    refreshButtonProps,\n                  })\n                : headerButtons\n              : defaultHeaderButtons}\n          </Box>\n        }\n        {...(headerProps ?? {})}\n      />\n      <CardContent {...(contentProps ?? {})}>{children}</CardContent>\n      <CardActions sx={{ padding: \"16px\" }} {...(footerButtonProps ?? {})}>\n        {footerButtons\n          ? typeof footerButtons === \"function\"\n            ? footerButtons({ defaultButtons: null })\n            : footerButtons\n          : null}\n      </CardActions>\n    </Card>\n  );\n};\n","import React from \"react\";\nimport { useCreateButton } from \"@refinedev/core\";\nimport {\n  RefineButtonClassNames,\n  RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\n\nimport Button from \"@mui/material/Button\";\nimport AddBoxOutlined from \"@mui/icons-material/AddBoxOutlined\";\n\nimport type { CreateButtonProps } from \"../types\";\n\n/**\n * <CreateButton> uses Material UI {@link https://mui.com/components/buttons/ `<Button> component`}.\n * It uses the {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation#create `create`} method from {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation `useNavigation`} under the hood.\n * It can be useful to redirect the app to the create page route of resource}.\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/components/buttons/create-button} for more details.\n */\nexport const CreateButton: React.FC<CreateButtonProps> = ({\n  resource: resourceNameFromProps,\n  resourceNameOrRouteName,\n  hideText = false,\n  accessControl,\n  svgIconProps,\n  meta,\n  children,\n  onClick,\n  ...rest\n}) => {\n  const { to, label, title, disabled, hidden, LinkComponent } = useCreateButton(\n    {\n      resource: resourceNameFromProps ?? resourceNameOrRouteName,\n      meta,\n      accessControl,\n    },\n  );\n\n  if (hidden) return null;\n\n  const { sx, ...restProps } = rest;\n\n  return (\n    <LinkComponent\n      to={to}\n      replace={false}\n      onClick={(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        if (disabled) {\n          e.preventDefault();\n          return;\n        }\n        if (onClick) {\n          e.preventDefault();\n          onClick(e);\n        }\n      }}\n      style={{ textDecoration: \"none\" }}\n    >\n      <Button\n        disabled={disabled}\n        startIcon={!hideText && <AddBoxOutlined {...svgIconProps} />}\n        title={title}\n        variant=\"contained\"\n        sx={{ minWidth: 0, ...sx }}\n        data-testid={RefineButtonTestIds.CreateButton}\n        className={RefineButtonClassNames.CreateButton}\n        {...restProps}\n      >\n        {hideText ? (\n          <AddBoxOutlined fontSize=\"small\" {...svgIconProps} />\n        ) : (\n          children ?? label\n        )}\n      </Button>\n    </LinkComponent>\n  );\n};\n","import React from \"react\";\nimport { useEditButton } from \"@refinedev/core\";\nimport {\n  RefineButtonClassNames,\n  RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\n\nimport Button from \"@mui/material/Button\";\nimport EditOutlined from \"@mui/icons-material/EditOutlined\";\n\nimport type { EditButtonProps } from \"../types\";\n\n/**\n * `<EditButton>` uses uses Material UI {@link https://mui.com/components/buttons/ `<Button>`} component.\n * It uses the {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation#edit `edit`} method from {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation `useNavigation`} under the hood.\n * It can be useful when redirecting the app to the edit page with the record id route of resource}.\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/components/buttons/edit-button} for more details.\n */\nexport const EditButton: React.FC<EditButtonProps> = ({\n  resource: resourceNameFromProps,\n  resourceNameOrRouteName,\n  recordItemId,\n  hideText = false,\n  accessControl,\n  svgIconProps,\n  meta,\n  children,\n  onClick,\n  ...rest\n}) => {\n  const { to, label, title, hidden, disabled, LinkComponent } = useEditButton({\n    resource: resourceNameFromProps ?? resourceNameOrRouteName,\n    id: recordItemId,\n    accessControl,\n    meta,\n  });\n\n  if (hidden) return null;\n\n  const { sx, ...restProps } = rest;\n\n  return (\n    <LinkComponent\n      to={to}\n      replace={false}\n      onClick={(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        if (disabled) {\n          e.preventDefault();\n          return;\n        }\n        if (onClick) {\n          e.preventDefault();\n          onClick(e);\n        }\n      }}\n      style={{ textDecoration: \"none\" }}\n    >\n      <Button\n        disabled={disabled}\n        startIcon={\n          !hideText && (\n            <EditOutlined sx={{ selfAlign: \"center\" }} {...svgIconProps} />\n          )\n        }\n        title={title}\n        sx={{ minWidth: 0, ...sx }}\n        data-testid={RefineButtonTestIds.EditButton}\n        className={RefineButtonClassNames.EditButton}\n        {...restProps}\n      >\n        {hideText ? (\n          <EditOutlined fontSize=\"small\" {...svgIconProps} />\n        ) : (\n          children ?? label\n        )}\n      </Button>\n    </LinkComponent>\n  );\n};\n","import React from \"react\";\nimport { useDeleteButton } from \"@refinedev/core\";\nimport {\n  RefineButtonClassNames,\n  RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\n\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\n\nimport LoadingButton from \"@mui/lab/LoadingButton\";\n\nimport DeleteOutline from \"@mui/icons-material/DeleteOutline\";\n\nimport type { DeleteButtonProps } from \"../types\";\n\n/**\n * `<DeleteButton>` uses Material UI {@link https://mui.com/material-ui/api/loading-button/#main-content `<LoadingButton>`} and {@link https://mui.com/material-ui/react-dialog/#main-content `<Dialog>`} components.\n * When you try to delete something, a dialog modal shows up and asks for confirmation. When confirmed it executes the `useDelete` method provided by your `dataProvider`.\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/components/buttons/delete-button} for more details.\n */\nexport const DeleteButton: React.FC<DeleteButtonProps> = ({\n  resource: resourceNameFromProps,\n  resourceNameOrRouteName,\n  recordItemId,\n  onSuccess,\n  mutationMode,\n  children,\n  successNotification,\n  errorNotification,\n  hideText = false,\n  accessControl,\n  meta,\n  metaData,\n  dataProviderName,\n  confirmTitle,\n  confirmOkText,\n  confirmCancelText,\n  svgIconProps,\n  invalidates,\n  ...rest\n}) => {\n  const {\n    onConfirm,\n    title,\n    label,\n    hidden,\n    disabled,\n    loading,\n    confirmTitle: defaultConfirmTitle,\n    confirmOkLabel,\n    cancelLabel,\n  } = useDeleteButton({\n    resource: resourceNameFromProps ?? resourceNameOrRouteName,\n    id: recordItemId,\n    dataProviderName,\n    mutationMode,\n    accessControl,\n    invalidates,\n    onSuccess,\n    meta,\n    successNotification,\n    errorNotification,\n  });\n\n  const [open, setOpen] = React.useState(false);\n\n  const { sx, ...restProps } = rest;\n\n  if (hidden) return null;\n\n  return (\n    <div>\n      <LoadingButton\n        color=\"error\"\n        onClick={() => setOpen(true)}\n        disabled={disabled}\n        loading={loading}\n        startIcon={!hideText && <DeleteOutline {...svgIconProps} />}\n        title={title}\n        sx={{ minWidth: 0, ...sx }}\n        loadingPosition={hideText ? \"center\" : \"start\"}\n        data-testid={RefineButtonTestIds.DeleteButton}\n        className={RefineButtonClassNames.DeleteButton}\n        {...restProps}\n      >\n        {hideText ? (\n          <DeleteOutline fontSize=\"small\" {...svgIconProps} />\n        ) : (\n          children ?? label\n        )}\n      </LoadingButton>\n      <Dialog\n        open={open}\n        onClose={() => setOpen(false)}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {confirmTitle ?? defaultConfirmTitle}\n        </DialogTitle>\n        <DialogActions sx={{ justifyContent: \"center\" }}>\n          <Button onClick={() => setOpen(false)}>\n            {confirmCancelText ?? cancelLabel}\n          </Button>\n          <Button\n            color=\"error\"\n            onClick={() => {\n              onConfirm();\n              setOpen(false);\n            }}\n            autoFocus\n          >\n            {confirmOkText ?? confirmOkLabel}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useRefreshButton } from \"@refinedev/core\";\nimport {\n  RefineButtonClassNames,\n  RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\n\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport RefreshOutlined from \"@mui/icons-material/RefreshOutlined\";\n\nimport type { RefreshButtonProps } from \"../types\";\n\n/**\n * `<RefreshButton>` uses uses Material UI {@link https://mui.com/material-ui/api/loading-button/#main-content `<LoadingButton>`} component\n * to update the data shown on the page via the {@link https://refine.dev/docs/api-reference/core/hooks/invalidate/useInvalidate `useInvalidate`} hook.\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/components/buttons/refresh-button} for more details.\n */\nexport const RefreshButton: React.FC<RefreshButtonProps> = ({\n  resource: resourceNameFromProps,\n  resourceNameOrRouteName,\n  recordItemId,\n  hideText = false,\n  dataProviderName,\n  svgIconProps,\n  children,\n  onClick,\n  meta: _meta,\n  metaData: _metaData,\n  ...rest\n}) => {\n  const {\n    onClick: onRefresh,\n    loading,\n    label,\n  } = useRefreshButton({\n    resource: resourceNameFromProps ?? resourceNameOrRouteName,\n    id: recordItemId,\n    dataProviderName,\n  });\n\n  const { sx, ...restProps } = rest;\n\n  return (\n    <LoadingButton\n      startIcon={!hideText && <RefreshOutlined {...svgIconProps} />}\n      loading={loading}\n      loadingPosition={hideText ? \"center\" : \"start\"}\n      onClick={onClick ? onClick : onRefresh}\n      sx={{ minWidth: 0, ...sx }}\n      data-testid={RefineButtonTestIds.RefreshButton}\n      className={RefineButtonClassNames.RefreshButton}\n      {...restProps}\n    >\n      {hideText ? (\n        <RefreshOutlined fontSize=\"small\" {...svgIconProps} />\n      ) : (\n        children ?? label\n      )}\n    </LoadingButton>\n  );\n};\n","import React from \"react\";\nimport { useShowButton } from \"@refinedev/core\";\nimport {\n  RefineButtonClassNames,\n  RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\n\nimport Button from \"@mui/material/Button\";\nimport VisibilityOutlined from \"@mui/icons-material/VisibilityOutlined\";\n\nimport type { ShowButtonProps } from \"../types\";\n\n/**\n * `<ShowButton>` uses uses Material UI {@link https://mui.com/components/buttons/ `<Button>`} component.\n * It uses the {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation#show `show`} method from {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation `useNavigation`} under the hood.\n * It can be useful when red sirecting the app to the show page with the record id route of resource.\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/components/buttons/show-button} for more details.\n */\nexport const ShowButton: React.FC<ShowButtonProps> = ({\n  resource: resourceNameFromProps,\n  resourceNameOrRouteName,\n  recordItemId,\n  hideText = false,\n  accessControl,\n  svgIconProps,\n  meta,\n  children,\n  onClick,\n  ...rest\n}) => {\n  const { to, label, title, hidden, disabled, LinkComponent } = useShowButton({\n    resource: resourceNameFromProps ?? resourceNameOrRouteName,\n    id: recordItemId,\n    accessControl,\n    meta,\n  });\n\n  if (hidden) return null;\n\n  const { sx, ...restProps } = rest;\n\n  return (\n    <LinkComponent\n      to={to}\n      replace={false}\n      onClick={(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        if (disabled) {\n          e.preventDefault();\n          return;\n        }\n        if (onClick) {\n          e.preventDefault();\n          onClick(e);\n        }\n      }}\n      style={{ textDecoration: \"none\" }}\n    >\n      <Button\n        disabled={disabled}\n        startIcon={!hideText && <VisibilityOutlined {...svgIconProps} />}\n        title={title}\n        sx={{ minWidth: 0, ...sx }}\n        data-testid={RefineButtonTestIds.ShowButton}\n        className={RefineButtonClassNames.ShowButton}\n        {...restProps}\n      >\n        {hideText ? (\n          <VisibilityOutlined fontSize=\"small\" {...svgIconProps} />\n        ) : (\n          children ?? label\n        )}\n      </Button>\n    </LinkComponent>\n  );\n};\n","import React from \"react\";\nimport { useListButton } from \"@refinedev/core\";\nimport {\n  RefineButtonClassNames,\n  RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\n\nimport Button from \"@mui/material/Button\";\nimport ListOutlined from \"@mui/icons-material/ListOutlined\";\n\nimport type { ListButtonProps } from \"../types\";\n\n/**\n * `<ListButton>` is using uses Material UI {@link https://mui.com/components/buttons/ `<Button>`} component.\n * It uses the  {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation#list `list`} method from {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation `useNavigation`} under the hood.\n * It can be useful when redirecting the app to the list page route of resource}.\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/components/buttons/list-button} for more details.\n */\nexport const ListButton: React.FC<ListButtonProps> = ({\n  resource: resourceNameFromProps,\n  resourceNameOrRouteName,\n  hideText = false,\n  accessControl,\n  svgIconProps,\n  meta,\n  children,\n  onClick,\n  ...rest\n}) => {\n  const { to, label, title, hidden, disabled, LinkComponent } = useListButton({\n    resource: resourceNameFromProps ?? resourceNameOrRouteName,\n    meta,\n    accessControl,\n  });\n\n  if (hidden) return null;\n\n  const { sx, ...restProps } = rest;\n\n  return (\n    <LinkComponent\n      to={to}\n      replace={false}\n      onClick={(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        if (disabled) {\n          e.preventDefault();\n          return;\n        }\n        if (onClick) {\n          e.preventDefault();\n          onClick(e);\n        }\n      }}\n      style={{ textDecoration: \"none\" }}\n    >\n      <Button\n        disabled={disabled}\n        startIcon={!hideText && <ListOutlined {...svgIconProps} />}\n        title={title}\n        sx={{ minWidth: 0, ...sx }}\n        data-testid={RefineButtonTestIds.ListButton}\n        className={RefineButtonClassNames.ListButton}\n        {...restProps}\n      >\n        {hideText ? (\n          <ListOutlined fontSize=\"small\" {...svgIconProps} />\n        ) : (\n          children ?? label\n        )}\n      </Button>\n    </LinkComponent>\n  );\n};\n","import React from \"react\";\nimport { useExportButton } from \"@refinedev/core\";\nimport {\n  RefineButtonClassNames,\n  RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\n\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport ImportExportOutlined from \"@mui/icons-material/ImportExportOutlined\";\n\nimport type { ExportButtonProps } from \"../types\";\n\n/**\n * `<ExportButton>` uses Material UI {@link https://mui.com/material-ui/api/loading-button/#main-content `<LoadingButton>`} with a default export icon and a default text with \"Export\".\n * It only has presentational value.\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/components/buttons/export-button} for more details.\n */\nexport const ExportButton: React.FC<ExportButtonProps> = ({\n  hideText = false,\n  children,\n  loading = false,\n  svgIconProps,\n  ...rest\n}) => {\n  const { label } = useExportButton();\n\n  const { sx, ...restProps } = rest;\n\n  return (\n    <LoadingButton\n      {...rest}\n      loading={loading}\n      startIcon={!hideText && <ImportExportOutlined {...svgIconProps} />}\n      loadingPosition={hideText ? \"center\" : \"start\"}\n      sx={{ minWidth: 0, ...sx }}\n      data-testid={RefineButtonTestIds.ExportButton}\n      className={RefineButtonClassNames.ExportButton}\n      {...restProps}\n    >\n      {hideText ? (\n        <ImportExportOutlined fontSize=\"small\" {...svgIconProps} />\n      ) : (\n        children ?? label\n      )}\n    </LoadingButton>\n  );\n};\n","import React from \"react\";\nimport { useSaveButton } from \"@refinedev/core\";\nimport {\n  RefineButtonClassNames,\n  RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\n\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport SaveOutlined from \"@mui/icons-material/SaveOutlined\";\n\nimport type { SaveButtonProps } from \"../types\";\n\n/**\n * `<SaveButton>` uses Material UI {@link https://mui.com/material-ui/api/loading-button/#main-content `<LoadingButton>`} component.\n * It uses it for presantation purposes only. Some of the hooks that refine has adds features to this button.\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/components/buttons/save-button} for more details.\n */\nexport const SaveButton: React.FC<SaveButtonProps> = ({\n  hideText = false,\n  svgIconProps,\n  children,\n  ...rest\n}) => {\n  const { label } = useSaveButton();\n\n  const { sx, ...restProps } = rest;\n\n  return (\n    <LoadingButton\n      startIcon={!hideText && <SaveOutlined {...svgIconProps} />}\n      sx={{ minWidth: 0, ...sx }}\n      variant=\"contained\"\n      data-testid={RefineButtonTestIds.SaveButton}\n      className={RefineButtonClassNames.SaveButton}\n      {...restProps}\n    >\n      {hideText ? (\n        <SaveOutlined fontSize=\"small\" {...svgIconProps} />\n      ) : (\n        children ?? label\n      )}\n    </LoadingButton>\n  );\n};\n","import React from \"react\";\nimport { useCloneButton } from \"@refinedev/core\";\nimport {\n  RefineButtonClassNames,\n  RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\n\nimport Button from \"@mui/material/Button\";\nimport AddBoxOutlined from \"@mui/icons-material/AddBoxOutlined\";\n\nimport type { CloneButtonProps } from \"../types\";\n\n/**\n * `<CloneButton>` uses Material UI {@link https://mui.com/components/buttons/ `<Button> component`}.\n * It uses the {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation#clone `clone`} method from {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation useNavigation} under the hood.\n * It can be useful when redirecting the app to the create page with the record id route of resource.\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/components/buttons/clone-button} for more details.\n *\n */\nexport const CloneButton: React.FC<CloneButtonProps> = ({\n  resource: resourceNameFromProps,\n  resourceNameOrRouteName,\n  recordItemId,\n  hideText = false,\n  accessControl,\n  svgIconProps,\n  meta,\n  children,\n  onClick,\n  ...rest\n}) => {\n  const { to, label, title, hidden, disabled, LinkComponent } = useCloneButton({\n    resource: resourceNameFromProps ?? resourceNameOrRouteName,\n    id: recordItemId,\n    meta,\n    accessControl,\n  });\n\n  if (hidden) return null;\n\n  const { sx, ...restProps } = rest;\n\n  return (\n    <LinkComponent\n      to={to}\n      replace={false}\n      onClick={(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        if (disabled) {\n          e.preventDefault();\n          return;\n        }\n        if (onClick) {\n          e.preventDefault();\n          onClick(e);\n        }\n      }}\n      style={{ textDecoration: \"none\" }}\n    >\n      <Button\n        disabled={disabled}\n        startIcon={!hideText && <AddBoxOutlined {...svgIconProps} />}\n        title={title}\n        sx={{ minWidth: 0, ...sx }}\n        data-testid={RefineButtonTestIds.CloneButton}\n        className={RefineButtonClassNames.CloneButton}\n        {...restProps}\n      >\n        {hideText ? (\n          <AddBoxOutlined fontSize=\"small\" {...svgIconProps} />\n        ) : (\n          children ?? label\n        )}\n      </Button>\n    </LinkComponent>\n  );\n};\n","import React from \"react\";\nimport { useImportButton } from \"@refinedev/core\";\nimport {\n  RefineButtonClassNames,\n  RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\n\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport ImportExportOutlined from \"@mui/icons-material/ImportExportOutlined\";\n\nimport type { ImportButtonProps } from \"../types\";\n\n/**\n * `<ImportButton>` is compatible with the {@link https://refine.dev/docs/api-reference/core/hooks/import-export/useImport/ `useImport`} core hook.\n * It uses Material UI {@link https://mui.com/material-ui/api/loading-button/#main-content  `<LoadingButton>`} and native html {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input  `<input>`} element.\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/components/buttons/import-button} for more details.\n */\nexport const ImportButton: React.FC<ImportButtonProps> = ({\n  inputProps,\n  hideText = false,\n  loading = false,\n  svgIconProps,\n  children,\n  ...rest\n}) => {\n  const { label } = useImportButton();\n\n  const { sx, ...restProps } = rest;\n\n  return (\n    <label htmlFor=\"contained-button-file\">\n      <input {...inputProps} id=\"contained-button-file\" multiple hidden />\n      <LoadingButton\n        component=\"span\"\n        startIcon={!hideText && <ImportExportOutlined {...svgIconProps} />}\n        loadingPosition={hideText ? \"center\" : \"start\"}\n        loading={loading}\n        sx={{ minWidth: 0, ...sx }}\n        data-testid={RefineButtonTestIds.ImportButton}\n        className={RefineButtonClassNames.ImportButton}\n        {...restProps}\n      >\n        {hideText ? (\n          <ImportExportOutlined fontSize=\"small\" {...svgIconProps} />\n        ) : (\n          children ?? label\n        )}\n      </LoadingButton>\n    </label>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\n\nimport Box from \"@mui/material/Box\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Typography from \"@mui/material/Typography\";\n\ntype CircularDeterminateProps = {\n  undoableTimeout: number;\n  message: string;\n};\n\nexport const CircularDeterminate: React.FC<CircularDeterminateProps> = ({\n  undoableTimeout,\n  message,\n}) => {\n  const [progress, setProgress] = useState(100);\n\n  const [timeCount, setTimeCount] = useState(undoableTimeout);\n\n  useEffect(() => {\n    const increaseProgress = 100 / undoableTimeout;\n    const timer = setInterval(() => {\n      setTimeCount((prevProgress) => prevProgress - 1);\n      setProgress((prevProgress) => prevProgress - increaseProgress);\n    }, 1000);\n\n    if (timeCount === 0) {\n      clearInterval(timer);\n    }\n\n    return () => {\n      clearInterval(timer);\n    };\n  }, [timeCount]);\n\n  return (\n    <>\n      <Box sx={{ position: \"relative\", display: \"inline-flex\" }}>\n        <CircularProgress\n          color=\"inherit\"\n          variant=\"determinate\"\n          value={progress}\n        />\n        <Box\n          sx={{\n            top: 0,\n            left: 0,\n            bottom: 0,\n            right: 0,\n            position: \"absolute\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <Typography component=\"div\">{timeCount}</Typography>\n        </Box>\n      </Box>\n      <Box\n        sx={{\n          marginLeft: \"10px\",\n          maxWidth: { xs: \"150px\", md: \"100%\" },\n        }}\n      >\n        <Typography variant=\"subtitle2\">{message}</Typography>\n      </Box>\n    </>\n  );\n};\n","import React from \"react\";\nimport Typography from \"@mui/material/Typography\";\n\nimport type { TextFieldProps } from \"../types\";\n\n/**\n * This field lets you show basic text. It uses Materail UI {@link https://mui.com/material-ui/react-typography/#main-content `<Typography>`} component.\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/components/fields/text} for more details.\n */\nconst TextField: React.FC<TextFieldProps> = ({ value, ...rest }) => {\n  return (\n    <Typography variant=\"body2\" {...rest}>\n      {value}\n    </Typography>\n  );\n};\n\nexport { TextField as TextFieldComponent };\n","import React from \"react\";\nimport Chip from \"@mui/material/Chip\";\n\nimport type { TagFieldProps } from \"../types\";\n\n/**\n * This field lets you display a value in a tag. It uses Material UI {@link https://mui.com/material-ui/react-chip/#main-content `<Chip>`} component.\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/components/fields/tag} for more details.\n */\nexport const TagField: React.FC<TagFieldProps> = ({ value, ...rest }) => {\n  return <Chip label={value?.toString()} {...rest} />;\n};\n","import React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport Link from \"@mui/material/Link\";\n\nimport type { EmailFieldProps } from \"../types\";\n\n/**\n * This field is used to display email values. It uses the {@link https://mui.com/material-ui/react-typography/#main-content `<Typography>` }\n * and {@link https://mui.com/material-ui/react-link/#main-content `<Link>`} components from Material UI.\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/components/fields/email} for more details.\n */\nexport const EmailField: React.FC<EmailFieldProps> = ({ value, ...rest }) => {\n  return (\n    <Typography variant=\"body2\">\n      <Link href={`mailto:${value}`} {...rest}>\n        {value}\n      </Link>\n    </Typography>\n  );\n};\n","import React from \"react\";\n\nimport Tooltip from \"@mui/material/Tooltip\";\nimport CheckOutlined from \"@mui/icons-material/CheckOutlined\";\nimport CloseOutlined from \"@mui/icons-material/CloseOutlined\";\n\nimport type { BooleanFieldProps } from \"../types\";\n\n/**\n * This field is used to display boolean values. It uses the {@link https://mui.com/material-ui/react-tooltip/#main-content `<Tooltip>`} values from Materila UI.\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/components/fields/boolean} for more details.\n */\nexport const BooleanField: React.FC<BooleanFieldProps> = ({\n  value,\n  valueLabelTrue = \"true\",\n  valueLabelFalse = \"false\",\n  trueIcon,\n  falseIcon,\n  svgIconProps,\n  ...rest\n}) => {\n  return (\n    <Tooltip title={value ? valueLabelTrue : valueLabelFalse} {...rest}>\n      {value ? (\n        <span>{trueIcon ?? <CheckOutlined {...svgIconProps} />}</span>\n      ) : (\n        <span>{falseIcon ?? <CloseOutlined {...svgIconProps} />}</span>\n      )}\n    </Tooltip>\n  );\n};\n","import React from \"react\";\n\nimport dayjs from \"dayjs\";\n\nimport LocalizedFormat from \"dayjs/plugin/localizedFormat\";\n\nimport Typography from \"@mui/material/Typography\";\n\nimport type { DateFieldProps } from \"../types\";\n\ndayjs.extend(LocalizedFormat);\n\nconst defaultLocale = dayjs.locale();\n\n/**\n * This field is used to display dates. It uses {@link https://day.js.org/docs/en/display/format `Day.js`} to display date format and\n * Material UI {@link https://mui.com/material-ui/react-typography/#main-content `<Typography>`} component\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/components/fields/date} for more details.\n */\nexport const DateField: React.FC<DateFieldProps> = ({\n  value,\n  locales,\n  format: dateFormat = \"L\",\n  ...rest\n}) => {\n  return (\n    <Typography variant=\"body2\" {...rest}>\n      {value\n        ? dayjs(value)\n            .locale(locales || defaultLocale)\n            .format(dateFormat)\n        : \"\"}\n    </Typography>\n  );\n};\n","import React from \"react\";\n\nimport { UrlField } from \"@components\";\n\nimport type { FileFieldProps } from \"../types\";\n\n/**\n * This field is used to display files and  uses Material UI {@link https://mui.com/material-ui/react-typography/#main-content `<Typography>`}  and {@link https://mui.com/material-ui/react-link/#main-content `<Link>`} components.\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/components/fields/file} for more details.\n */\nexport const FileField: React.FC<FileFieldProps> = ({\n  title,\n  src,\n  ...rest\n}) => {\n  return (\n    <UrlField value={src} title={title} {...rest}>\n      {title ?? src}\n    </UrlField>\n  );\n};\n","import React from \"react\";\nimport Link from \"@mui/material/Link\";\nimport Typography from \"@mui/material/Typography\";\n\nimport type { UrlFieldProps } from \"../types\";\n\n/**\n * This field lets you embed a link.It uses the {@link https://mui.com/material-ui/react-typography/#main-content `<Typography>` }\n * and {@link https://mui.com/material-ui/react-link/#main-content `<Link>`} components from Material UI.\n * You can pass a URL in its `value` property and you can show a text in its place by passing any `children`.\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/components/fields/url} for more details.\n */\nexport const UrlField: React.FC<UrlFieldProps> = ({\n  children,\n  value,\n  ...rest\n}) => {\n  return (\n    <Typography variant=\"body2\">\n      <Link href={value} {...rest}>\n        {children ?? value}\n      </Link>\n    </Typography>\n  );\n};\n","import React from \"react\";\nimport Typography from \"@mui/material/Typography\";\n\nimport type { NumberFieldProps } from \"../types\";\n\nfunction toLocaleStringSupportsOptions() {\n  return !!(\n    typeof Intl === \"object\" &&\n    Intl &&\n    typeof Intl.NumberFormat === \"function\"\n  );\n}\n\n/**\n * This field is used to display a number formatted according to the browser locale, right aligned. and uses {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl `Intl`} to display date format\n * and Material UI {@link https://mui.com/material-ui/react-typography/#main-content `<Typography>`} component.\n * @see {@link https://refine.dev/docs/api-reference/mui/components/fields/number} for more details.\n */\nexport const NumberField: React.FC<NumberFieldProps> = ({\n  value,\n  locale,\n  options,\n  ...rest\n}) => {\n  const number = Number(value);\n\n  return (\n    <Typography variant=\"body2\" {...rest}>\n      {toLocaleStringSupportsOptions()\n        ? number.toLocaleString(locale, options)\n        : number}\n    </Typography>\n  );\n};\n","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport gfm from \"remark-gfm\";\n\nimport type { MarkdownFieldProps } from \"../types\";\n\n/**\n * This field lets you display markdown content. It supports {@link https://github.github.com/gfm/ GitHub Flavored Markdown}.\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/components/fields/markdown} for more details.\n */\nexport const MarkdownField: React.FC<MarkdownFieldProps> = ({ value = \"\" }) => {\n  // There's an issue related with the type inconsistency of the `remark-gfm` and `remark-rehype` packages, we need to cast the `gfm` as any. (https://github.com/orgs/rehypejs/discussions/63)\n  return (\n    <ReactMarkdown\n      remarkPlugins={[gfm] as unknown as ReactMarkdown.PluggableList}\n    >\n      {value}\n    </ReactMarkdown>\n  );\n};\n","import React from \"react\";\nimport {\n  matchResourceFromRoute,\n  useBreadcrumb,\n  useLink,\n  useRefineContext,\n  useResource,\n  useRouterContext,\n  useRouterType,\n} from \"@refinedev/core\";\nimport type { RefineBreadcrumbProps } from \"@refinedev/ui-types\";\n\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\nimport Typography from \"@mui/material/Typography\";\nimport Link from \"@mui/material/Link\";\nimport Grid from \"@mui/material/Grid\";\n\nimport type { BreadcrumbsProps as MuiBreadcrumbProps } from \"@mui/material/Breadcrumbs\";\nimport type { LinkProps } from \"@mui/material/Link\";\n\nimport HomeOutlined from \"@mui/icons-material/HomeOutlined\";\n\nexport type BreadcrumbProps = RefineBreadcrumbProps<MuiBreadcrumbProps>;\n\nexport const Breadcrumb: React.FC<BreadcrumbProps> = ({\n  breadcrumbProps,\n  showHome = true,\n  hideIcons = false,\n  meta,\n}) => {\n  const { breadcrumbs } = useBreadcrumb({ meta });\n  const routerType = useRouterType();\n  const NewLink = useLink();\n  const { Link: LegacyLink } = useRouterContext();\n\n  const ActiveLink = routerType === \"legacy\" ? LegacyLink : NewLink;\n\n  const { hasDashboard } = useRefineContext();\n\n  const { resources } = useResource();\n\n  const rootRouteResource = matchResourceFromRoute(\"/\", resources);\n\n  if (breadcrumbs.length === 1) {\n    return null;\n  }\n\n  const LinkRouter = (props: LinkProps & { to?: string }) => (\n    <Link {...props} component={ActiveLink} />\n  );\n\n  return (\n    <Breadcrumbs\n      aria-label=\"breadcrumb\"\n      sx={{\n        paddingY: 2,\n        paddingX: 2,\n        ...(breadcrumbProps?.sx ?? {}),\n      }}\n      {...breadcrumbProps}\n    >\n      {showHome && (hasDashboard || rootRouteResource.found) && (\n        <LinkRouter\n          underline=\"hover\"\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n          }}\n          color=\"inherit\"\n          to=\"/\"\n        >\n          {rootRouteResource?.resource?.meta?.icon ?? (\n            <HomeOutlined\n              sx={{\n                fontSize: \"18px\",\n              }}\n            />\n          )}\n        </LinkRouter>\n      )}\n      {breadcrumbs.map(({ label, icon, href }) => {\n        return (\n          <Grid\n            key={label}\n            sx={{\n              display: \"flex\",\n              alignItems: \"center\",\n              \"& .MuiSvgIcon-root\": {\n                fontSize: \"16px\",\n              },\n            }}\n          >\n            {!hideIcons && icon}\n            {href ? (\n              <LinkRouter\n                underline=\"hover\"\n                sx={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  fontSize: \"14px\",\n                }}\n                color=\"inherit\"\n                to={href}\n                variant=\"subtitle1\"\n                marginLeft={0.5}\n              >\n                {label}\n              </LinkRouter>\n            ) : (\n              <Typography fontSize=\"14px\">{label}</Typography>\n            )}\n          </Grid>\n        );\n      })}\n    </Breadcrumbs>\n  );\n};\n","import React from \"react\";\nimport {\n  type AutoSaveIndicatorProps,\n  useTranslate,\n  AutoSaveIndicator as AutoSaveIndicatorCore,\n} from \"@refinedev/core\";\nimport Typography from \"@mui/material/Typography\";\nimport MoreHorizOutlinedIcon from \"@mui/icons-material/MoreHorizOutlined\";\nimport SyncOutlinedIcon from \"@mui/icons-material/SyncOutlined\";\nimport TaskAltOutlinedIcon from \"@mui/icons-material/TaskAltOutlined\";\nimport ErrorOutlineOutlinedIcon from \"@mui/icons-material/ErrorOutlineOutlined\";\n\nexport const AutoSaveIndicator: React.FC<AutoSaveIndicatorProps> = ({\n  status,\n  elements: {\n    success = (\n      <Message\n        translationKey=\"autoSave.success\"\n        defaultMessage=\"saved\"\n        icon={<TaskAltOutlinedIcon fontSize=\"small\" />}\n      />\n    ),\n    error = (\n      <Message\n        translationKey=\"autoSave.error\"\n        defaultMessage=\"auto save failure\"\n        icon={<ErrorOutlineOutlinedIcon fontSize=\"small\" />}\n      />\n    ),\n    loading = (\n      <Message\n        translationKey=\"autoSave.loading\"\n        defaultMessage=\"saving...\"\n        icon={<SyncOutlinedIcon fontSize=\"small\" />}\n      />\n    ),\n    idle = (\n      <Message\n        translationKey=\"autoSave.idle\"\n        defaultMessage=\"waiting for changes\"\n        icon={<MoreHorizOutlinedIcon fontSize=\"small\" />}\n      />\n    ),\n  } = {},\n}) => {\n  return (\n    <AutoSaveIndicatorCore\n      status={status}\n      elements={{\n        success,\n        error,\n        loading,\n        idle,\n      }}\n    />\n  );\n};\n\nconst Message = ({\n  translationKey,\n  defaultMessage,\n  icon,\n}: {\n  translationKey: string;\n  defaultMessage: string;\n  icon: React.ReactNode;\n}) => {\n  const translate = useTranslate();\n\n  return (\n    <Typography\n      color=\"gray\"\n      fontSize=\"0.8rem\"\n      position=\"relative\"\n      display=\"flex\"\n      alignItems=\"center\"\n      flexWrap=\"wrap\"\n      marginRight=\".3rem\"\n    >\n      {translate(translationKey, defaultMessage)}\n      <span style={{ position: \"relative\", top: \"3px\", marginLeft: \"3px\" }}>\n        {icon}\n      </span>\n    </Typography>\n  );\n};\n","import type { Theme, ThemeOptions } from \"@mui/material/styles\";\nimport { createTheme } from \"@mui/material/styles\";\n\nimport { lightPalette } from \"./palette/lightPalette\";\nimport { darkPalette } from \"./palette/darkPalette\";\nimport { typography } from \"./typography\";\nimport { RefinePalettes } from \"./palette\";\n\nconst commonThemeProperties: ThemeOptions = {\n  shape: {\n    borderRadius: 6,\n  },\n  typography: {\n    ...typography,\n  },\n};\n\nconst LightTheme = createTheme({\n  ...commonThemeProperties,\n  palette: lightPalette,\n  components: {\n    MuiAppBar: {\n      styleOverrides: {\n        colorDefault: {\n          backgroundColor: \"#fff\",\n        },\n      },\n    },\n    MuiPaper: {\n      styleOverrides: {\n        root: {\n          backgroundImage:\n            \"linear-gradient(rgba(255, 255, 255, 0.01), rgba(255, 255, 255, 0.01))\",\n        },\n      },\n    },\n    MuiTypography: {\n      styleOverrides: {\n        h5: {\n          fontWeight: 800,\n          lineHeight: \"2rem\",\n        },\n      },\n    },\n  },\n});\n\nconst DarkTheme = createTheme({\n  ...commonThemeProperties,\n  palette: darkPalette,\n  components: {\n    MuiPaper: {\n      styleOverrides: {\n        root: {\n          backgroundImage:\n            \"linear-gradient(rgba(255, 255, 255, 0.025), rgba(255, 255, 255, 0.025))\",\n        },\n      },\n    },\n    MuiAppBar: {\n      defaultProps: {\n        color: \"transparent\",\n      },\n    },\n    MuiTypography: {\n      styleOverrides: {\n        h5: {\n          fontWeight: 800,\n          lineHeight: \"2rem\",\n        },\n      },\n    },\n  },\n});\n\nconst RefineThemes = Object.keys(RefinePalettes).reduce((acc, key) => {\n  const paletteName = key as keyof typeof RefinePalettes;\n\n  return {\n    ...acc,\n    [key]: createTheme({\n      palette: {\n        ...RefinePalettes[paletteName],\n      },\n      components: {\n        MuiButton: {\n          styleOverrides: {\n            root: ({ ownerState }) => ({\n              ...(ownerState.variant === \"contained\" &&\n                ownerState.color === \"primary\" && {\n                  color: \"#fff\",\n                }),\n            }),\n          },\n        },\n      },\n    }),\n  };\n}, {}) as Record<keyof typeof RefinePalettes, Theme>;\n\nexport { LightTheme, DarkTheme, RefineThemes };\n","import type { PaletteOptions } from \"@mui/material/styles\";\n\nexport const lightPalette: PaletteOptions = {\n  mode: \"light\",\n  primary: {\n    main: \"#67be23\",\n    contrastText: \"#fff\",\n  },\n  secondary: {\n    main: \"#2A132E\",\n    contrastText: \"#fff\",\n  },\n  background: {\n    default: \"#f0f0f0\",\n    paper: \"#ffffff\",\n  },\n  success: {\n    main: \"#67be23\",\n    contrastText: \"#fff\",\n  },\n  error: {\n    main: \"#fa541c\",\n    contrastText: \"#fff\",\n  },\n  warning: {\n    main: \"#fa8c16\",\n    contrastText: \"#fff\",\n  },\n  info: {\n    main: \"#0b82f0\",\n    contrastText: \"#fff\",\n  },\n  divider: \"rgba(0,0,0,0)\",\n  text: {\n    primary: \"#626262\",\n    secondary: \"#9f9f9f\",\n    disabled: \"#c1c1c1\",\n  },\n};\n","import type { PaletteOptions } from \"@mui/material/styles\";\n\nexport const darkPalette: PaletteOptions = {\n  mode: \"dark\",\n  primary: {\n    main: \"#67be23\",\n    contrastText: \"#fff\",\n  },\n  secondary: {\n    main: \"#2A132E\",\n    contrastText: \"#fff\",\n  },\n  background: {\n    default: \"#212121\",\n    paper: \"#242424\",\n  },\n  success: {\n    main: \"#67be23\",\n    contrastText: \"#fff\",\n  },\n  error: {\n    main: \"#ee2a1e\",\n    contrastText: \"#fff\",\n  },\n  warning: {\n    main: \"#fa8c16\",\n    contrastText: \"#fff\",\n  },\n  info: {\n    main: \"#1890ff\",\n    contrastText: \"#fff\",\n  },\n  divider: \"rgba(0,0,0,0)\",\n  text: {\n    primary: \"#fff\",\n    secondary: \"rgba(255,255,255,0.7)\",\n    disabled: \"#d1d1d1\",\n  },\n};\n","import type { TypographyVariantsOptions } from \"@mui/material/styles\";\n\nexport const typography: TypographyVariantsOptions = {\n  fontFamily: [\n    \"Montserrat\",\n    \"-apple-system\",\n    \"BlinkMacSystemFont\",\n    '\"Segoe UI\"',\n    \"Roboto\",\n    '\"Helvetica Neue\"',\n    \"Arial\",\n    \"sans-serif\",\n    '\"Apple Color Emoji\"',\n    '\"Segoe UI Emoji\"',\n    '\"Segoe UI Symbol\"',\n  ].join(\",\"),\n};\n","export const RefinePalettes = {\n  Blue: {\n    mode: \"light\",\n    primary: {\n      main: \"#1976D2\",\n      light: \"#4791db\",\n      dark: \"#115293\",\n    },\n  },\n  BlueDark: {\n    mode: \"dark\",\n    primary: {\n      main: \"#67b7f7\",\n      light: \"#85c5f8\",\n      dark: \"#4880ac\",\n    },\n  },\n  Purple: {\n    mode: \"light\",\n    primary: {\n      main: \"#7B1FA2\",\n      light: \"#954bb4\",\n      dark: \"#561571\",\n    },\n  },\n  PurpleDark: {\n    mode: \"dark\",\n    primary: {\n      main: \"#AB47BC\",\n      light: \"#bb6bc9\",\n      dark: \"#773183\",\n    },\n  },\n  Magenta: {\n    mode: \"light\",\n    primary: {\n      main: \"#C2185B\",\n      light: \"#ce467b\",\n      dark: \"#87103f\",\n    },\n  },\n  MagentaDark: {\n    mode: \"dark\",\n    primary: {\n      main: \"#EC407A\",\n      light: \"#ef6694\",\n      dark: \"#a52c55\",\n    },\n  },\n  Red: {\n    mode: \"light\",\n    primary: {\n      main: \"#D32F2F\",\n      light: \"#db5858\",\n      dark: \"#932020\",\n    },\n  },\n  RedDark: {\n    mode: \"dark\",\n    primary: {\n      main: \"#EF5350\",\n      light: \"#f27573\",\n      dark: \"#a73a38\",\n    },\n  },\n  Orange: {\n    mode: \"light\",\n    primary: {\n      main: \"#F57C00\",\n      light: \"#f79633\",\n      dark: \"#ab5600\",\n    },\n  },\n  OrangeDark: {\n    mode: \"dark\",\n    primary: {\n      main: \"#FFA726\",\n      light: \"#ffb851\",\n      dark: \"#b2741a\",\n    },\n  },\n  Yellow: {\n    mode: \"light\",\n    primary: {\n      main: \"#FFA000\",\n      light: \"#ffb333\",\n      dark: \"#b27000\",\n    },\n  },\n  YellowDark: {\n    mode: \"dark\",\n    primary: {\n      main: \"#FFCA28\",\n      light: \"#ffd453\",\n      dark: \"#E87040\",\n    },\n  },\n  Green: {\n    mode: \"light\",\n    primary: {\n      main: \"#689F38\",\n      light: \"#86b25f\",\n      dark: \"#486f27\",\n    },\n  },\n  GreenDark: {\n    mode: \"dark\",\n    primary: {\n      main: \"#9CCC65\",\n      light: \"#afd683\",\n      dark: \"#6d8e46\",\n    },\n  },\n} as const;\n","import React from \"react\";\nimport type { NotificationProvider } from \"@refinedev/core\";\n\nimport { useSnackbar } from \"notistack\";\n\nimport { CircularDeterminate } from \"@components\";\n\nimport Box from \"@mui/material/Box\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport UndoOutlined from \"@mui/icons-material/UndoOutlined\";\n\nexport const useNotificationProvider = (): NotificationProvider => {\n  const { closeSnackbar, enqueueSnackbar } = useSnackbar();\n\n  const notificationProvider: NotificationProvider = {\n    open: ({\n      message,\n      type,\n      undoableTimeout,\n      key,\n      cancelMutation,\n      description,\n    }) => {\n      if (type === \"progress\") {\n        const action = (key: any) => (\n          <IconButton\n            onClick={() => {\n              cancelMutation?.();\n              closeSnackbar(key);\n            }}\n            color=\"inherit\"\n          >\n            <UndoOutlined />\n          </IconButton>\n        );\n        enqueueSnackbar(\n          <>\n            <CircularDeterminate\n              undoableTimeout={undoableTimeout ?? 0}\n              message={message}\n            />\n          </>,\n          {\n            action,\n            preventDuplicate: true,\n            key,\n            autoHideDuration: (undoableTimeout ?? 0) * 1000,\n          },\n        );\n      } else {\n        enqueueSnackbar(\n          <Box>\n            <Typography variant=\"subtitle2\" component=\"h6\">\n              {description}\n            </Typography>\n            <Typography variant=\"caption\" component=\"p\">\n              {message}\n            </Typography>\n          </Box>,\n          {\n            key,\n            variant: type,\n          },\n        );\n      }\n    },\n    close: (key) => {\n      closeSnackbar(key);\n    },\n  };\n\n  return notificationProvider;\n};\n\n/**\n * @deprecated `notificationProvider` is deprecated due to consistent naming convention between UI libraries. Please use `useNotificationProvider` export as your notification provider.\n */\nexport const notificationProvider = useNotificationProvider;\n","import React from \"react\";\nimport { styled } from \"@mui/material/styles\";\n\nimport type EmotionStyled from \"@emotion/styled\";\nimport type { styled as MuiSystemStyled } from \"@mui/system\";\n\nimport { SnackbarProvider } from \"notistack\";\n\nconst SnackbarProviderWithDefaultValues = ({\n  anchorOrigin = {\n    vertical: \"top\",\n    horizontal: \"right\",\n  },\n  disableWindowBlurListener = true,\n  ...rest\n}: React.ComponentProps<typeof SnackbarProvider>) => {\n  return (\n    <SnackbarProvider\n      anchorOrigin={anchorOrigin}\n      disableWindowBlurListener={disableWindowBlurListener}\n      {...rest}\n    />\n  );\n};\n\nexport const RefineSnackbarProvider = styled(SnackbarProviderWithDefaultValues)`\n&.SnackbarItem-contentRoot {\n    background-color: ${(props) => props.theme.palette.background.default};\n    color: ${(props) => props.theme.palette.primary.main};\n}\n&.SnackbarItem-variantSuccess {\n    background-color: ${(props) => props.theme.palette.success.main};\n    color: ${(props) => props.theme.palette.success.contrastText};\n}\n&.SnackbarItem-variantError {\n    background-color: ${(props) => props.theme.palette.error.main};\n    color: ${(props) => props.theme.palette.error.contrastText};\n}\n&.SnackbarItem-variantInfo {\n    background-color: ${(props) => props.theme.palette.info.main};\n    color: ${(props) => props.theme.palette.info.contrastText};\n}\n&.SnackbarItem-variantWarning {\n    background-color: ${(props) => props.theme.palette.warning.main};\n    color: ${(props) => props.theme.palette.warning.contrastText};\n}\n`;\n"],"mappings":"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","names":["SnackbarProvider","useSnackbar","React","Box","Link","selectedKey","meta","React","useActiveAuthProvider","useActiveAuthProvider","React","Sider","Header","Title","React","Box","React","useRouterContext","useLink","useRouterType","Button","useRouterType","Link","useLink","useRouterContext","React","Button","React","useState","Box","React","useState","Box","Drawer","List","ListItemButton","ListItemIcon","ListItemText","Collapse","Tooltip","IconButton","ListOutlined","Logout","ExpandLess","ExpandMore","ChevronLeft","MenuRounded","Dashboard","CanAccess","useIsExistAuthentication","useLogout","useTitle","useTranslate","useRouterContext","useRouterType","useLink","useMenu","useRefineContext","useActiveAuthProvider","pickNotDeprecated","useWarnAboutChange","useState","useTranslate","useRouterType","Link","useLink","useRouterContext","useRefineContext","useMenu","useIsExistAuthentication","useTitle","useActiveAuthProvider","useWarnAboutChange","useLogout","React","selectedKey","meta","pickNotDeprecated","CanAccess","Tooltip","ListItemButton","ListItemIcon","ListOutlined","ListItemText","ExpandLess","ExpandMore","Collapse","List","Dashboard","Logout","Box","Drawer","IconButton","ChevronLeft","MenuRounded","React","useGetIdentity","useActiveAuthProvider","AppBar","Stack","Toolbar","Typography","Avatar","IconButton","useActiveAuthProvider","useGetIdentity","React","AppBar","Toolbar","IconButton","Stack","Typography","Avatar","Sider","Header","Title","useState","React","Box","React","useRouterContext","useLink","useRouterType","Typography","React","useRouterType","Link","useLink","useRouterContext","Typography","React","Box","React","useState","React","useState","React","useState","Box","Drawer","List","ListItemButton","ListItemIcon","ListItemText","Collapse","Tooltip","IconButton","Paper","ListOutlined","Logout","ExpandLess","ExpandMore","ChevronLeft","Dashboard","CanAccess","useIsExistAuthentication","useLogout","useTitle","useTranslate","useRouterContext","useRouterType","useLink","useMenu","useRefineContext","useActiveAuthProvider","pickNotDeprecated","useWarnAboutChange","pickNotDeprecated","useState","isEqual","useState","pickNotDeprecated","pageSize","data","isEqual","useContext","useContext","useTranslate","useRouterType","Link","useLink","useRouterContext","useRefineContext","useMenu","useIsExistAuthentication","useTitle","useActiveAuthProvider","useWarnAboutChange","useLogout","useState","React","selectedKey","meta","pickNotDeprecated","CanAccess","Tooltip","ListItemButton","ListItemIcon","ListOutlined","ListItemText","ExpandLess","ExpandMore","Collapse","List","Dashboard","Logout","Box","Drawer","Paper","IconButton","ChevronLeft","React","useGetIdentity","useActiveAuthProvider","pickNotDeprecated","AppBar","Stack","Toolbar","Typography","Avatar","React","IconButton","Menu","React","IconButton","Menu","useActiveAuthProvider","useGetIdentity","pickNotDeprecated","React","AppBar","Toolbar","Stack","Typography","Avatar","Sider","Header","Title","React","Box","React","useRouterContext","useLink","useRouterType","MuiLink","SvgIcon","Typography","defaultIcon","defaultText","useRouterType","Link","useLink","useRouterContext","React","MuiLink","SvgIcon","Typography","React","useActiveAuthProvider","Button","Box","Typography","useTranslate","useActiveAuthProvider","useTranslate","Box","Typography","Button","React","Stack","Typography","Button","Link","Typography","Stack","Link","Button","React","React","React","useState","useRouterType","useTranslate","Stack","Button","Tooltip","Typography","Grid","useState","useRouterType","useTranslate","React","Grid","Typography","Stack","Tooltip","Button","React","React","useActiveAuthProvider","useForm","Button","TextField","Box","Typography","Container","Card","CardContent","Checkbox","FormControlLabel","MuiLink","Stack","useLogin","useTranslate","useRouterContext","useRouterType","useLink","LoginPage","useForm","useActiveAuthProvider","useLogin","useTranslate","useRouterType","Link","useLink","useRouterContext","Stack","Button","Card","CardContent","Typography","Box","TextField","FormControlLabel","Checkbox","MuiLink","Container","React","useActiveAuthProvider","useForm","Button","TextField","Box","Typography","Container","Card","CardContent","Divider","Stack","MuiLink","useTranslate","useRouterContext","useRouterType","useLink","useForm","useActiveAuthProvider","useTranslate","useRouterType","Link","useLink","useRouterContext","Stack","Button","Divider","Card","CardContent","Typography","Box","TextField","MuiLink","Container","Button","TextField","Box","Typography","Container","Card","CardContent","MuiLink","useForm","React","useLink","useRouterContext","useRouterType","useTranslate","useForm","useTranslate","useRouterType","Link","useLink","useRouterContext","Card","CardContent","Typography","Box","TextField","MuiLink","Button","Container","React","useActiveAuthProvider","useForm","Button","TextField","Box","Typography","Container","Card","CardContent","useTranslate","useForm","useActiveAuthProvider","useTranslate","Card","CardContent","Typography","Box","TextField","Button","Container","React","LoginPage","React","useNavigation","useTranslate","useRefineContext","useRouterType","useResource","Card","CardContent","IconButton","Typography","Box","useTranslate","useRefineContext","useRouterType","useNavigation","useResource","React","Card","Typography","IconButton","Box","CardContent","React","useNavigation","useTranslate","useUserFriendlyName","useRefineContext","useResource","useRouterType","useBack","useGo","Card","CardHeader","IconButton","CardContent","CardActions","Typography","Box","ArrowBackIcon","RefinePageHeaderClassNames","useTranslate","useRefineContext","useRouterType","useBack","useGo","useNavigation","useUserFriendlyName","useResource","React","Box","Card","CardHeader","Typography","RefinePageHeaderClassNames","IconButton","ArrowBackIcon","CardContent","CardActions","React","useTranslate","useUserFriendlyName","useRefineContext","useRouterType","useResource","Card","CardHeader","CardContent","Typography","Box","RefinePageHeaderClassNames","List","useTranslate","useRefineContext","useUserFriendlyName","useRouterType","useResource","React","Card","CardHeader","Typography","RefinePageHeaderClassNames","Box","CardContent","React","useNavigation","useTranslate","useUserFriendlyName","useRefineContext","useRouterType","useBack","useGo","useResource","useToPath","Card","CardActions","CardContent","CardHeader","IconButton","Box","Typography","ArrowBackIcon","RefinePageHeaderClassNames","useTranslate","useRefineContext","useRouterType","useBack","useGo","useNavigation","useUserFriendlyName","useResource","useToPath","React","Card","CardHeader","Typography","RefinePageHeaderClassNames","IconButton","ArrowBackIcon","Box","CardContent","CardActions","React","Button","React","Button","React","RefineButtonClassNames","RefineButtonTestIds","Button","React","Button","RefineButtonTestIds","RefineButtonClassNames","React","RefineButtonClassNames","RefineButtonTestIds","Button","React","RefineButtonTestIds","RefineButtonClassNames","Button","React","RefineButtonClassNames","RefineButtonTestIds","LoadingButton","React","LoadingButton","RefineButtonTestIds","RefineButtonClassNames","React","RefineButtonClassNames","RefineButtonTestIds","Button","React","Button","RefineButtonTestIds","RefineButtonClassNames","React","RefineButtonClassNames","RefineButtonTestIds","Button","ListOutlined","React","Button","ListOutlined","RefineButtonTestIds","RefineButtonClassNames","React","RefineButtonClassNames","RefineButtonTestIds","LoadingButton","React","LoadingButton","RefineButtonTestIds","RefineButtonClassNames","React","RefineButtonClassNames","RefineButtonTestIds","LoadingButton","React","LoadingButton","RefineButtonTestIds","RefineButtonClassNames","React","RefineButtonClassNames","RefineButtonTestIds","Button","AddBoxOutlined","React","Button","AddBoxOutlined","RefineButtonTestIds","RefineButtonClassNames","React","RefineButtonClassNames","RefineButtonTestIds","LoadingButton","ImportExportOutlined","React","LoadingButton","ImportExportOutlined","RefineButtonTestIds","RefineButtonClassNames","React","useState","useEffect","Box","Typography","useState","useEffect","React","Box","Typography","React","Typography","TextField","React","Typography","React","React","React","Typography","Link","React","Typography","Link","React","Tooltip","React","Tooltip","React","Typography","React","Typography","React","React","React","Link","Typography","React","Typography","Link","React","Typography","React","Typography","React","React","React","useLink","useRefineContext","useResource","useRouterContext","useRouterType","Typography","Link","Grid","useRouterType","useLink","useRouterContext","useRefineContext","useResource","React","Link","Grid","Typography","React","useTranslate","Typography","React","useTranslate","Typography","React","Box","IconButton","Typography","notificationProvider","key","React","IconButton","Box","Typography","React","React"]}