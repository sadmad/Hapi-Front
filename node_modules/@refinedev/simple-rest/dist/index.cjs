var W=Object.create;var $=Object.defineProperty;var B=Object.getOwnPropertyDescriptor;var E=Object.getOwnPropertyNames;var Q=Object.getPrototypeOf,A=Object.prototype.hasOwnProperty;var D=(e,r)=>{for(var t in r)$(e,t,{get:r[t],enumerable:!0})},O=(e,r,t,o)=>{if(r&&typeof r=="object"||typeof r=="function")for(let s of E(r))!A.call(e,s)&&s!==t&&$(e,s,{get:()=>r[s],enumerable:!(o=B(r,s))||o.enumerable});return e};var H=(e,r,t)=>(t=e!=null?W(Q(e)):{},O(r||!e||!e.__esModule?$(t,"default",{value:e,enumerable:!0}):t,e)),R=e=>O($({},"__esModule",{value:!0}),e);var L={};D(L,{axiosInstance:()=>h,default:()=>z,generateFilter:()=>g,generateSort:()=>f,mapOperator:()=>x,stringify:()=>T.stringify});module.exports=R(L);var T=require("query-string");var y=require("query-string");var x=e=>{switch(e){case"ne":case"gte":case"lte":return`_${e}`;case"contains":return"_like";default:return""}};var f=e=>{if(e&&e.length>0){let r=[],t=[];return e.map(o=>{r.push(o.field),t.push(o.order)}),{_sort:r,_order:t}}};var g=e=>{let r={};return e&&e.map(t=>{if(t.operator==="or"||t.operator==="and")throw new Error(`[@refinedev/simple-rest]: \`operator: ${t.operator}\` is not supported. You can create custom data provider. https://refine.dev/docs/api-reference/core/providers/data-provider/#creating-a-data-provider`);if("field"in t){let{field:o,operator:s,value:n}=t;if(o==="q"){r[o]=n;return}let d=x(s);r[`${o}${d}`]=n}}),r};var F=H(require("axios")),h=F.default.create();h.interceptors.response.use(e=>e,e=>{var t,o,s;let r={...e,message:(o=(t=e.response)==null?void 0:t.data)==null?void 0:o.message,statusCode:(s=e.response)==null?void 0:s.status};return Promise.reject(r)});var S=(e,r=h)=>({getList:async({resource:t,pagination:o,filters:s,sorters:n,meta:d})=>{let i=`${e}/${t}`,{current:c=1,pageSize:a=10,mode:p="server"}=o??{},{headers:v,method:m}=d??{},M=m??"get",l=g(s),u={};p==="server"&&(u._start=(c-1)*a,u._end=c*a);let _=f(n);if(_){let{_sort:P,_order:I}=_;u._sort=P.join(","),u._order=I.join(",")}let w={...u,...l},b=Object.keys(w).length?`${i}?${(0,y.stringify)(w)}`:i,{data:q,headers:j}=await r[M](b,{headers:v}),k=+j["x-total-count"];return{data:q,total:k||q.length}},getMany:async({resource:t,ids:o,meta:s})=>{let{headers:n,method:d}=s??{},i=d??"get",{data:c}=await r[i](`${e}/${t}?${(0,y.stringify)({id:o})}`,{headers:n});return{data:c}},create:async({resource:t,variables:o,meta:s})=>{let n=`${e}/${t}`,{headers:d,method:i}=s??{},c=i??"post",{data:a}=await r[c](n,o,{headers:d});return{data:a}},update:async({resource:t,id:o,variables:s,meta:n})=>{let d=`${e}/${t}/${o}`,{headers:i,method:c}=n??{},a=c??"patch",{data:p}=await r[a](d,s,{headers:i});return{data:p}},getOne:async({resource:t,id:o,meta:s})=>{let n=`${e}/${t}/${o}`,{headers:d,method:i}=s??{},c=i??"get",{data:a}=await r[c](n,{headers:d});return{data:a}},deleteOne:async({resource:t,id:o,variables:s,meta:n})=>{let d=`${e}/${t}/${o}`,{headers:i,method:c}=n??{},a=c??"delete",{data:p}=await r[a](d,{data:s,headers:i});return{data:p}},getApiUrl:()=>e,custom:async({url:t,method:o,filters:s,sorters:n,payload:d,query:i,headers:c})=>{let a=`${t}?`;if(n){let m=f(n);if(m){let{_sort:M,_order:l}=m,u={_sort:M.join(","),_order:l.join(",")};a=`${a}&${(0,y.stringify)(u)}`}}if(s){let m=g(s);a=`${a}&${(0,y.stringify)(m)}`}i&&(a=`${a}&${(0,y.stringify)(i)}`);let p;switch(o){case"put":case"post":case"patch":p=await r[o](t,d,{headers:c});break;case"delete":p=await r.delete(t,{data:d,headers:c});break;default:p=await r.get(a,{headers:c});break}let{data:v}=p;return Promise.resolve({data:v})}});var z=S;
//# sourceMappingURL=index.cjs.map